num_steps 145;
topology{
nodes {
S0,
S1,
S2,
S3,
S4,
S5,
S6,
S7,
S8,
S9,
S10,
S11,
S12,
S13,
S14,
S15,
S16,
S17,
S18,
S19,
S20,
S21,
S22,
S23,
S24,
S25,
S26,
S27,
S28,
S29
}
links {
(S0,pt1) <-> (S1,pt1),
(S0,pt2) <-> (S2,pt1),
(S0,pt3) <-> (S3,pt1),
(S0,pt4) <-> (S4,pt1),
(S0,pt5) <-> (S5,pt1),
(S0,pt6) <-> (S6,pt1),
(S0,pt7) <-> (S7,pt1),
(S0,pt8) <-> (S8,pt1),
(S0,pt9) <-> (S9,pt1),
(S0,pt10) <-> (S10,pt1),
(S0,pt11) <-> (S11,pt1),
(S0,pt12) <-> (S12,pt1),
(S0,pt13) <-> (S13,pt1),
(S0,pt14) <-> (S14,pt1),
(S0,pt15) <-> (S15,pt1),
(S0,pt16) <-> (S16,pt1),
(S0,pt17) <-> (S17,pt1),
(S0,pt18) <-> (S18,pt1),
(S0,pt19) <-> (S19,pt1),
(S0,pt20) <-> (S20,pt1),
(S0,pt21) <-> (S21,pt1),
(S0,pt22) <-> (S22,pt1),
(S0,pt23) <-> (S23,pt1),
(S0,pt24) <-> (S24,pt1),
(S0,pt25) <-> (S25,pt1),
(S0,pt26) <-> (S26,pt1),
(S0,pt27) <-> (S27,pt1),
(S0,pt28) <-> (S28,pt1),
(S0,pt29) <-> (S29,pt1),
(S1,pt2) <-> (S2,pt2),
(S1,pt3) <-> (S3,pt2),
(S1,pt4) <-> (S4,pt2),
(S1,pt5) <-> (S5,pt2),
(S1,pt6) <-> (S6,pt2),
(S1,pt7) <-> (S7,pt2),
(S1,pt8) <-> (S8,pt2),
(S1,pt9) <-> (S9,pt2),
(S1,pt10) <-> (S10,pt2),
(S1,pt11) <-> (S11,pt2),
(S1,pt12) <-> (S12,pt2),
(S1,pt13) <-> (S13,pt2),
(S1,pt14) <-> (S14,pt2),
(S1,pt15) <-> (S15,pt2),
(S1,pt16) <-> (S16,pt2),
(S1,pt17) <-> (S17,pt2),
(S1,pt18) <-> (S18,pt2),
(S1,pt19) <-> (S19,pt2),
(S1,pt20) <-> (S20,pt2),
(S1,pt21) <-> (S21,pt2),
(S1,pt22) <-> (S22,pt2),
(S1,pt23) <-> (S23,pt2),
(S1,pt24) <-> (S24,pt2),
(S1,pt25) <-> (S25,pt2),
(S1,pt26) <-> (S26,pt2),
(S1,pt27) <-> (S27,pt2),
(S1,pt28) <-> (S28,pt2),
(S1,pt29) <-> (S29,pt2),
(S2,pt3) <-> (S3,pt3),
(S2,pt4) <-> (S4,pt3),
(S2,pt5) <-> (S5,pt3),
(S2,pt6) <-> (S6,pt3),
(S2,pt7) <-> (S7,pt3),
(S2,pt8) <-> (S8,pt3),
(S2,pt9) <-> (S9,pt3),
(S2,pt10) <-> (S10,pt3),
(S2,pt11) <-> (S11,pt3),
(S2,pt12) <-> (S12,pt3),
(S2,pt13) <-> (S13,pt3),
(S2,pt14) <-> (S14,pt3),
(S2,pt15) <-> (S15,pt3),
(S2,pt16) <-> (S16,pt3),
(S2,pt17) <-> (S17,pt3),
(S2,pt18) <-> (S18,pt3),
(S2,pt19) <-> (S19,pt3),
(S2,pt20) <-> (S20,pt3),
(S2,pt21) <-> (S21,pt3),
(S2,pt22) <-> (S22,pt3),
(S2,pt23) <-> (S23,pt3),
(S2,pt24) <-> (S24,pt3),
(S2,pt25) <-> (S25,pt3),
(S2,pt26) <-> (S26,pt3),
(S2,pt27) <-> (S27,pt3),
(S2,pt28) <-> (S28,pt3),
(S2,pt29) <-> (S29,pt3),
(S3,pt4) <-> (S4,pt4),
(S3,pt5) <-> (S5,pt4),
(S3,pt6) <-> (S6,pt4),
(S3,pt7) <-> (S7,pt4),
(S3,pt8) <-> (S8,pt4),
(S3,pt9) <-> (S9,pt4),
(S3,pt10) <-> (S10,pt4),
(S3,pt11) <-> (S11,pt4),
(S3,pt12) <-> (S12,pt4),
(S3,pt13) <-> (S13,pt4),
(S3,pt14) <-> (S14,pt4),
(S3,pt15) <-> (S15,pt4),
(S3,pt16) <-> (S16,pt4),
(S3,pt17) <-> (S17,pt4),
(S3,pt18) <-> (S18,pt4),
(S3,pt19) <-> (S19,pt4),
(S3,pt20) <-> (S20,pt4),
(S3,pt21) <-> (S21,pt4),
(S3,pt22) <-> (S22,pt4),
(S3,pt23) <-> (S23,pt4),
(S3,pt24) <-> (S24,pt4),
(S3,pt25) <-> (S25,pt4),
(S3,pt26) <-> (S26,pt4),
(S3,pt27) <-> (S27,pt4),
(S3,pt28) <-> (S28,pt4),
(S3,pt29) <-> (S29,pt4),
(S4,pt5) <-> (S5,pt5),
(S4,pt6) <-> (S6,pt5),
(S4,pt7) <-> (S7,pt5),
(S4,pt8) <-> (S8,pt5),
(S4,pt9) <-> (S9,pt5),
(S4,pt10) <-> (S10,pt5),
(S4,pt11) <-> (S11,pt5),
(S4,pt12) <-> (S12,pt5),
(S4,pt13) <-> (S13,pt5),
(S4,pt14) <-> (S14,pt5),
(S4,pt15) <-> (S15,pt5),
(S4,pt16) <-> (S16,pt5),
(S4,pt17) <-> (S17,pt5),
(S4,pt18) <-> (S18,pt5),
(S4,pt19) <-> (S19,pt5),
(S4,pt20) <-> (S20,pt5),
(S4,pt21) <-> (S21,pt5),
(S4,pt22) <-> (S22,pt5),
(S4,pt23) <-> (S23,pt5),
(S4,pt24) <-> (S24,pt5),
(S4,pt25) <-> (S25,pt5),
(S4,pt26) <-> (S26,pt5),
(S4,pt27) <-> (S27,pt5),
(S4,pt28) <-> (S28,pt5),
(S4,pt29) <-> (S29,pt5),
(S5,pt6) <-> (S6,pt6),
(S5,pt7) <-> (S7,pt6),
(S5,pt8) <-> (S8,pt6),
(S5,pt9) <-> (S9,pt6),
(S5,pt10) <-> (S10,pt6),
(S5,pt11) <-> (S11,pt6),
(S5,pt12) <-> (S12,pt6),
(S5,pt13) <-> (S13,pt6),
(S5,pt14) <-> (S14,pt6),
(S5,pt15) <-> (S15,pt6),
(S5,pt16) <-> (S16,pt6),
(S5,pt17) <-> (S17,pt6),
(S5,pt18) <-> (S18,pt6),
(S5,pt19) <-> (S19,pt6),
(S5,pt20) <-> (S20,pt6),
(S5,pt21) <-> (S21,pt6),
(S5,pt22) <-> (S22,pt6),
(S5,pt23) <-> (S23,pt6),
(S5,pt24) <-> (S24,pt6),
(S5,pt25) <-> (S25,pt6),
(S5,pt26) <-> (S26,pt6),
(S5,pt27) <-> (S27,pt6),
(S5,pt28) <-> (S28,pt6),
(S5,pt29) <-> (S29,pt6),
(S6,pt7) <-> (S7,pt7),
(S6,pt8) <-> (S8,pt7),
(S6,pt9) <-> (S9,pt7),
(S6,pt10) <-> (S10,pt7),
(S6,pt11) <-> (S11,pt7),
(S6,pt12) <-> (S12,pt7),
(S6,pt13) <-> (S13,pt7),
(S6,pt14) <-> (S14,pt7),
(S6,pt15) <-> (S15,pt7),
(S6,pt16) <-> (S16,pt7),
(S6,pt17) <-> (S17,pt7),
(S6,pt18) <-> (S18,pt7),
(S6,pt19) <-> (S19,pt7),
(S6,pt20) <-> (S20,pt7),
(S6,pt21) <-> (S21,pt7),
(S6,pt22) <-> (S22,pt7),
(S6,pt23) <-> (S23,pt7),
(S6,pt24) <-> (S24,pt7),
(S6,pt25) <-> (S25,pt7),
(S6,pt26) <-> (S26,pt7),
(S6,pt27) <-> (S27,pt7),
(S6,pt28) <-> (S28,pt7),
(S6,pt29) <-> (S29,pt7),
(S7,pt8) <-> (S8,pt8),
(S7,pt9) <-> (S9,pt8),
(S7,pt10) <-> (S10,pt8),
(S7,pt11) <-> (S11,pt8),
(S7,pt12) <-> (S12,pt8),
(S7,pt13) <-> (S13,pt8),
(S7,pt14) <-> (S14,pt8),
(S7,pt15) <-> (S15,pt8),
(S7,pt16) <-> (S16,pt8),
(S7,pt17) <-> (S17,pt8),
(S7,pt18) <-> (S18,pt8),
(S7,pt19) <-> (S19,pt8),
(S7,pt20) <-> (S20,pt8),
(S7,pt21) <-> (S21,pt8),
(S7,pt22) <-> (S22,pt8),
(S7,pt23) <-> (S23,pt8),
(S7,pt24) <-> (S24,pt8),
(S7,pt25) <-> (S25,pt8),
(S7,pt26) <-> (S26,pt8),
(S7,pt27) <-> (S27,pt8),
(S7,pt28) <-> (S28,pt8),
(S7,pt29) <-> (S29,pt8),
(S8,pt9) <-> (S9,pt9),
(S8,pt10) <-> (S10,pt9),
(S8,pt11) <-> (S11,pt9),
(S8,pt12) <-> (S12,pt9),
(S8,pt13) <-> (S13,pt9),
(S8,pt14) <-> (S14,pt9),
(S8,pt15) <-> (S15,pt9),
(S8,pt16) <-> (S16,pt9),
(S8,pt17) <-> (S17,pt9),
(S8,pt18) <-> (S18,pt9),
(S8,pt19) <-> (S19,pt9),
(S8,pt20) <-> (S20,pt9),
(S8,pt21) <-> (S21,pt9),
(S8,pt22) <-> (S22,pt9),
(S8,pt23) <-> (S23,pt9),
(S8,pt24) <-> (S24,pt9),
(S8,pt25) <-> (S25,pt9),
(S8,pt26) <-> (S26,pt9),
(S8,pt27) <-> (S27,pt9),
(S8,pt28) <-> (S28,pt9),
(S8,pt29) <-> (S29,pt9),
(S9,pt10) <-> (S10,pt10),
(S9,pt11) <-> (S11,pt10),
(S9,pt12) <-> (S12,pt10),
(S9,pt13) <-> (S13,pt10),
(S9,pt14) <-> (S14,pt10),
(S9,pt15) <-> (S15,pt10),
(S9,pt16) <-> (S16,pt10),
(S9,pt17) <-> (S17,pt10),
(S9,pt18) <-> (S18,pt10),
(S9,pt19) <-> (S19,pt10),
(S9,pt20) <-> (S20,pt10),
(S9,pt21) <-> (S21,pt10),
(S9,pt22) <-> (S22,pt10),
(S9,pt23) <-> (S23,pt10),
(S9,pt24) <-> (S24,pt10),
(S9,pt25) <-> (S25,pt10),
(S9,pt26) <-> (S26,pt10),
(S9,pt27) <-> (S27,pt10),
(S9,pt28) <-> (S28,pt10),
(S9,pt29) <-> (S29,pt10),
(S10,pt11) <-> (S11,pt11),
(S10,pt12) <-> (S12,pt11),
(S10,pt13) <-> (S13,pt11),
(S10,pt14) <-> (S14,pt11),
(S10,pt15) <-> (S15,pt11),
(S10,pt16) <-> (S16,pt11),
(S10,pt17) <-> (S17,pt11),
(S10,pt18) <-> (S18,pt11),
(S10,pt19) <-> (S19,pt11),
(S10,pt20) <-> (S20,pt11),
(S10,pt21) <-> (S21,pt11),
(S10,pt22) <-> (S22,pt11),
(S10,pt23) <-> (S23,pt11),
(S10,pt24) <-> (S24,pt11),
(S10,pt25) <-> (S25,pt11),
(S10,pt26) <-> (S26,pt11),
(S10,pt27) <-> (S27,pt11),
(S10,pt28) <-> (S28,pt11),
(S10,pt29) <-> (S29,pt11),
(S11,pt12) <-> (S12,pt12),
(S11,pt13) <-> (S13,pt12),
(S11,pt14) <-> (S14,pt12),
(S11,pt15) <-> (S15,pt12),
(S11,pt16) <-> (S16,pt12),
(S11,pt17) <-> (S17,pt12),
(S11,pt18) <-> (S18,pt12),
(S11,pt19) <-> (S19,pt12),
(S11,pt20) <-> (S20,pt12),
(S11,pt21) <-> (S21,pt12),
(S11,pt22) <-> (S22,pt12),
(S11,pt23) <-> (S23,pt12),
(S11,pt24) <-> (S24,pt12),
(S11,pt25) <-> (S25,pt12),
(S11,pt26) <-> (S26,pt12),
(S11,pt27) <-> (S27,pt12),
(S11,pt28) <-> (S28,pt12),
(S11,pt29) <-> (S29,pt12),
(S12,pt13) <-> (S13,pt13),
(S12,pt14) <-> (S14,pt13),
(S12,pt15) <-> (S15,pt13),
(S12,pt16) <-> (S16,pt13),
(S12,pt17) <-> (S17,pt13),
(S12,pt18) <-> (S18,pt13),
(S12,pt19) <-> (S19,pt13),
(S12,pt20) <-> (S20,pt13),
(S12,pt21) <-> (S21,pt13),
(S12,pt22) <-> (S22,pt13),
(S12,pt23) <-> (S23,pt13),
(S12,pt24) <-> (S24,pt13),
(S12,pt25) <-> (S25,pt13),
(S12,pt26) <-> (S26,pt13),
(S12,pt27) <-> (S27,pt13),
(S12,pt28) <-> (S28,pt13),
(S12,pt29) <-> (S29,pt13),
(S13,pt14) <-> (S14,pt14),
(S13,pt15) <-> (S15,pt14),
(S13,pt16) <-> (S16,pt14),
(S13,pt17) <-> (S17,pt14),
(S13,pt18) <-> (S18,pt14),
(S13,pt19) <-> (S19,pt14),
(S13,pt20) <-> (S20,pt14),
(S13,pt21) <-> (S21,pt14),
(S13,pt22) <-> (S22,pt14),
(S13,pt23) <-> (S23,pt14),
(S13,pt24) <-> (S24,pt14),
(S13,pt25) <-> (S25,pt14),
(S13,pt26) <-> (S26,pt14),
(S13,pt27) <-> (S27,pt14),
(S13,pt28) <-> (S28,pt14),
(S13,pt29) <-> (S29,pt14),
(S14,pt15) <-> (S15,pt15),
(S14,pt16) <-> (S16,pt15),
(S14,pt17) <-> (S17,pt15),
(S14,pt18) <-> (S18,pt15),
(S14,pt19) <-> (S19,pt15),
(S14,pt20) <-> (S20,pt15),
(S14,pt21) <-> (S21,pt15),
(S14,pt22) <-> (S22,pt15),
(S14,pt23) <-> (S23,pt15),
(S14,pt24) <-> (S24,pt15),
(S14,pt25) <-> (S25,pt15),
(S14,pt26) <-> (S26,pt15),
(S14,pt27) <-> (S27,pt15),
(S14,pt28) <-> (S28,pt15),
(S14,pt29) <-> (S29,pt15),
(S15,pt16) <-> (S16,pt16),
(S15,pt17) <-> (S17,pt16),
(S15,pt18) <-> (S18,pt16),
(S15,pt19) <-> (S19,pt16),
(S15,pt20) <-> (S20,pt16),
(S15,pt21) <-> (S21,pt16),
(S15,pt22) <-> (S22,pt16),
(S15,pt23) <-> (S23,pt16),
(S15,pt24) <-> (S24,pt16),
(S15,pt25) <-> (S25,pt16),
(S15,pt26) <-> (S26,pt16),
(S15,pt27) <-> (S27,pt16),
(S15,pt28) <-> (S28,pt16),
(S15,pt29) <-> (S29,pt16),
(S16,pt17) <-> (S17,pt17),
(S16,pt18) <-> (S18,pt17),
(S16,pt19) <-> (S19,pt17),
(S16,pt20) <-> (S20,pt17),
(S16,pt21) <-> (S21,pt17),
(S16,pt22) <-> (S22,pt17),
(S16,pt23) <-> (S23,pt17),
(S16,pt24) <-> (S24,pt17),
(S16,pt25) <-> (S25,pt17),
(S16,pt26) <-> (S26,pt17),
(S16,pt27) <-> (S27,pt17),
(S16,pt28) <-> (S28,pt17),
(S16,pt29) <-> (S29,pt17),
(S17,pt18) <-> (S18,pt18),
(S17,pt19) <-> (S19,pt18),
(S17,pt20) <-> (S20,pt18),
(S17,pt21) <-> (S21,pt18),
(S17,pt22) <-> (S22,pt18),
(S17,pt23) <-> (S23,pt18),
(S17,pt24) <-> (S24,pt18),
(S17,pt25) <-> (S25,pt18),
(S17,pt26) <-> (S26,pt18),
(S17,pt27) <-> (S27,pt18),
(S17,pt28) <-> (S28,pt18),
(S17,pt29) <-> (S29,pt18),
(S18,pt19) <-> (S19,pt19),
(S18,pt20) <-> (S20,pt19),
(S18,pt21) <-> (S21,pt19),
(S18,pt22) <-> (S22,pt19),
(S18,pt23) <-> (S23,pt19),
(S18,pt24) <-> (S24,pt19),
(S18,pt25) <-> (S25,pt19),
(S18,pt26) <-> (S26,pt19),
(S18,pt27) <-> (S27,pt19),
(S18,pt28) <-> (S28,pt19),
(S18,pt29) <-> (S29,pt19),
(S19,pt20) <-> (S20,pt20),
(S19,pt21) <-> (S21,pt20),
(S19,pt22) <-> (S22,pt20),
(S19,pt23) <-> (S23,pt20),
(S19,pt24) <-> (S24,pt20),
(S19,pt25) <-> (S25,pt20),
(S19,pt26) <-> (S26,pt20),
(S19,pt27) <-> (S27,pt20),
(S19,pt28) <-> (S28,pt20),
(S19,pt29) <-> (S29,pt20),
(S20,pt21) <-> (S21,pt21),
(S20,pt22) <-> (S22,pt21),
(S20,pt23) <-> (S23,pt21),
(S20,pt24) <-> (S24,pt21),
(S20,pt25) <-> (S25,pt21),
(S20,pt26) <-> (S26,pt21),
(S20,pt27) <-> (S27,pt21),
(S20,pt28) <-> (S28,pt21),
(S20,pt29) <-> (S29,pt21),
(S21,pt22) <-> (S22,pt22),
(S21,pt23) <-> (S23,pt22),
(S21,pt24) <-> (S24,pt22),
(S21,pt25) <-> (S25,pt22),
(S21,pt26) <-> (S26,pt22),
(S21,pt27) <-> (S27,pt22),
(S21,pt28) <-> (S28,pt22),
(S21,pt29) <-> (S29,pt22),
(S22,pt23) <-> (S23,pt23),
(S22,pt24) <-> (S24,pt23),
(S22,pt25) <-> (S25,pt23),
(S22,pt26) <-> (S26,pt23),
(S22,pt27) <-> (S27,pt23),
(S22,pt28) <-> (S28,pt23),
(S22,pt29) <-> (S29,pt23),
(S23,pt24) <-> (S24,pt24),
(S23,pt25) <-> (S25,pt24),
(S23,pt26) <-> (S26,pt24),
(S23,pt27) <-> (S27,pt24),
(S23,pt28) <-> (S28,pt24),
(S23,pt29) <-> (S29,pt24),
(S24,pt25) <-> (S25,pt25),
(S24,pt26) <-> (S26,pt25),
(S24,pt27) <-> (S27,pt25),
(S24,pt28) <-> (S28,pt25),
(S24,pt29) <-> (S29,pt25),
(S25,pt26) <-> (S26,pt26),
(S25,pt27) <-> (S27,pt26),
(S25,pt28) <-> (S28,pt26),
(S25,pt29) <-> (S29,pt26),
(S26,pt27) <-> (S27,pt27),
(S26,pt28) <-> (S28,pt27),
(S26,pt29) <-> (S29,pt27),
(S27,pt28) <-> (S28,pt28),
(S27,pt29) <-> (S29,pt28),
(S28,pt29) <-> (S29,pt29),
}
}
packet_fields{ }
programs {
S0 -> first,
S1 -> node,
S2 -> node,
S3 -> node,
S4 -> node,
S5 -> node,
S6 -> node,
S7 -> node,
S8 -> node,
S9 -> node,
S10 -> node,
S11 -> node,
S12 -> node,
S13 -> node,
S14 -> node,
S15 -> node,
S16 -> node,
S17 -> node,
S18 -> node,
S19 -> node,
S20 -> node,
S21 -> node,
S22 -> node,
S23 -> node,
S24 -> node,
S25 -> node,
S26 -> node,
S27 -> node,
S28 -> node,
S29 -> node,
}
query expectation(0
+ infected@S0
+ infected@S1
+ infected@S2
+ infected@S3
+ infected@S4
+ infected@S5
+ infected@S6
+ infected@S7
+ infected@S8
+ infected@S9
+ infected@S10
+ infected@S11
+ infected@S12
+ infected@S13
+ infected@S14
+ infected@S15
+ infected@S16
+ infected@S17
+ infected@S18
+ infected@S19
+ infected@S20
+ infected@S21
+ infected@S22
+ infected@S23
+ infected@S24
+ infected@S25
+ infected@S26
+ infected@S27
+ infected@S28
+ infected@S29
);

def first(pkt,port) state infected(0){
	if infected == 0 {
		infected = 1;
		new;
		fwd(uniformInt(1,29));
	}else{ drop; }
}

def node(pkt,port) state infected(0){
	if infected == 0{
		infected = 1;
		dup;
		fwd(uniformInt(1,29));
		fwd(uniformInt(1,29));
	}else{ drop; }
}

def scheduler(){
	actions := ([]: (R x R)[]);
	for i in [0..k){
		if (Q_in@i).size() > 0 { actions ~= [(RunSw,i)]; }
		if (Q_out@i).size() > 0 { actions ~= [(FwdQ,i)]; }
	}
	return actions[uniformInt(0,actions.length-1)];
}

