statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.route1 = 0
particle-size: 1
statement: this.route2 = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.route1 = 0
particle-size: 1
statement: this.route2 = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.__state = 0
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.curAction = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.dst = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.dst = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 30 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.dst = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.dst = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 2
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (action,node) := this'.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__H0.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.dst = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.dst = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 2
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 1
statement: this'.route2 = 1 + 1
particle-size: 1
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 4
repetition: 3
statement: __d.__step()
particle-size: 4
particle-size: 4
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: (action,node) := this'.scheduler()
particle-size: 4
particle-size: 4
statement: actions := ([]: (R × R)[])
particle-size: 4
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
loop-index: 2
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 3
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
loop-index: 4
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 4
particle-size: 4
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.__H0.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 4
particle-size: 4
statement: this.dst = 0
particle-size: 4
statement: return this
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = [x] ~ this'.data
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 3
particle-size: 3
statement: this.dst = 0
particle-size: 3
statement: return this
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = [x] ~ this'.data
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 3
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 1
statement: this'.route2 = 1 + 1
particle-size: 1
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 8
repetition: 4
statement: __d.__step()
particle-size: 8
particle-size: 8
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (action,node) := this'.scheduler()
particle-size: 8
particle-size: 8
statement: actions := ([]: (R × R)[])
particle-size: 8
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(1,i)]
particle-size: 5
loop-index: 1
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 2
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 3
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 4
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 8
particle-size: 8
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.__H0.__run()
particle-size: 8
particle-size: 8
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 8
particle-size: 8
statement: this.dst = 0
particle-size: 8
statement: return this
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = [x] ~ this'.data
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.dst = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 5
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.__S0.__run()
particle-size: 3
particle-size: 3
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 3
statement: this'.route2 = 1 + 1
particle-size: 3
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.__S1.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.__S2.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 15
repetition: 5
statement: __d.__step()
particle-size: 15
particle-size: 15
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: (action,node) := this'.scheduler()
particle-size: 15
particle-size: 15
statement: actions := ([]: (R × R)[])
particle-size: 15
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(0,i)]
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 1
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
loop-index: 2
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 3
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(1,i)]
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 15
particle-size: 15
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.__H0.__run()
particle-size: 15
particle-size: 15
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 15
particle-size: 15
statement: this.dst = 0
particle-size: 15
statement: return this
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = [x] ~ this'.data
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 6
particle-size: 6
statement: this.dst = 0
particle-size: 6
statement: return this
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 6
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.__S0.__run()
particle-size: 6
particle-size: 6
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 6
statement: this'.route2 = 1 + 1
particle-size: 6
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 6
particle-size: 6
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.__S1.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.__S2.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 28
repetition: 6
statement: __d.__step()
particle-size: 28
particle-size: 28
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: (action,node) := this'.scheduler()
particle-size: 28
particle-size: 28
statement: actions := ([]: (R × R)[])
particle-size: 28
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 28
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
statement: actions ~= [(0,i)]
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 1
particle-size: 28
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
loop-index: 2
particle-size: 28
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
statement: actions ~= [(0,i)]
particle-size: 11
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 3
particle-size: 28
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 28
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
statement: actions ~= [(1,i)]
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 28
particle-size: 28
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 16
particle-size: 16
particle-size: 16
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.__H0.__run()
particle-size: 27
particle-size: 27
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 27
particle-size: 27
statement: this.dst = 0
particle-size: 27
statement: return this
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = [x] ~ this'.data
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 10
particle-size: 10
statement: this.dst = 0
particle-size: 10
statement: return this
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = [x] ~ this'.data
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 10
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.__S0.__run()
particle-size: 11
particle-size: 11
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 11
statement: this'.route2 = 1 + 1
particle-size: 11
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 11
particle-size: 11
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 22
particle-size: 22
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 11
particle-size: 11
statement: r := this'.front()
particle-size: 11
particle-size: 11
statement: return this'.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.popFront()
particle-size: 11
particle-size: 11
statement: this'.data = this'.data[1..this'.size()]
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.data = this'.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 11
particle-size: 11
statement: r := this'.front()
particle-size: 11
particle-size: 11
statement: return this'.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.popFront()
particle-size: 11
particle-size: 11
statement: this'.data = this'.data[1..this'.size()]
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.data = this'.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.__S1.__run()
particle-size: 4
particle-size: 4
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.__S2.__run()
particle-size: 3
particle-size: 3
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 47
repetition: 7
statement: __d.__step()
particle-size: 47
particle-size: 47
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: (action,node) := this'.scheduler()
particle-size: 47
particle-size: 47
statement: actions := ([]: (R × R)[])
particle-size: 47
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 47
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
statement: actions ~= [(0,i)]
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
statement: actions ~= [(1,i)]
particle-size: 25
loop-index: 1
particle-size: 47
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
loop-index: 2
particle-size: 47
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
statement: actions ~= [(0,i)]
particle-size: 19
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
statement: actions ~= [(1,i)]
particle-size: 24
loop-index: 3
particle-size: 47
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 4
particle-size: 47
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
statement: actions ~= [(1,i)]
particle-size: 3
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 47
particle-size: 47
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 25
particle-size: 25
particle-size: 25
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 25
particle-size: 25
particle-size: 25
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.__H0.__run()
particle-size: 45
particle-size: 45
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 45
particle-size: 45
statement: this.dst = 0
particle-size: 45
statement: return this
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = [x] ~ this'.data
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 10
particle-size: 10
statement: this.dst = 0
particle-size: 10
statement: return this
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = [x] ~ this'.data
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 10
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.Q_in.popFront()
particle-size: 35
particle-size: 35
statement: this'.data = this'.data[1..this'.size()]
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.Q_in.popFront()
particle-size: 35
particle-size: 35
statement: this'.data = this'.data[1..this'.size()]
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.__S0.__run()
particle-size: 19
particle-size: 19
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 19
statement: this'.route2 = 1 + 1
particle-size: 19
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 19
particle-size: 19
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 38
particle-size: 38
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 19
particle-size: 19
statement: r := this'.front()
particle-size: 19
particle-size: 19
statement: return this'.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 19
particle-size: 19
statement: r := this'.front()
particle-size: 19
particle-size: 19
statement: return this'.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this'.__S1.__run()
particle-size: 7
particle-size: 7
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this'.__S2.__run()
particle-size: 6
particle-size: 6
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 75
repetition: 8
statement: __d.__step()
particle-size: 75
particle-size: 75
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: (action,node) := this'.scheduler()
particle-size: 75
particle-size: 75
statement: actions := ([]: (R × R)[])
particle-size: 75
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 69
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 33
loop-index: 1
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
loop-index: 2
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 40
loop-index: 3
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 4
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 6
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 75
particle-size: 75
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 33
particle-size: 33
statement: r := this'.front()
particle-size: 33
particle-size: 33
statement: return this'.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 129
particle-size: 129
statement: return this'.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.__H0.__run()
particle-size: 69
particle-size: 69
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 69
particle-size: 69
statement: this.dst = 0
particle-size: 69
statement: return this
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.data = [x] ~ this'.data
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.dst = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 12
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.Q_in.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 129
particle-size: 129
statement: return this'.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 4
statement: this'.Q_in.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 129
particle-size: 129
statement: return this'.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.__S0.__run()
particle-size: 29
particle-size: 29
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 29
statement: this'.route2 = 1 + 1
particle-size: 29
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 29
particle-size: 29
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 58
particle-size: 58
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 29
particle-size: 29
statement: r := this'.front()
particle-size: 29
particle-size: 29
statement: return this'.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.popFront()
particle-size: 29
particle-size: 29
statement: this'.data = this'.data[1..this'.size()]
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 29
particle-size: 29
statement: r := this'.front()
particle-size: 29
particle-size: 29
statement: return this'.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.popFront()
particle-size: 29
particle-size: 29
statement: this'.data = this'.data[1..this'.size()]
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 58
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.__S1.__run()
particle-size: 15
particle-size: 15
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.__S2.__run()
particle-size: 12
particle-size: 12
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 107
repetition: 9
statement: __d.__step()
particle-size: 107
particle-size: 107
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: (action,node) := this'.scheduler()
particle-size: 107
particle-size: 107
statement: actions := ([]: (R × R)[])
particle-size: 107
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 107
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
statement: actions ~= [(0,i)]
particle-size: 98
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
statement: actions ~= [(1,i)]
particle-size: 40
loop-index: 1
particle-size: 107
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
loop-index: 2
particle-size: 107
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
statement: actions ~= [(0,i)]
particle-size: 39
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
statement: actions ~= [(1,i)]
particle-size: 56
loop-index: 3
particle-size: 107
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
statement: actions ~= [(1,i)]
particle-size: 15
loop-index: 4
particle-size: 107
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
statement: actions ~= [(0,i)]
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
statement: actions ~= [(1,i)]
particle-size: 12
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 107
particle-size: 107
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 56
particle-size: 56
statement: r := this'.front()
particle-size: 56
particle-size: 56
statement: return this'.data[0]
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.popFront()
particle-size: 56
particle-size: 56
statement: this'.data = this'.data[1..this'.size()]
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return r
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 28
particle-size: 28
particle-size: 28
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 28
particle-size: 28
particle-size: 28
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.__H0.__run()
particle-size: 98
particle-size: 98
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 98
particle-size: 98
statement: this.dst = 0
particle-size: 98
statement: return this
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.data = [x] ~ this'.data
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.dst = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 12
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.Q_in.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.__H1.__run()
particle-size: 7
particle-size: 7
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 7
statement: this'.Q_in.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.__S0.__run()
particle-size: 39
particle-size: 39
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 39
statement: this'.route2 = 1 + 1
particle-size: 39
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 39
particle-size: 39
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 78
particle-size: 78
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 39
particle-size: 39
statement: r := this'.front()
particle-size: 39
particle-size: 39
statement: return this'.data[0]
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.popFront()
particle-size: 39
particle-size: 39
statement: this'.data = this'.data[1..this'.size()]
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return r
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 39
particle-size: 39
statement: r := this'.front()
particle-size: 39
particle-size: 39
statement: return this'.data[0]
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: this'.popFront()
particle-size: 39
particle-size: 39
statement: this'.data = this'.data[1..this'.size()]
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return r
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 39
particle-size: 39
particle-size: 39
statement: return ()
particle-size: 78
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 225
particle-size: 225
statement: return this'.data.length
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: this'.__S1.__run()
particle-size: 26
particle-size: 26
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 225
particle-size: 225
statement: return this'.data.length
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: this'.__S2.__run()
particle-size: 20
particle-size: 20
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 348
particle-size: 348
particle-size: 348
particle-size: 152
repetition: 10
statement: __d.__step()
particle-size: 152
particle-size: 152
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: (action,node) := this'.scheduler()
particle-size: 152
particle-size: 152
statement: actions := ([]: (R × R)[])
particle-size: 152
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 132
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(1,i)]
particle-size: 46
loop-index: 1
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
loop-index: 2
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 48
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(1,i)]
particle-size: 80
loop-index: 3
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 4
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(0,i)]
particle-size: 32
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
statement: actions ~= [(1,i)]
particle-size: 20
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 152
particle-size: 152
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 443
particle-size: 443
particle-size: 443
particle-size: 443
particle-size: 443
particle-size: 443
particle-size: 443
particle-size: 443
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 46
particle-size: 46
particle-size: 46
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 80
particle-size: 80
statement: r := this'.front()
particle-size: 80
particle-size: 80
statement: return this'.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.popFront()
particle-size: 80
particle-size: 80
statement: this'.data = this'.data[1..this'.size()]
particle-size: 80
particle-size: 80
statement: return this'.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: this'.__H0.__run()
particle-size: 132
particle-size: 132
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 132
particle-size: 132
statement: this.dst = 0
particle-size: 132
statement: return this
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: this'.data = [x] ~ this'.data
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 14
particle-size: 14
statement: this.dst = 0
particle-size: 14
statement: return this
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = [x] ~ this'.data
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 14
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_in.popFront()
particle-size: 118
particle-size: 118
statement: this'.data = this'.data[1..this'.size()]
particle-size: 118
particle-size: 118
statement: return this'.data.length
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: this'.Q_in.popFront()
particle-size: 118
particle-size: 118
statement: this'.data = this'.data[1..this'.size()]
particle-size: 118
particle-size: 118
statement: return this'.data.length
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: this'.__H1.__run()
particle-size: 15
particle-size: 15
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 15
statement: this'.Q_in.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: this'.__S0.__run()
particle-size: 48
particle-size: 48
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 48
statement: this'.route2 = 1 + 1
particle-size: 48
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 48
particle-size: 48
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 96
particle-size: 96
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 48
particle-size: 48
statement: r := this'.front()
particle-size: 48
particle-size: 48
statement: return this'.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.popFront()
particle-size: 48
particle-size: 48
statement: this'.data = this'.data[1..this'.size()]
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 48
particle-size: 48
statement: r := this'.front()
particle-size: 48
particle-size: 48
statement: return this'.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.popFront()
particle-size: 48
particle-size: 48
statement: this'.data = this'.data[1..this'.size()]
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 96
particle-size: 92
particle-size: 92
particle-size: 92
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 315
particle-size: 315
statement: return this'.data.length
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: this'.__S1.__run()
particle-size: 44
particle-size: 44
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 315
particle-size: 315
statement: return this'.data.length
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: this'.__S2.__run()
particle-size: 32
particle-size: 32
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 487
particle-size: 487
particle-size: 487
particle-size: 196
repetition: 11
statement: __d.__step()
particle-size: 196
particle-size: 196
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: (action,node) := this'.scheduler()
particle-size: 196
particle-size: 196
statement: actions := ([]: (R × R)[])
particle-size: 196
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 196
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
statement: actions ~= [(0,i)]
particle-size: 168
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
statement: actions ~= [(1,i)]
particle-size: 50
loop-index: 1
particle-size: 196
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
loop-index: 2
particle-size: 196
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
statement: actions ~= [(0,i)]
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
statement: actions ~= [(1,i)]
particle-size: 98
loop-index: 3
particle-size: 196
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
statement: actions ~= [(0,i)]
particle-size: 64
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
statement: actions ~= [(1,i)]
particle-size: 42
loop-index: 4
particle-size: 196
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
statement: actions ~= [(1,i)]
particle-size: 32
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 196
particle-size: 196
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 578
particle-size: 578
particle-size: 578
particle-size: 578
particle-size: 578
particle-size: 578
particle-size: 578
particle-size: 578
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 222
particle-size: 222
statement: return this'.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 50
particle-size: 50
particle-size: 50
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 222
particle-size: 222
statement: return this'.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 222
particle-size: 222
statement: return this'.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 98
particle-size: 98
statement: r := this'.front()
particle-size: 98
particle-size: 98
statement: return this'.data[0]
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.popFront()
particle-size: 98
particle-size: 98
statement: this'.data = this'.data[1..this'.size()]
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return r
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 222
particle-size: 222
statement: return this'.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 42
particle-size: 42
particle-size: 42
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 222
particle-size: 222
statement: return this'.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 356
particle-size: 356
statement: return this'.data.length
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: this'.__H0.__run()
particle-size: 168
particle-size: 168
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 168
particle-size: 168
statement: this.dst = 0
particle-size: 168
statement: return this
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: this'.data = [x] ~ this'.data
particle-size: 168
statement: return ()
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 11
particle-size: 11
statement: this.dst = 0
particle-size: 11
statement: return this
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.data = [x] ~ this'.data
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 11
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 11
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 11
particle-size: 11
statement: r := this'.front()
particle-size: 11
particle-size: 11
statement: return this'.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.popFront()
particle-size: 11
particle-size: 11
statement: this'.data = this'.data[1..this'.size()]
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.data = this'.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.Q_in.popFront()
particle-size: 157
particle-size: 157
statement: this'.data = this'.data[1..this'.size()]
particle-size: 157
particle-size: 157
statement: return this'.data.length
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: this'.Q_in.popFront()
particle-size: 157
particle-size: 157
statement: this'.data = this'.data[1..this'.size()]
particle-size: 157
particle-size: 157
statement: return this'.data.length
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 356
particle-size: 356
statement: return this'.data.length
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: this'.__H1.__run()
particle-size: 26
particle-size: 26
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 26
statement: this'.Q_in.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 356
particle-size: 356
statement: return this'.data.length
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: this'.__S0.__run()
particle-size: 54
particle-size: 54
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 54
statement: this'.route2 = 1 + 1
particle-size: 54
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 54
particle-size: 54
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 108
particle-size: 108
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 108
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: this'.__S1.__run()
particle-size: 64
particle-size: 64
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: this'.__S2.__run()
particle-size: 44
particle-size: 44
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 628
particle-size: 628
particle-size: 628
particle-size: 240
repetition: 12
statement: __d.__step()
particle-size: 240
particle-size: 240
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: (action,node) := this'.scheduler()
particle-size: 240
particle-size: 240
statement: actions := ([]: (R × R)[])
particle-size: 240
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 240
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
statement: actions ~= [(0,i)]
particle-size: 202
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
statement: actions ~= [(1,i)]
particle-size: 51
loop-index: 1
particle-size: 240
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
statement: actions ~= [(0,i)]
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
loop-index: 2
particle-size: 240
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
statement: actions ~= [(0,i)]
particle-size: 57
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
statement: actions ~= [(1,i)]
particle-size: 112
loop-index: 3
particle-size: 240
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
statement: actions ~= [(0,i)]
particle-size: 85
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
statement: actions ~= [(1,i)]
particle-size: 59
loop-index: 4
particle-size: 240
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
statement: actions ~= [(0,i)]
particle-size: 53
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
statement: actions ~= [(1,i)]
particle-size: 44
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 240
particle-size: 240
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
particle-size: 705
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 266
particle-size: 266
statement: return this'.data.length
particle-size: 266
particle-size: 266
particle-size: 266
particle-size: 266
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 51
particle-size: 51
statement: r := this'.front()
particle-size: 51
particle-size: 51
statement: return this'.data[0]
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.popFront()
particle-size: 51
particle-size: 51
statement: this'.data = this'.data[1..this'.size()]
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return r
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 51
particle-size: 51
particle-size: 51
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.data = this'.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 266
particle-size: 266
statement: return this'.data.length
particle-size: 266
particle-size: 266
particle-size: 266
particle-size: 266
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 266
particle-size: 266
statement: return this'.data.length
particle-size: 266
particle-size: 266
particle-size: 266
particle-size: 266
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 112
particle-size: 112
statement: r := this'.front()
particle-size: 112
particle-size: 112
statement: return this'.data[0]
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.popFront()
particle-size: 112
particle-size: 112
statement: this'.data = this'.data[1..this'.size()]
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return r
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 266
particle-size: 266
statement: return this'.data.length
particle-size: 266
particle-size: 266
particle-size: 266
particle-size: 266
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 59
particle-size: 59
statement: r := this'.front()
particle-size: 59
particle-size: 59
statement: return this'.data[0]
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: this'.popFront()
particle-size: 59
particle-size: 59
statement: this'.data = this'.data[1..this'.size()]
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return r
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 59
particle-size: 59
particle-size: 59
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: this'.data = this'.data ~ [x]
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 266
particle-size: 266
statement: return this'.data.length
particle-size: 266
particle-size: 266
particle-size: 266
particle-size: 266
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 439
particle-size: 439
statement: return this'.data.length
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
statement: this'.__H0.__run()
particle-size: 202
particle-size: 202
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 202
particle-size: 202
statement: this.dst = 0
particle-size: 202
statement: return this
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: this'.data = [x] ~ this'.data
particle-size: 202
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 11
particle-size: 11
statement: this.dst = 0
particle-size: 11
statement: return this
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.data = [x] ~ this'.data
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 11
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 11
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 11
particle-size: 11
statement: r := this'.front()
particle-size: 11
particle-size: 11
statement: return this'.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.popFront()
particle-size: 11
particle-size: 11
statement: this'.data = this'.data[1..this'.size()]
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.data = this'.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.Q_in.popFront()
particle-size: 191
particle-size: 191
statement: this'.data = this'.data[1..this'.size()]
particle-size: 191
particle-size: 191
statement: return this'.data.length
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: return ()
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: this'.Q_in.popFront()
particle-size: 191
particle-size: 191
statement: this'.data = this'.data[1..this'.size()]
particle-size: 191
particle-size: 191
statement: return this'.data.length
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: return ()
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 439
particle-size: 439
statement: return this'.data.length
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
statement: this'.__H1.__run()
particle-size: 42
particle-size: 42
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 42
statement: this'.Q_in.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 439
particle-size: 439
statement: return this'.data.length
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
statement: this'.__S0.__run()
particle-size: 57
particle-size: 57
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 57
statement: this'.route2 = 1 + 1
particle-size: 57
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 57
particle-size: 57
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 114
particle-size: 114
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 496
particle-size: 496
statement: return this'.data.length
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: this'.__S1.__run()
particle-size: 85
particle-size: 85
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 496
particle-size: 496
statement: return this'.data.length
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: this'.__S2.__run()
particle-size: 53
particle-size: 53
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 762
particle-size: 762
particle-size: 762
particle-size: 279
repetition: 13
statement: __d.__step()
particle-size: 279
particle-size: 279
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: (action,node) := this'.scheduler()
particle-size: 279
particle-size: 279
statement: actions := ([]: (R × R)[])
particle-size: 279
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 279
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
statement: actions ~= [(0,i)]
particle-size: 227
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
statement: actions ~= [(1,i)]
particle-size: 49
loop-index: 1
particle-size: 279
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
statement: actions ~= [(0,i)]
particle-size: 59
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
loop-index: 2
particle-size: 279
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
statement: actions ~= [(0,i)]
particle-size: 57
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
statement: actions ~= [(1,i)]
particle-size: 124
loop-index: 3
particle-size: 279
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
statement: actions ~= [(0,i)]
particle-size: 104
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
statement: actions ~= [(1,i)]
particle-size: 77
loop-index: 4
particle-size: 279
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
statement: actions ~= [(0,i)]
particle-size: 61
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
statement: actions ~= [(1,i)]
particle-size: 54
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 279
particle-size: 279
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 812
particle-size: 812
particle-size: 812
particle-size: 812
particle-size: 812
particle-size: 812
particle-size: 812
particle-size: 812
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 49
particle-size: 49
statement: r := this'.front()
particle-size: 49
particle-size: 49
statement: return this'.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 49
particle-size: 49
particle-size: 49
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 124
particle-size: 124
statement: r := this'.front()
particle-size: 124
particle-size: 124
statement: return this'.data[0]
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: this'.popFront()
particle-size: 124
particle-size: 124
statement: this'.data = this'.data[1..this'.size()]
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: return r
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 62
particle-size: 62
particle-size: 62
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 62
particle-size: 62
particle-size: 62
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 77
particle-size: 77
statement: r := this'.front()
particle-size: 77
particle-size: 77
statement: return this'.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 77
particle-size: 77
particle-size: 77
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.data = this'.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 54
particle-size: 54
particle-size: 54
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
particle-size: 508
statement: this'.__H0.__run()
particle-size: 227
particle-size: 227
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 227
particle-size: 227
statement: this.dst = 0
particle-size: 227
statement: return this
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: this'.data = [x] ~ this'.data
particle-size: 227
statement: return ()
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 7
particle-size: 7
statement: this.dst = 0
particle-size: 7
statement: return this
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = [x] ~ this'.data
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 7
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 7
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.Q_in.popFront()
particle-size: 220
particle-size: 220
statement: this'.data = this'.data[1..this'.size()]
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return ()
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: this'.Q_in.popFront()
particle-size: 220
particle-size: 220
statement: this'.data = this'.data[1..this'.size()]
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return ()
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return ()
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
particle-size: 508
statement: this'.__H1.__run()
particle-size: 59
particle-size: 59
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 59
statement: this'.Q_in.popFront()
particle-size: 59
particle-size: 59
statement: this'.data = this'.data[1..this'.size()]
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 508
particle-size: 508
statement: return this'.data.length
particle-size: 508
particle-size: 508
particle-size: 508
particle-size: 508
statement: this'.__S0.__run()
particle-size: 57
particle-size: 57
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 57
statement: this'.route2 = 1 + 1
particle-size: 57
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 57
particle-size: 57
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 114
particle-size: 114
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 565
particle-size: 565
statement: return this'.data.length
particle-size: 565
particle-size: 565
particle-size: 565
particle-size: 565
statement: this'.__S1.__run()
particle-size: 104
particle-size: 104
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 60
particle-size: 60
statement: r := this'.front()
particle-size: 60
particle-size: 60
statement: return this'.data[0]
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.popFront()
particle-size: 60
particle-size: 60
statement: this'.data = this'.data[1..this'.size()]
particle-size: 60
particle-size: 60
statement: return this'.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return r
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 60
particle-size: 60
statement: return this'.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 565
particle-size: 565
statement: return this'.data.length
particle-size: 565
particle-size: 565
particle-size: 565
particle-size: 565
statement: this'.__S2.__run()
particle-size: 61
particle-size: 61
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 61
particle-size: 61
statement: r := this'.front()
particle-size: 61
particle-size: 61
statement: return this'.data[0]
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this'.popFront()
particle-size: 61
particle-size: 61
statement: this'.data = this'.data[1..this'.size()]
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return r
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 869
particle-size: 869
particle-size: 869
particle-size: 304
repetition: 14
statement: __d.__step()
particle-size: 304
particle-size: 304
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: (action,node) := this'.scheduler()
particle-size: 304
particle-size: 304
statement: actions := ([]: (R × R)[])
particle-size: 304
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(1,i)]
particle-size: 44
loop-index: 1
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 77
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
loop-index: 2
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 53
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(1,i)]
particle-size: 122
loop-index: 3
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 116
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(1,i)]
particle-size: 91
loop-index: 4
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 64
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(1,i)]
particle-size: 62
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 304
particle-size: 304
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 866
particle-size: 866
particle-size: 866
particle-size: 866
particle-size: 866
particle-size: 866
particle-size: 866
particle-size: 866
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 319
particle-size: 319
statement: return this'.data.length
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 44
particle-size: 44
particle-size: 44
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 319
particle-size: 319
statement: return this'.data.length
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 319
particle-size: 319
statement: return this'.data.length
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 122
particle-size: 122
statement: r := this'.front()
particle-size: 122
particle-size: 122
statement: return this'.data[0]
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: this'.popFront()
particle-size: 122
particle-size: 122
statement: this'.data = this'.data[1..this'.size()]
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: return ()
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: return r
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 61
particle-size: 61
particle-size: 61
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 61
particle-size: 61
particle-size: 61
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 61
particle-size: 61
particle-size: 61
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 61
particle-size: 61
particle-size: 61
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 319
particle-size: 319
statement: return this'.data.length
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 91
particle-size: 91
statement: r := this'.front()
particle-size: 91
particle-size: 91
statement: return this'.data[0]
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this'.popFront()
particle-size: 91
particle-size: 91
statement: this'.data = this'.data[1..this'.size()]
particle-size: 91
particle-size: 91
statement: return this'.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return r
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 91
particle-size: 91
particle-size: 91
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 91
particle-size: 91
statement: return this'.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this'.data = this'.data ~ [x]
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 319
particle-size: 319
statement: return this'.data.length
particle-size: 319
particle-size: 319
particle-size: 319
particle-size: 319
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 62
particle-size: 62
particle-size: 62
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 547
particle-size: 547
statement: return this'.data.length
particle-size: 547
particle-size: 547
particle-size: 547
particle-size: 547
statement: this'.__H0.__run()
particle-size: 237
particle-size: 237
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 237
particle-size: 237
statement: this.dst = 0
particle-size: 237
statement: return this
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: this'.data = [x] ~ this'.data
particle-size: 237
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 6
particle-size: 6
statement: this.dst = 0
particle-size: 6
statement: return this
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 6
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_in.popFront()
particle-size: 231
particle-size: 231
statement: this'.data = this'.data[1..this'.size()]
particle-size: 231
particle-size: 231
statement: return this'.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: this'.Q_in.popFront()
particle-size: 231
particle-size: 231
statement: this'.data = this'.data[1..this'.size()]
particle-size: 231
particle-size: 231
statement: return this'.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 547
particle-size: 547
statement: return this'.data.length
particle-size: 547
particle-size: 547
particle-size: 547
particle-size: 547
statement: this'.__H1.__run()
particle-size: 77
particle-size: 77
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 77
statement: this'.Q_in.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 547
particle-size: 547
statement: return this'.data.length
particle-size: 547
particle-size: 547
particle-size: 547
particle-size: 547
statement: this'.__S0.__run()
particle-size: 53
particle-size: 53
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 53
statement: this'.route2 = 1 + 1
particle-size: 53
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 53
particle-size: 53
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 106
particle-size: 106
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: this'.__S1.__run()
particle-size: 116
particle-size: 116
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: this'.__S2.__run()
particle-size: 64
particle-size: 64
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 64
particle-size: 64
statement: r := this'.front()
particle-size: 64
particle-size: 64
statement: return this'.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 919
particle-size: 919
particle-size: 919
particle-size: 310
repetition: 15
statement: __d.__step()
particle-size: 310
particle-size: 310
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: (action,node) := this'.scheduler()
particle-size: 310
particle-size: 310
statement: actions := ([]: (R × R)[])
particle-size: 310
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 238
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(1,i)]
particle-size: 35
loop-index: 1
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 91
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
loop-index: 2
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 46
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(1,i)]
particle-size: 114
loop-index: 3
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(1,i)]
particle-size: 99
loop-index: 4
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 64
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(1,i)]
particle-size: 65
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 310
particle-size: 310
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
particle-size: 876
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 313
particle-size: 313
statement: return this'.data.length
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 35
particle-size: 35
statement: r := this'.front()
particle-size: 35
particle-size: 35
statement: return this'.data[0]
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.popFront()
particle-size: 35
particle-size: 35
statement: this'.data = this'.data[1..this'.size()]
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return r
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 35
particle-size: 35
particle-size: 35
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 313
particle-size: 313
statement: return this'.data.length
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 313
particle-size: 313
statement: return this'.data.length
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 114
particle-size: 114
statement: r := this'.front()
particle-size: 114
particle-size: 114
statement: return this'.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.popFront()
particle-size: 114
particle-size: 114
statement: this'.data = this'.data[1..this'.size()]
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 57
particle-size: 57
particle-size: 57
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 57
particle-size: 57
particle-size: 57
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 57
particle-size: 57
particle-size: 57
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 313
particle-size: 313
statement: return this'.data.length
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 99
particle-size: 99
statement: r := this'.front()
particle-size: 99
particle-size: 99
statement: return this'.data[0]
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this'.popFront()
particle-size: 99
particle-size: 99
statement: this'.data = this'.data[1..this'.size()]
particle-size: 99
particle-size: 99
statement: return this'.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: return r
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 99
particle-size: 99
particle-size: 99
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 99
particle-size: 99
statement: return this'.data.length
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: this'.data = this'.data ~ [x]
particle-size: 99
statement: return ()
particle-size: 99
particle-size: 99
particle-size: 99
particle-size: 99
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 313
particle-size: 313
statement: return this'.data.length
particle-size: 313
particle-size: 313
particle-size: 313
particle-size: 313
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 65
particle-size: 65
statement: r := this'.front()
particle-size: 65
particle-size: 65
statement: return this'.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this'.popFront()
particle-size: 65
particle-size: 65
statement: this'.data = this'.data[1..this'.size()]
particle-size: 65
particle-size: 65
statement: return this'.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 65
particle-size: 65
particle-size: 65
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 65
particle-size: 65
statement: return this'.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 65
particle-size: 65
particle-size: 65
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 563
particle-size: 563
statement: return this'.data.length
particle-size: 563
particle-size: 563
particle-size: 563
particle-size: 563
statement: this'.__H0.__run()
particle-size: 238
particle-size: 238
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 238
particle-size: 238
statement: this.dst = 0
particle-size: 238
statement: return this
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: this'.data = [x] ~ this'.data
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 3
particle-size: 3
statement: this.dst = 0
particle-size: 3
statement: return this
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = [x] ~ this'.data
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 3
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 235
particle-size: 235
statement: this'.data = this'.data[1..this'.size()]
particle-size: 235
particle-size: 235
statement: return this'.data.length
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: this'.Q_in.popFront()
particle-size: 235
particle-size: 235
statement: this'.data = this'.data[1..this'.size()]
particle-size: 235
particle-size: 235
statement: return this'.data.length
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 563
particle-size: 563
statement: return this'.data.length
particle-size: 563
particle-size: 563
particle-size: 563
particle-size: 563
statement: this'.__H1.__run()
particle-size: 91
particle-size: 91
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 91
statement: this'.Q_in.popFront()
particle-size: 91
particle-size: 91
statement: this'.data = this'.data[1..this'.size()]
particle-size: 91
particle-size: 91
statement: return this'.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 563
particle-size: 563
statement: return this'.data.length
particle-size: 563
particle-size: 563
particle-size: 563
particle-size: 563
statement: this'.__S0.__run()
particle-size: 46
particle-size: 46
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 46
statement: this'.route2 = 1 + 1
particle-size: 46
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 46
particle-size: 46
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 92
particle-size: 92
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 609
particle-size: 609
statement: return this'.data.length
particle-size: 609
particle-size: 609
particle-size: 609
particle-size: 609
statement: this'.__S1.__run()
particle-size: 124
particle-size: 124
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.data = this'.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 609
particle-size: 609
statement: return this'.data.length
particle-size: 609
particle-size: 609
particle-size: 609
particle-size: 609
statement: this'.__S2.__run()
particle-size: 64
particle-size: 64
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 64
particle-size: 64
statement: r := this'.front()
particle-size: 64
particle-size: 64
statement: return this'.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 922
particle-size: 922
particle-size: 922
particle-size: 304
repetition: 16
statement: __d.__step()
particle-size: 304
particle-size: 304
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
particle-size: 304
statement: (action,node) := this'.scheduler()
particle-size: 304
particle-size: 304
statement: actions := ([]: (R × R)[])
particle-size: 304
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 223
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(1,i)]
particle-size: 27
loop-index: 1
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 100
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
loop-index: 2
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 36
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(1,i)]
particle-size: 98
loop-index: 3
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(1,i)]
particle-size: 101
loop-index: 4
particle-size: 304
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(0,i)]
particle-size: 61
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 304
particle-size: 304
statement: return this'.data.length
particle-size: 304
particle-size: 304
particle-size: 304
statement: actions ~= [(1,i)]
particle-size: 66
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 304
particle-size: 304
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 836
particle-size: 836
particle-size: 836
particle-size: 836
particle-size: 836
particle-size: 836
particle-size: 836
particle-size: 836
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 98
particle-size: 98
statement: r := this'.front()
particle-size: 98
particle-size: 98
statement: return this'.data[0]
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: this'.popFront()
particle-size: 98
particle-size: 98
statement: this'.data = this'.data[1..this'.size()]
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return r
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 101
particle-size: 101
statement: r := this'.front()
particle-size: 101
particle-size: 101
statement: return this'.data[0]
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.popFront()
particle-size: 101
particle-size: 101
statement: this'.data = this'.data[1..this'.size()]
particle-size: 101
particle-size: 101
statement: return this'.data.length
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: return r
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 101
particle-size: 101
particle-size: 101
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 101
particle-size: 101
statement: return this'.data.length
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.data = this'.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 66
particle-size: 66
particle-size: 66
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 66
particle-size: 66
particle-size: 66
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 544
particle-size: 544
statement: return this'.data.length
particle-size: 544
particle-size: 544
particle-size: 544
particle-size: 544
statement: this'.__H0.__run()
particle-size: 223
particle-size: 223
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 223
particle-size: 223
statement: this.dst = 0
particle-size: 223
statement: return this
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: this'.data = [x] ~ this'.data
particle-size: 223
statement: return ()
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 3
particle-size: 3
statement: this.dst = 0
particle-size: 3
statement: return this
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = [x] ~ this'.data
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 3
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 220
particle-size: 220
statement: this'.data = this'.data[1..this'.size()]
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return ()
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: this'.Q_in.popFront()
particle-size: 220
particle-size: 220
statement: this'.data = this'.data[1..this'.size()]
particle-size: 220
particle-size: 220
statement: return this'.data.length
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return ()
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: return ()
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 544
particle-size: 544
statement: return this'.data.length
particle-size: 544
particle-size: 544
particle-size: 544
particle-size: 544
statement: this'.__H1.__run()
particle-size: 100
particle-size: 100
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 100
statement: this'.Q_in.popFront()
particle-size: 100
particle-size: 100
statement: this'.data = this'.data[1..this'.size()]
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 544
particle-size: 544
statement: return this'.data.length
particle-size: 544
particle-size: 544
particle-size: 544
particle-size: 544
statement: this'.__S0.__run()
particle-size: 36
particle-size: 36
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 36
statement: this'.route2 = 1 + 1
particle-size: 36
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 36
particle-size: 36
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 72
particle-size: 72
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 36
particle-size: 36
statement: r := this'.front()
particle-size: 36
particle-size: 36
statement: return this'.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.data = this'.data ~ [x]
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 36
particle-size: 36
statement: r := this'.front()
particle-size: 36
particle-size: 36
statement: return this'.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.data = this'.data ~ [x]
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 72
particle-size: 72
particle-size: 72
particle-size: 72
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 580
particle-size: 580
statement: return this'.data.length
particle-size: 580
particle-size: 580
particle-size: 580
particle-size: 580
statement: this'.__S1.__run()
particle-size: 124
particle-size: 124
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 59
particle-size: 59
statement: r := this'.front()
particle-size: 59
particle-size: 59
statement: return this'.data[0]
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: this'.popFront()
particle-size: 59
particle-size: 59
statement: this'.data = this'.data[1..this'.size()]
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return r
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 59
particle-size: 59
particle-size: 59
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 65
particle-size: 65
statement: r := this'.front()
particle-size: 65
particle-size: 65
statement: return this'.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this'.popFront()
particle-size: 65
particle-size: 65
statement: this'.data = this'.data[1..this'.size()]
particle-size: 65
particle-size: 65
statement: return this'.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 65
particle-size: 65
statement: return this'.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 580
particle-size: 580
statement: return this'.data.length
particle-size: 580
particle-size: 580
particle-size: 580
particle-size: 580
statement: this'.__S2.__run()
particle-size: 61
particle-size: 61
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 61
particle-size: 61
statement: r := this'.front()
particle-size: 61
particle-size: 61
statement: return this'.data[0]
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: this'.popFront()
particle-size: 61
particle-size: 61
statement: this'.data = this'.data[1..this'.size()]
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return r
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 61
particle-size: 61
statement: return this'.data.length
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: return ()
particle-size: 872
particle-size: 872
particle-size: 872
particle-size: 281
repetition: 17
statement: __d.__step()
particle-size: 281
particle-size: 281
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
particle-size: 281
statement: (action,node) := this'.scheduler()
particle-size: 281
particle-size: 281
statement: actions := ([]: (R × R)[])
particle-size: 281
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 281
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
statement: actions ~= [(0,i)]
particle-size: 203
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
statement: actions ~= [(1,i)]
particle-size: 19
loop-index: 1
particle-size: 281
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
statement: actions ~= [(0,i)]
particle-size: 102
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
loop-index: 2
particle-size: 281
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
statement: actions ~= [(0,i)]
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
statement: actions ~= [(1,i)]
particle-size: 76
loop-index: 3
particle-size: 281
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
statement: actions ~= [(0,i)]
particle-size: 119
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
statement: actions ~= [(1,i)]
particle-size: 97
loop-index: 4
particle-size: 281
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
statement: actions ~= [(0,i)]
particle-size: 53
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 281
particle-size: 281
statement: return this'.data.length
particle-size: 281
particle-size: 281
particle-size: 281
statement: actions ~= [(1,i)]
particle-size: 63
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 281
particle-size: 281
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 255
particle-size: 255
statement: return this'.data.length
particle-size: 255
particle-size: 255
particle-size: 255
particle-size: 255
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 19
particle-size: 19
statement: r := this'.front()
particle-size: 19
particle-size: 19
statement: return this'.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 255
particle-size: 255
statement: return this'.data.length
particle-size: 255
particle-size: 255
particle-size: 255
particle-size: 255
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 255
particle-size: 255
statement: return this'.data.length
particle-size: 255
particle-size: 255
particle-size: 255
particle-size: 255
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 76
particle-size: 76
statement: r := this'.front()
particle-size: 76
particle-size: 76
statement: return this'.data[0]
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.popFront()
particle-size: 76
particle-size: 76
statement: this'.data = this'.data[1..this'.size()]
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return r
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 255
particle-size: 255
statement: return this'.data.length
particle-size: 255
particle-size: 255
particle-size: 255
particle-size: 255
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 97
particle-size: 97
statement: r := this'.front()
particle-size: 97
particle-size: 97
statement: return this'.data[0]
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: this'.popFront()
particle-size: 97
particle-size: 97
statement: this'.data = this'.data[1..this'.size()]
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: return ()
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: return r
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 97
particle-size: 97
particle-size: 97
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 97
particle-size: 97
statement: return this'.data.length
particle-size: 97
particle-size: 97
particle-size: 97
particle-size: 97
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 97
particle-size: 97
particle-size: 97
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 255
particle-size: 255
statement: return this'.data.length
particle-size: 255
particle-size: 255
particle-size: 255
particle-size: 255
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 63
particle-size: 63
statement: r := this'.front()
particle-size: 63
particle-size: 63
statement: return this'.data[0]
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.popFront()
particle-size: 63
particle-size: 63
statement: this'.data = this'.data[1..this'.size()]
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return r
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 63
particle-size: 63
particle-size: 63
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 63
particle-size: 63
particle-size: 63
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 504
particle-size: 504
statement: return this'.data.length
particle-size: 504
particle-size: 504
particle-size: 504
particle-size: 504
statement: this'.__H0.__run()
particle-size: 203
particle-size: 203
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 203
particle-size: 203
statement: this.dst = 0
particle-size: 203
statement: return this
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: this'.data = [x] ~ this'.data
particle-size: 203
statement: return ()
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.dst = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 202
particle-size: 202
statement: this'.data = this'.data[1..this'.size()]
particle-size: 202
particle-size: 202
statement: return this'.data.length
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: this'.Q_in.popFront()
particle-size: 202
particle-size: 202
statement: this'.data = this'.data[1..this'.size()]
particle-size: 202
particle-size: 202
statement: return this'.data.length
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 504
particle-size: 504
statement: return this'.data.length
particle-size: 504
particle-size: 504
particle-size: 504
particle-size: 504
statement: this'.__H1.__run()
particle-size: 102
particle-size: 102
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 102
statement: this'.Q_in.popFront()
particle-size: 102
particle-size: 102
statement: this'.data = this'.data[1..this'.size()]
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 504
particle-size: 504
statement: return this'.data.length
particle-size: 504
particle-size: 504
particle-size: 504
particle-size: 504
statement: this'.__S0.__run()
particle-size: 27
particle-size: 27
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 27
statement: this'.route2 = 1 + 1
particle-size: 27
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 27
particle-size: 27
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 54
particle-size: 54
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 531
particle-size: 531
statement: return this'.data.length
particle-size: 531
particle-size: 531
particle-size: 531
particle-size: 531
statement: this'.__S1.__run()
particle-size: 119
particle-size: 119
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 53
particle-size: 53
particle-size: 53
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 531
particle-size: 531
statement: return this'.data.length
particle-size: 531
particle-size: 531
particle-size: 531
particle-size: 531
statement: this'.__S2.__run()
particle-size: 53
particle-size: 53
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 786
particle-size: 786
particle-size: 786
particle-size: 250
repetition: 18
statement: __d.__step()
particle-size: 250
particle-size: 250
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: return this'.data.length
particle-size: 250
particle-size: 250
particle-size: 250
particle-size: 250
statement: (action,node) := this'.scheduler()
particle-size: 249
particle-size: 249
statement: actions := ([]: (R × R)[])
particle-size: 249
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 249
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
statement: actions ~= [(0,i)]
particle-size: 174
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
statement: actions ~= [(1,i)]
particle-size: 13
loop-index: 1
particle-size: 249
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
statement: actions ~= [(0,i)]
particle-size: 98
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
loop-index: 2
particle-size: 249
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
statement: actions ~= [(0,i)]
particle-size: 19
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
statement: actions ~= [(1,i)]
particle-size: 56
loop-index: 3
particle-size: 249
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
statement: actions ~= [(0,i)]
particle-size: 106
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
statement: actions ~= [(1,i)]
particle-size: 90
loop-index: 4
particle-size: 249
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
statement: actions ~= [(0,i)]
particle-size: 41
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
statement: actions ~= [(1,i)]
particle-size: 56
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 249
particle-size: 249
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
particle-size: 653
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 215
particle-size: 215
statement: return this'.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 215
particle-size: 215
statement: return this'.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 215
particle-size: 215
statement: return this'.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 56
particle-size: 56
statement: r := this'.front()
particle-size: 56
particle-size: 56
statement: return this'.data[0]
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.popFront()
particle-size: 56
particle-size: 56
statement: this'.data = this'.data[1..this'.size()]
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return r
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 28
particle-size: 28
particle-size: 28
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 28
particle-size: 28
particle-size: 28
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 28
particle-size: 28
particle-size: 28
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 215
particle-size: 215
statement: return this'.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 90
particle-size: 90
statement: r := this'.front()
particle-size: 90
particle-size: 90
statement: return this'.data[0]
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.popFront()
particle-size: 90
particle-size: 90
statement: this'.data = this'.data[1..this'.size()]
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return r
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 90
particle-size: 90
particle-size: 90
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 90
particle-size: 90
particle-size: 90
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 215
particle-size: 215
statement: return this'.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 56
particle-size: 56
statement: r := this'.front()
particle-size: 56
particle-size: 56
statement: return this'.data[0]
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.popFront()
particle-size: 56
particle-size: 56
statement: this'.data = this'.data[1..this'.size()]
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return r
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 438
particle-size: 438
statement: return this'.data.length
particle-size: 438
particle-size: 438
particle-size: 438
particle-size: 438
statement: this'.__H0.__run()
particle-size: 174
particle-size: 174
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 174
particle-size: 174
statement: this.dst = 0
particle-size: 174
statement: return this
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: this'.data = [x] ~ this'.data
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.dst = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.data[0][0].dst = 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 173
particle-size: 173
statement: this'.data = this'.data[1..this'.size()]
particle-size: 173
particle-size: 173
statement: return this'.data.length
particle-size: 173
particle-size: 173
particle-size: 173
particle-size: 173
particle-size: 173
statement: return ()
particle-size: 173
particle-size: 173
particle-size: 173
particle-size: 173
statement: this'.Q_in.popFront()
particle-size: 173
particle-size: 173
statement: this'.data = this'.data[1..this'.size()]
particle-size: 173
particle-size: 173
statement: return this'.data.length
particle-size: 173
particle-size: 173
particle-size: 173
particle-size: 173
particle-size: 173
statement: return ()
particle-size: 173
particle-size: 173
particle-size: 173
particle-size: 173
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 438
particle-size: 438
statement: return this'.data.length
particle-size: 438
particle-size: 438
particle-size: 438
particle-size: 438
statement: this'.__H1.__run()
particle-size: 98
particle-size: 98
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 98
statement: this'.Q_in.popFront()
particle-size: 98
particle-size: 98
statement: this'.data = this'.data[1..this'.size()]
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 438
particle-size: 438
statement: return this'.data.length
particle-size: 438
particle-size: 438
particle-size: 438
particle-size: 438
statement: this'.__S0.__run()
particle-size: 19
particle-size: 19
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 19
statement: this'.route2 = 1 + 1
particle-size: 19
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 19
particle-size: 19
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 38
particle-size: 38
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 19
particle-size: 19
statement: r := this'.front()
particle-size: 19
particle-size: 19
statement: return this'.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 19
particle-size: 19
statement: r := this'.front()
particle-size: 19
particle-size: 19
statement: return this'.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 457
particle-size: 457
statement: return this'.data.length
particle-size: 457
particle-size: 457
particle-size: 457
particle-size: 457
statement: this'.__S1.__run()
particle-size: 106
particle-size: 106
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 43
particle-size: 43
statement: r := this'.front()
particle-size: 43
particle-size: 43
statement: return this'.data[0]
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.popFront()
particle-size: 43
particle-size: 43
statement: this'.data = this'.data[1..this'.size()]
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return r
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 43
particle-size: 43
particle-size: 43
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 63
particle-size: 63
statement: r := this'.front()
particle-size: 63
particle-size: 63
statement: return this'.data[0]
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.popFront()
particle-size: 63
particle-size: 63
statement: this'.data = this'.data[1..this'.size()]
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return r
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 457
particle-size: 457
statement: return this'.data.length
particle-size: 457
particle-size: 457
particle-size: 457
particle-size: 457
statement: this'.__S2.__run()
particle-size: 41
particle-size: 41
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 673
particle-size: 673
particle-size: 673
particle-size: 213
repetition: 19
statement: __d.__step()
particle-size: 213
particle-size: 213
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: (action,node) := this'.scheduler()
particle-size: 212
particle-size: 212
statement: actions := ([]: (R × R)[])
particle-size: 212
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 212
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
statement: actions ~= [(0,i)]
particle-size: 147
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
statement: actions ~= [(1,i)]
particle-size: 8
loop-index: 1
particle-size: 212
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
statement: actions ~= [(0,i)]
particle-size: 91
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
loop-index: 2
particle-size: 212
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
statement: actions ~= [(0,i)]
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
statement: actions ~= [(1,i)]
particle-size: 38
loop-index: 3
particle-size: 212
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
statement: actions ~= [(0,i)]
particle-size: 90
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
statement: actions ~= [(1,i)]
particle-size: 78
loop-index: 4
particle-size: 212
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
statement: actions ~= [(0,i)]
particle-size: 30
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
statement: actions ~= [(1,i)]
particle-size: 45
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 212
particle-size: 212
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 540
particle-size: 540
particle-size: 540
particle-size: 540
particle-size: 540
particle-size: 540
particle-size: 540
particle-size: 540
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 78
particle-size: 78
statement: r := this'.front()
particle-size: 78
particle-size: 78
statement: return this'.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 78
particle-size: 78
particle-size: 78
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 78
particle-size: 78
particle-size: 78
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 45
particle-size: 45
particle-size: 45
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 371
particle-size: 371
statement: return this'.data.length
particle-size: 371
particle-size: 371
particle-size: 371
particle-size: 371
statement: this'.__H0.__run()
particle-size: 147
particle-size: 147
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 147
particle-size: 147
statement: this.dst = 0
particle-size: 147
statement: return this
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: this'.data = [x] ~ this'.data
particle-size: 147
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 147
particle-size: 147
statement: this'.data = this'.data[1..this'.size()]
particle-size: 147
particle-size: 147
statement: return this'.data.length
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: this'.Q_in.popFront()
particle-size: 147
particle-size: 147
statement: this'.data = this'.data[1..this'.size()]
particle-size: 147
particle-size: 147
statement: return this'.data.length
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 371
particle-size: 371
statement: return this'.data.length
particle-size: 371
particle-size: 371
particle-size: 371
particle-size: 371
statement: this'.__H1.__run()
particle-size: 91
particle-size: 91
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 91
statement: this'.Q_in.popFront()
particle-size: 91
particle-size: 91
statement: this'.data = this'.data[1..this'.size()]
particle-size: 91
particle-size: 91
statement: return this'.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 371
particle-size: 371
statement: return this'.data.length
particle-size: 371
particle-size: 371
particle-size: 371
particle-size: 371
statement: this'.__S0.__run()
particle-size: 13
particle-size: 13
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 13
statement: this'.route2 = 1 + 1
particle-size: 13
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 13
particle-size: 13
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 384
particle-size: 384
statement: return this'.data.length
particle-size: 384
particle-size: 384
particle-size: 384
particle-size: 384
statement: this'.__S1.__run()
particle-size: 90
particle-size: 90
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 33
particle-size: 33
statement: r := this'.front()
particle-size: 33
particle-size: 33
statement: return this'.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 384
particle-size: 384
statement: return this'.data.length
particle-size: 384
particle-size: 384
particle-size: 384
particle-size: 384
statement: this'.__S2.__run()
particle-size: 30
particle-size: 30
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 554
particle-size: 554
particle-size: 554
particle-size: 175
repetition: 20
statement: __d.__step()
particle-size: 175
particle-size: 175
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: (action,node) := this'.scheduler()
particle-size: 174
particle-size: 174
statement: actions := ([]: (R × R)[])
particle-size: 174
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 174
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
statement: actions ~= [(0,i)]
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
statement: actions ~= [(1,i)]
particle-size: 5
loop-index: 1
particle-size: 174
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
statement: actions ~= [(0,i)]
particle-size: 78
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
loop-index: 2
particle-size: 174
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 3
particle-size: 174
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
statement: actions ~= [(0,i)]
particle-size: 70
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
statement: actions ~= [(1,i)]
particle-size: 66
loop-index: 4
particle-size: 174
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
statement: actions ~= [(0,i)]
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
statement: actions ~= [(1,i)]
particle-size: 33
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 174
particle-size: 174
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 66
particle-size: 66
particle-size: 66
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 66
particle-size: 66
particle-size: 66
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 33
particle-size: 33
statement: r := this'.front()
particle-size: 33
particle-size: 33
statement: return this'.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 291
particle-size: 291
statement: return this'.data.length
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
statement: this'.__H0.__run()
particle-size: 115
particle-size: 115
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 115
particle-size: 115
statement: this.dst = 0
particle-size: 115
statement: return this
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: this'.data = [x] ~ this'.data
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 115
particle-size: 115
statement: this'.data = this'.data[1..this'.size()]
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: this'.Q_in.popFront()
particle-size: 115
particle-size: 115
statement: this'.data = this'.data[1..this'.size()]
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 291
particle-size: 291
statement: return this'.data.length
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
statement: this'.__H1.__run()
particle-size: 78
particle-size: 78
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 78
statement: this'.Q_in.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 291
particle-size: 291
statement: return this'.data.length
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
statement: this'.__S0.__run()
particle-size: 8
particle-size: 8
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 8
statement: this'.route2 = 1 + 1
particle-size: 8
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 8
particle-size: 8
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 16
particle-size: 16
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 299
particle-size: 299
statement: return this'.data.length
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
statement: this'.__S1.__run()
particle-size: 70
particle-size: 70
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 23
particle-size: 23
statement: r := this'.front()
particle-size: 23
particle-size: 23
statement: return this'.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.popFront()
particle-size: 23
particle-size: 23
statement: this'.data = this'.data[1..this'.size()]
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 23
particle-size: 23
particle-size: 23
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 299
particle-size: 299
statement: return this'.data.length
particle-size: 299
particle-size: 299
particle-size: 299
particle-size: 299
statement: this'.__S2.__run()
particle-size: 20
particle-size: 20
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 137
repetition: 21
statement: __d.__step()
particle-size: 137
particle-size: 137
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: (action,node) := this'.scheduler()
particle-size: 136
particle-size: 136
statement: actions := ([]: (R × R)[])
particle-size: 136
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 136
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 90
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 136
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
loop-index: 2
particle-size: 136
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 3
particle-size: 136
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(1,i)]
particle-size: 50
loop-index: 4
particle-size: 136
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(0,i)]
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
statement: actions ~= [(1,i)]
particle-size: 22
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 136
particle-size: 136
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 50
particle-size: 50
particle-size: 50
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 22
particle-size: 22
statement: r := this'.front()
particle-size: 22
particle-size: 22
statement: return this'.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = this'.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 225
particle-size: 225
statement: return this'.data.length
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: this'.__H0.__run()
particle-size: 90
particle-size: 90
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 90
particle-size: 90
statement: this.dst = 0
particle-size: 90
statement: return this
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.data = [x] ~ this'.data
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 90
particle-size: 90
statement: this'.data = this'.data[1..this'.size()]
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.Q_in.popFront()
particle-size: 90
particle-size: 90
statement: this'.data = this'.data[1..this'.size()]
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 225
particle-size: 225
statement: return this'.data.length
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: this'.__H1.__run()
particle-size: 66
particle-size: 66
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 66
statement: this'.Q_in.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 225
particle-size: 225
statement: return this'.data.length
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: this'.__S0.__run()
particle-size: 5
particle-size: 5
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 5
statement: this'.route2 = 1 + 1
particle-size: 5
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 5
particle-size: 5
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 10
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 230
particle-size: 230
statement: return this'.data.length
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: this'.__S1.__run()
particle-size: 51
particle-size: 51
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 36
particle-size: 36
statement: r := this'.front()
particle-size: 36
particle-size: 36
statement: return this'.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 230
particle-size: 230
statement: return this'.data.length
particle-size: 230
particle-size: 230
particle-size: 230
particle-size: 230
statement: this'.__S2.__run()
particle-size: 13
particle-size: 13
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 321
particle-size: 321
particle-size: 321
particle-size: 104
repetition: 22
statement: __d.__step()
particle-size: 104
particle-size: 104
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: (action,node) := this'.scheduler()
particle-size: 103
particle-size: 103
statement: actions := ([]: (R × R)[])
particle-size: 103
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 64
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 50
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
loop-index: 2
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 3
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(1,i)]
particle-size: 38
loop-index: 4
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(1,i)]
particle-size: 14
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 103
particle-size: 103
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: this'.__S0.Q_in.pushBack((pkt,3))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.__H0.__run()
particle-size: 64
particle-size: 64
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 64
particle-size: 64
statement: this.dst = 0
particle-size: 64
statement: return this
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.data = [x] ~ this'.data
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.Q_in.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.__H1.__run()
particle-size: 50
particle-size: 50
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 50
statement: this'.Q_in.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.__S0.__run()
particle-size: 2
particle-size: 2
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 2
statement: this'.route2 = 1 + 1
particle-size: 2
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: this'.__S1.__run()
particle-size: 34
particle-size: 34
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: this'.__S2.__run()
particle-size: 8
particle-size: 8
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 75
repetition: 23
statement: __d.__step()
particle-size: 75
particle-size: 75
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: (action,node) := this'.scheduler()
particle-size: 74
particle-size: 74
statement: actions := ([]: (R × R)[])
particle-size: 74
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 47
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
loop-index: 1
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 38
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
loop-index: 2
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 21
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 27
loop-index: 4
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(0,i)]
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
statement: actions ~= [(1,i)]
particle-size: 8
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 74
particle-size: 74
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 39
particle-size: 39
statement: return this'.data.length
particle-size: 39
particle-size: 39
particle-size: 39
particle-size: 39
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.__H0.__run()
particle-size: 47
particle-size: 47
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 47
particle-size: 47
statement: this.dst = 0
particle-size: 47
statement: return this
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = [x] ~ this'.data
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.Q_in.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.__H1.__run()
particle-size: 38
particle-size: 38
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 38
statement: this'.Q_in.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 0 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.route1 = 2
particle-size: 1
statement: this'.route2 = 1 + 1
particle-size: 1
statement: if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.__S1.__run()
particle-size: 21
particle-size: 21
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 113
particle-size: 113
statement: return this'.data.length
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.__S2.__run()
particle-size: 5
particle-size: 5
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 153
particle-size: 153
particle-size: 153
particle-size: 53
repetition: 24
statement: __d.__step()
particle-size: 53
particle-size: 53
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: (action,node) := this'.scheduler()
particle-size: 51
particle-size: 51
statement: actions := ([]: (R × R)[])
particle-size: 51
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(0,i)]
particle-size: 31
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
loop-index: 1
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(0,i)]
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
loop-index: 2
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 3
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(0,i)]
particle-size: 11
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 4
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(1,i)]
particle-size: 5
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 51
particle-size: 51
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.__H0.__run()
particle-size: 31
particle-size: 31
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 31
particle-size: 31
statement: this.dst = 0
particle-size: 31
statement: return this
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = [x] ~ this'.data
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.Q_in.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.__H1.__run()
particle-size: 27
particle-size: 27
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 27
statement: this'.Q_in.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.__S1.__run()
particle-size: 11
particle-size: 11
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 37
repetition: 25
statement: __d.__step()
particle-size: 37
particle-size: 37
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: (action,node) := this'.scheduler()
particle-size: 35
particle-size: 35
statement: actions := ([]: (R × R)[])
particle-size: 35
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 35
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
loop-index: 1
particle-size: 35
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
statement: actions ~= [(0,i)]
particle-size: 19
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
loop-index: 2
particle-size: 35
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
loop-index: 3
particle-size: 35
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
statement: actions ~= [(1,i)]
particle-size: 11
loop-index: 4
particle-size: 35
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
statement: actions ~= [(1,i)]
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 35
particle-size: 35
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
particle-size: 61
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 11
particle-size: 11
statement: r := this'.front()
particle-size: 11
particle-size: 11
statement: return this'.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.popFront()
particle-size: 11
particle-size: 11
statement: this'.data = this'.data[1..this'.size()]
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 11
particle-size: 11
particle-size: 11
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__H0.__run()
particle-size: 22
particle-size: 22
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 22
particle-size: 22
statement: this.dst = 0
particle-size: 22
statement: return this
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = [x] ~ this'.data
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.Q_in.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__H1.__run()
particle-size: 19
particle-size: 19
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 19
statement: this'.Q_in.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S1.__run()
particle-size: 6
particle-size: 6
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S2.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 24
repetition: 26
statement: __d.__step()
particle-size: 24
particle-size: 24
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: (action,node) := this'.scheduler()
particle-size: 22
particle-size: 22
statement: actions := ([]: (R × R)[])
particle-size: 22
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: actions ~= [(0,i)]
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
loop-index: 1
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
loop-index: 2
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
loop-index: 3
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 4
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
statement: actions ~= [(1,i)]
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 22
particle-size: 22
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: this'.__S1.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.__H0.__run()
particle-size: 13
particle-size: 13
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 13
particle-size: 13
statement: this.dst = 0
particle-size: 13
statement: return this
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = [x] ~ this'.data
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.Q_in.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.__H1.__run()
particle-size: 12
particle-size: 12
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 15
repetition: 27
statement: __d.__step()
particle-size: 15
particle-size: 15
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: (action,node) := this'.scheduler()
particle-size: 13
particle-size: 13
statement: actions := ([]: (R × R)[])
particle-size: 13
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
loop-index: 1
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
loop-index: 2
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
loop-index: 3
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 13
particle-size: 13
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.__H0.__run()
particle-size: 8
particle-size: 8
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 8
particle-size: 8
statement: this.dst = 0
particle-size: 8
statement: return this
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = [x] ~ this'.data
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.__H1.__run()
particle-size: 7
particle-size: 7
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 7
statement: this'.Q_in.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.__S1.__run()
particle-size: 1
particle-size: 1
statement: if this'.Q_in.data[0][1] == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][1] == 2 {
    if this'.Q_in.data[0][0].dst == 1 {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    }
} else if this'.Q_in.data[0][1] == 3 {
    this'.route1 = 2;
    this'.route2 = 1 + 1;
    if this'.route1 < this'.route2 || this'.route1 == this'.route2 && flip(1 / 2) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    }
}
statement: if this'.Q_in.data[0][0].dst == 1 {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 8
repetition: 28
statement: __d.__step()
particle-size: 8
particle-size: 8
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (action,node) := this'.scheduler()
particle-size: 6
particle-size: 6
statement: actions := ([]: (R × R)[])
particle-size: 6
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 1
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 2
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 3
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 6
particle-size: 6
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.__H0.__run()
particle-size: 3
particle-size: 3
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 3
particle-size: 3
statement: this.dst = 0
particle-size: 3
statement: return this
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = [x] ~ this'.data
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.__H1.__run()
particle-size: 3
particle-size: 3
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 4
repetition: 29
statement: __d.__step()
particle-size: 4
particle-size: 4
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: (action,node) := this'.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..5){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else {
        this'.__S2.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else {
        this'.__S2.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else {
    this'.__S2.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else {
    this'.__S2.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.dst = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.pkt_count < 3 {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = this'.pkt_count + 1;
    this'.Q_in.data[0][0].dst = 1;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.pkt_count = this'.pkt_count + 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 2
repetition: 30
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: assert(!(__d.__H0.Q_in.size() || __d.__H0.Q_out.size() || __d.__H1.Q_in.size() || __d.__H1.Q_out.size() || __d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size()))
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: q₁ := Expectation(((if 1 == 0 {
    __d.__H0.pkt_count;
} else if 1 == 1 {
    __d.__H1.pkt_count;
} else {
    assert(0);
}) < 3) != 0)
particle-size: 2
statement: return (q₁)
particle-size: 2
E[q1_] = 30378810105265/67706637778944

real	1m4.557s
user	1m4.176s
sys	0m0.324s
