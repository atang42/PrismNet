statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'() , this.__S3 = __s3_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.route1 = 0
particle-size: 1
statement: this.route2 = 0
particle-size: 1
statement: this.route3 = 0
particle-size: 1
statement: this.shortest1 = 0
particle-size: 1
statement: this.shortest2 = 0
particle-size: 1
statement: this.shortest3 = 0
particle-size: 1
statement: this.nshortest = 0
particle-size: 1
statement: this.which = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __s3_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.phase = 0
particle-size: 1
statement: this.cur_node = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.Q_in.pushBack((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 30 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
repetition: 2
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
repetition: 3
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
repetition: 4
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
repetition: 5
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
repetition: 6
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
repetition: 7
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
statement: this'.phase = 1
particle-size: 1
statement: this'.cur_node = 0
particle-size: 1
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (1,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
repetition: 8
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (1,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
repetition: 9
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
statement: this'.phase = 0
particle-size: 1
statement: this'.cur_node = 0
particle-size: 1
loop-index: 1
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 1
statement: this'.route2 = 3
particle-size: 1
statement: this'.route3 = (2 + 1)
particle-size: 1
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 1
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 1
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 1
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 1
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
repetition: 10
statement: __d.__step()
particle-size: 3
particle-size: 3
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: (action,node) := this'.scheduler()
particle-size: 3
particle-size: 3
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 3
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: return (0,this'.cur_node)
particle-size: 3
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__S0.__run()
particle-size: 3
particle-size: 3
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 3
statement: this'.route2 = 3
particle-size: 3
statement: this'.route3 = (2 + 1)
particle-size: 3
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 3
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 3
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 3
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 3
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 3
particle-size: 3
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 9
particle-size: 9
particle-size: 9
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 11
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 1
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 2
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 3
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 4
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 5
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
statement: this'.phase = 1
particle-size: 9
statement: this'.cur_node = 0
particle-size: 9
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 1
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 2
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return (1,this'.cur_node)
particle-size: 9
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 12
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return (1,this'.cur_node)
particle-size: 9
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 13
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 1
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 2
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 3
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 4
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 5
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
statement: this'.phase = 0
particle-size: 9
statement: this'.cur_node = 0
particle-size: 9
loop-index: 1
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 1
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 2
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 3
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return (0,this'.cur_node)
particle-size: 5
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 4
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: return (0,this'.cur_node)
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S1.__run()
particle-size: 5
particle-size: 5
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S2.__run()
particle-size: 3
particle-size: 3
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S3.__run()
particle-size: 1
particle-size: 1
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 14
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return (0,this'.cur_node)
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 6
loop-index: 1
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: return (0,this'.cur_node)
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return (0,this'.cur_node)
particle-size: 2
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S1.__run()
particle-size: 1
particle-size: 1
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S2.__run()
particle-size: 3
particle-size: 3
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S3.__run()
particle-size: 5
particle-size: 5
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 15
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 1
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 2
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 3
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 4
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 5
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
statement: this'.phase = 1
particle-size: 9
statement: this'.cur_node = 0
particle-size: 9
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 1
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 2
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 3
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return (1,this'.cur_node)
particle-size: 5
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 4
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: return (1,this'.cur_node)
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (1,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 16
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return (1,this'.cur_node)
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 6
loop-index: 1
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: return (1,this'.cur_node)
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return (1,this'.cur_node)
particle-size: 2
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 17
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 1
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 2
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 3
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 4
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 5
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
statement: this'.phase = 0
particle-size: 9
statement: this'.cur_node = 0
particle-size: 9
loop-index: 1
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 9
loop-index: 1
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return (0,this'.cur_node)
particle-size: 5
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 2
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 3
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 4
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: return (0,this'.cur_node)
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__H1.__run()
particle-size: 5
particle-size: 5
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S2.__run()
particle-size: 3
particle-size: 3
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S3.__run()
particle-size: 1
particle-size: 1
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 18
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 9
particle-size: 9
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 9
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 9
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
statement: return (0,this'.cur_node)
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 6
loop-index: 1
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: return (0,this'.cur_node)
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 2
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 3
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: return (0,this'.cur_node)
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return (0,this'.cur_node)
particle-size: 2
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S2.__run()
particle-size: 3
particle-size: 3
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.__S3.__run()
particle-size: 5
particle-size: 5
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 19
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 8
particle-size: 8
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 8
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
loop-index: 1
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
loop-index: 2
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
loop-index: 3
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
loop-index: 4
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
loop-index: 5
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
statement: this'.phase = 1
particle-size: 8
statement: this'.cur_node = 0
particle-size: 8
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
loop-index: 1
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
loop-index: 2
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
loop-index: 3
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 8
loop-index: 4
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: return (1,this'.cur_node)
particle-size: 5
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 5
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: return (1,this'.cur_node)
particle-size: 3
loop-index: 1
particle-size: 0
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
repetition: 20
statement: __d.__step()
particle-size: 9
particle-size: 9
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (action,node) := this'.scheduler()
particle-size: 8
particle-size: 8
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 8
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 8
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: return (1,this'.cur_node)
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 6
loop-index: 1
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: return (1,this'.cur_node)
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 2
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 3
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 4
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 5
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
statement: this'.phase = 0
particle-size: 4
statement: this'.cur_node = 0
particle-size: 4
loop-index: 1
particle-size: 4
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 1
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: return (0,this'.cur_node)
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return (0,this'.cur_node)
particle-size: 2
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.__H1.__run()
particle-size: 2
particle-size: 2
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 2
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.__S3.__run()
particle-size: 2
particle-size: 2
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 8
repetition: 21
statement: __d.__step()
particle-size: 8
particle-size: 8
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (action,node) := this'.scheduler()
particle-size: 6
particle-size: 6
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 6
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
statement: this'.phase = 1
particle-size: 2
statement: this'.cur_node = 0
particle-size: 2
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 6
loop-index: 1
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 6
loop-index: 2
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 6
loop-index: 3
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 6
loop-index: 4
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 6
loop-index: 5
particle-size: 6
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: return (1,this'.cur_node)
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
statement: this'.phase = 0
particle-size: 4
statement: this'.cur_node = 0
particle-size: 4
loop-index: 1
particle-size: 4
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 4
loop-index: 1
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: return (0,this'.cur_node)
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.__H1.__run()
particle-size: 3
particle-size: 3
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.__S3.__run()
particle-size: 1
particle-size: 1
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
repetition: 22
statement: __d.__step()
particle-size: 8
particle-size: 8
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (action,node) := this'.scheduler()
particle-size: 6
particle-size: 6
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 6
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 4
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
statement: return (0,this'.cur_node)
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return (0,this'.cur_node)
particle-size: 2
loop-index: 5
particle-size: 0
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
statement: this'.phase = 0
particle-size: 2
statement: this'.cur_node = 0
particle-size: 2
loop-index: 1
particle-size: 2
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return (0,this'.cur_node)
particle-size: 2
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.__H1.__run()
particle-size: 3
particle-size: 3
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.__S3.__run()
particle-size: 3
particle-size: 3
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 6
repetition: 23
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (action,node) := this'.scheduler()
particle-size: 3
particle-size: 3
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 3
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 1
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 2
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 3
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 4
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 5
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
statement: this'.phase = 1
particle-size: 3
statement: this'.cur_node = 0
particle-size: 3
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 1
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 2
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 3
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 4
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 3
loop-index: 5
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: return (1,this'.cur_node)
particle-size: 3
loop-index: 1
particle-size: 0
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
repetition: 24
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (action,node) := this'.scheduler()
particle-size: 3
particle-size: 3
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 3
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 3
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
statement: return (1,this'.cur_node)
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
statement: this'.phase = 0
particle-size: 2
statement: this'.cur_node = 0
particle-size: 2
loop-index: 1
particle-size: 2
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return (0,this'.cur_node)
particle-size: 2
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.__H1.__run()
particle-size: 2
particle-size: 2
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 2
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 4
repetition: 25
statement: __d.__step()
particle-size: 4
particle-size: 4
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: if this'.phase == 1 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_out;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_out;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_out;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_out;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_out;
        } else {
            this'.__S3.Q_out;
        }).size() > 0 {
            return (1,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 0;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_out;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_out;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_out;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_out;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        return (1,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_out;
} else if this'.cur_node == 1 {
    this'.__H1.Q_out;
} else if this'.cur_node == 2 {
    this'.__S0.Q_out;
} else if this'.cur_node == 3 {
    this'.__S1.Q_out;
} else if this'.cur_node == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    return (1,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
statement: this'.phase = 0
particle-size: 1
statement: this'.cur_node = 0
particle-size: 1
loop-index: 1
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.cur_node = (this'.cur_node + 1) % 6
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
repetition: 26
statement: __d.__step()
particle-size: 4
particle-size: 4
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: for p in [0..2){
    if this'.phase == 0 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_in;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_in;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_in;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_in;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_in;
            } else {
                this'.__S3.Q_in;
            }).size() > 0 {
                return (0,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 1;
        this'.cur_node = 0;
    }
    if this'.phase == 1 {
        for i in [0..6){
            if (if this'.cur_node == 0 {
                this'.__H0.Q_out;
            } else if this'.cur_node == 1 {
                this'.__H1.Q_out;
            } else if this'.cur_node == 2 {
                this'.__S0.Q_out;
            } else if this'.cur_node == 3 {
                this'.__S1.Q_out;
            } else if this'.cur_node == 4 {
                this'.__S2.Q_out;
            } else {
                this'.__S3.Q_out;
            }).size() > 0 {
                return (1,this'.cur_node);
            }
            this'.cur_node = (this'.cur_node + 1) % 6;
        }
        this'.phase = 0;
        this'.cur_node = 0;
    }
}
loop-index: 0
particle-size: 1
statement: if this'.phase == 0 {
    for i in [0..6){
        if (if this'.cur_node == 0 {
            this'.__H0.Q_in;
        } else if this'.cur_node == 1 {
            this'.__H1.Q_in;
        } else if this'.cur_node == 2 {
            this'.__S0.Q_in;
        } else if this'.cur_node == 3 {
            this'.__S1.Q_in;
        } else if this'.cur_node == 4 {
            this'.__S2.Q_in;
        } else {
            this'.__S3.Q_in;
        }).size() > 0 {
            return (0,this'.cur_node);
        }
        this'.cur_node = (this'.cur_node + 1) % 6;
    }
    this'.phase = 1;
    this'.cur_node = 0;
}
statement: for i in [0..6){
    if (if this'.cur_node == 0 {
        this'.__H0.Q_in;
    } else if this'.cur_node == 1 {
        this'.__H1.Q_in;
    } else if this'.cur_node == 2 {
        this'.__S0.Q_in;
    } else if this'.cur_node == 3 {
        this'.__S1.Q_in;
    } else if this'.cur_node == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        return (0,this'.cur_node);
    }
    this'.cur_node = (this'.cur_node + 1) % 6;
}
loop-index: 0
particle-size: 1
statement: if (if this'.cur_node == 0 {
    this'.__H0.Q_in;
} else if this'.cur_node == 1 {
    this'.__H1.Q_in;
} else if this'.cur_node == 2 {
    this'.__S0.Q_in;
} else if this'.cur_node == 3 {
    this'.__S1.Q_in;
} else if this'.cur_node == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    return (0,this'.cur_node);
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return (0,this'.cur_node)
particle-size: 1
loop-index: 1
particle-size: 0
loop-index: 2
particle-size: 0
loop-index: 3
particle-size: 0
loop-index: 4
particle-size: 0
loop-index: 5
particle-size: 0
loop-index: 1
particle-size: 0
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 3
repetition: 27
statement: __d.__step()
particle-size: 3
particle-size: 3
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
repetition: 28
statement: __d.__step()
particle-size: 3
particle-size: 3
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
repetition: 29
statement: __d.__step()
particle-size: 3
particle-size: 3
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
repetition: 30
statement: __d.__step()
particle-size: 3
particle-size: 3
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: assert(!(__d.__H0.Q_in.size() || __d.__H0.Q_out.size() || __d.__H1.Q_in.size() || __d.__H1.Q_out.size() || __d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size() || __d.__S3.Q_in.size() || __d.__S3.Q_out.size()))
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: q₁ := Expectation(((if 1 == 0 {
    __d.__H0.pkt_count;
} else if 1 == 1 {
    __d.__H1.pkt_count;
} else {
    assert(0);
}) < 3) != 0)
particle-size: 3
statement: return (q₁)
particle-size: 3
E[q1_] = 1

real	0m1.382s
user	0m1.352s
sys	0m0.028s
