statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'() , this.__S3 = __s3_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_arrived = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.strategy = 4
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.failing = 2
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __s3_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_actions = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.Q_in.pushBack((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 30 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.num_actions += 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 2
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (action,node) := this'.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.num_actions += 1
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__H0.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 2
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 6
repetition: 3
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (action,node) := this'.scheduler()
particle-size: 6
particle-size: 6
statement: actions := ([]: (R × R)[])
particle-size: 6
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 2
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 4
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 5
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.num_actions += 1
particle-size: 6
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 6
particle-size: 6
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.__H0.__run()
particle-size: 6
particle-size: 6
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 6
particle-size: 6
statement: this.id = 0
particle-size: 6
statement: return this
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.id = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 5
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 12
repetition: 4
statement: __d.__step()
particle-size: 12
particle-size: 12
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: (action,node) := this'.scheduler()
particle-size: 12
particle-size: 12
statement: actions := ([]: (R × R)[])
particle-size: 12
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 1
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 2
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 4
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 5
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.num_actions += 1
particle-size: 12
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 12
particle-size: 12
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.__H0.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.id = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: this.id = 0
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = [x] ~ this'.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 9
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.__S0.__run()
particle-size: 3
particle-size: 3
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 3
particle-size: 3
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 26
repetition: 5
statement: __d.__step()
particle-size: 26
particle-size: 26
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: (action,node) := this'.scheduler()
particle-size: 26
particle-size: 26
statement: actions := ([]: (R × R)[])
particle-size: 26
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 1
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
loop-index: 2
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 3
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.num_actions += 1
particle-size: 26
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 26
particle-size: 26
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.__H0.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 26
particle-size: 26
statement: this.id = 0
particle-size: 26
statement: return this
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = [x] ~ this'.data
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 14
particle-size: 14
statement: this.id = 0
particle-size: 14
statement: return this
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = [x] ~ this'.data
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 14
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.__S0.__run()
particle-size: 7
particle-size: 7
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 3
particle-size: 3
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 5
particle-size: 5
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 10
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 45
repetition: 6
statement: __d.__step()
particle-size: 45
particle-size: 45
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: (action,node) := this'.scheduler()
particle-size: 45
particle-size: 45
statement: actions := ([]: (R × R)[])
particle-size: 45
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 30
loop-index: 1
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 2
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 3
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.num_actions += 1
particle-size: 45
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 45
particle-size: 45
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.__H0.__run()
particle-size: 45
particle-size: 45
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 45
particle-size: 45
statement: this.id = 0
particle-size: 45
statement: return this
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = [x] ~ this'.data
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 20
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_in.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.__S0.__run()
particle-size: 12
particle-size: 12
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 4
particle-size: 4
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 4
particle-size: 4
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 8
particle-size: 8
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 16
particle-size: 16
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.__S1.__run()
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.__S2.__run()
particle-size: 6
particle-size: 6
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 6
particle-size: 6
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 95
particle-size: 95
statement: return this'.data.length
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: this'.__S3.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 75
repetition: 7
statement: __d.__step()
particle-size: 75
particle-size: 75
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: (action,node) := this'.scheduler()
particle-size: 75
particle-size: 75
statement: actions := ([]: (R × R)[])
particle-size: 75
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 50
loop-index: 1
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
loop-index: 2
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 3
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 4
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 4
statement: this'.num_actions += 1
particle-size: 75
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 75
particle-size: 75
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: this'.__H0.__run()
particle-size: 74
particle-size: 74
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 74
particle-size: 74
statement: this.id = 0
particle-size: 74
statement: return this
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = [x] ~ this'.data
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 20
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.Q_in.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: this'.__S0.__run()
particle-size: 26
particle-size: 26
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 4
particle-size: 4
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 4
particle-size: 4
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 15
particle-size: 15
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 30
particle-size: 30
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 19
particle-size: 19
statement: r := this'.front()
particle-size: 19
particle-size: 19
statement: return this'.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.__S1.__run()
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.__S2.__run()
particle-size: 9
particle-size: 9
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 9
particle-size: 9
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 18
particle-size: 18
particle-size: 18
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.__S3.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 115
repetition: 8
statement: __d.__step()
particle-size: 115
particle-size: 115
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: (action,node) := this'.scheduler()
particle-size: 115
particle-size: 115
statement: actions := ([]: (R × R)[])
particle-size: 115
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 69
loop-index: 1
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
loop-index: 2
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 47
loop-index: 3
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 4
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 5
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 4
statement: this'.num_actions += 1
particle-size: 115
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 115
particle-size: 115
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 69
particle-size: 69
statement: r := this'.front()
particle-size: 69
particle-size: 69
statement: return this'.data[0]
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.popFront()
particle-size: 69
particle-size: 69
statement: this'.data = this'.data[1..this'.size()]
particle-size: 69
particle-size: 69
statement: return this'.data.length
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return r
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.data = this'.data ~ [x]
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 207
particle-size: 207
statement: return this'.data.length
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: this'.__H0.__run()
particle-size: 113
particle-size: 113
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 113
particle-size: 113
statement: this.id = 0
particle-size: 113
statement: return this
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.data = [x] ~ this'.data
particle-size: 113
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 27
particle-size: 27
statement: this.id = 0
particle-size: 27
statement: return this
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = [x] ~ this'.data
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 27
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 27
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.Q_in.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.Q_in.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 207
particle-size: 207
statement: return this'.data.length
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 4
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 203
particle-size: 203
statement: return this'.data.length
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: this'.__S0.__run()
particle-size: 44
particle-size: 44
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 4
particle-size: 4
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 4
particle-size: 4
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 25
particle-size: 25
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 236
particle-size: 236
statement: return this'.data.length
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: this'.__S1.__run()
particle-size: 17
particle-size: 17
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 236
particle-size: 236
statement: return this'.data.length
particle-size: 236
particle-size: 236
particle-size: 236
particle-size: 236
statement: this'.__S2.__run()
particle-size: 17
particle-size: 17
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 17
particle-size: 17
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 34
particle-size: 34
particle-size: 34
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 253
particle-size: 253
statement: return this'.data.length
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: this'.__S3.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 167
repetition: 9
statement: __d.__step()
particle-size: 167
particle-size: 167
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: (action,node) := this'.scheduler()
particle-size: 167
particle-size: 167
statement: actions := ([]: (R × R)[])
particle-size: 167
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 167
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(0,i)]
particle-size: 158
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(1,i)]
particle-size: 94
loop-index: 1
particle-size: 167
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
loop-index: 2
particle-size: 167
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(0,i)]
particle-size: 64
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(1,i)]
particle-size: 69
loop-index: 3
particle-size: 167
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 4
particle-size: 167
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 5
particle-size: 167
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
statement: actions ~= [(1,i)]
particle-size: 12
statement: this'.num_actions += 1
particle-size: 167
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 167
particle-size: 167
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 505
particle-size: 505
particle-size: 505
particle-size: 505
particle-size: 505
particle-size: 505
particle-size: 505
particle-size: 505
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 94
particle-size: 94
statement: r := this'.front()
particle-size: 94
particle-size: 94
statement: return this'.data[0]
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.popFront()
particle-size: 94
particle-size: 94
statement: this'.data = this'.data[1..this'.size()]
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return r
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.data = this'.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 69
particle-size: 69
statement: r := this'.front()
particle-size: 69
particle-size: 69
statement: return this'.data[0]
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.popFront()
particle-size: 69
particle-size: 69
statement: this'.data = this'.data[1..this'.size()]
particle-size: 69
particle-size: 69
statement: return this'.data.length
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return r
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: this'.__H0.__run()
particle-size: 158
particle-size: 158
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 158
particle-size: 158
statement: this.id = 0
particle-size: 158
statement: return this
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.data = [x] ~ this'.data
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 26
particle-size: 26
statement: this.id = 0
particle-size: 26
statement: return this
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = [x] ~ this'.data
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 26
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.Q_in.popFront()
particle-size: 132
particle-size: 132
statement: this'.data = this'.data[1..this'.size()]
particle-size: 132
particle-size: 132
statement: return this'.data.length
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: this'.Q_in.popFront()
particle-size: 132
particle-size: 132
statement: this'.data = this'.data[1..this'.size()]
particle-size: 132
particle-size: 132
statement: return this'.data.length
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 4
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 292
particle-size: 292
statement: return this'.data.length
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: this'.__S0.__run()
particle-size: 64
particle-size: 64
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 35
particle-size: 35
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 70
particle-size: 70
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 35
particle-size: 35
statement: r := this'.front()
particle-size: 35
particle-size: 35
statement: return this'.data[0]
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.popFront()
particle-size: 35
particle-size: 35
statement: this'.data = this'.data[1..this'.size()]
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return r
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 35
particle-size: 35
statement: r := this'.front()
particle-size: 35
particle-size: 35
statement: return this'.data[0]
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.popFront()
particle-size: 35
particle-size: 35
statement: this'.data = this'.data[1..this'.size()]
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return r
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 33
particle-size: 33
statement: r := this'.front()
particle-size: 33
particle-size: 33
statement: return this'.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.data = this'.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 331
particle-size: 331
statement: return this'.data.length
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: this'.__S1.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 331
particle-size: 331
statement: return this'.data.length
particle-size: 331
particle-size: 331
particle-size: 331
particle-size: 331
statement: this'.__S2.__run()
particle-size: 26
particle-size: 26
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 22
particle-size: 22
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 44
particle-size: 44
particle-size: 44
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 353
particle-size: 353
statement: return this'.data.length
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
statement: this'.__S3.__run()
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 562
particle-size: 562
particle-size: 562
particle-size: 233
repetition: 10
statement: __d.__step()
particle-size: 233
particle-size: 233
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: (action,node) := this'.scheduler()
particle-size: 233
particle-size: 233
statement: actions := ([]: (R × R)[])
particle-size: 233
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 233
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(0,i)]
particle-size: 220
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(1,i)]
particle-size: 111
loop-index: 1
particle-size: 233
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
loop-index: 2
particle-size: 233
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(0,i)]
particle-size: 90
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(1,i)]
particle-size: 96
loop-index: 3
particle-size: 233
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 4
particle-size: 233
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(1,i)]
particle-size: 24
loop-index: 5
particle-size: 233
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
statement: actions ~= [(1,i)]
particle-size: 18
statement: this'.num_actions += 1
particle-size: 233
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 233
particle-size: 233
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
particle-size: 719
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 275
particle-size: 275
statement: return this'.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 111
particle-size: 111
statement: r := this'.front()
particle-size: 111
particle-size: 111
statement: return this'.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 275
particle-size: 275
statement: return this'.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 275
particle-size: 275
statement: return this'.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 96
particle-size: 96
statement: r := this'.front()
particle-size: 96
particle-size: 96
statement: return this'.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.popFront()
particle-size: 96
particle-size: 96
statement: this'.data = this'.data[1..this'.size()]
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 275
particle-size: 275
statement: return this'.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 275
particle-size: 275
statement: return this'.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 275
particle-size: 275
statement: return this'.data.length
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 275
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: this'.__H0.__run()
particle-size: 220
particle-size: 220
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 220
particle-size: 220
statement: this.id = 0
particle-size: 220
statement: return this
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: this'.data = [x] ~ this'.data
particle-size: 220
statement: return ()
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 28
particle-size: 28
statement: this.id = 0
particle-size: 28
statement: return this
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = [x] ~ this'.data
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 28
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 28
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 28
particle-size: 28
statement: r := this'.front()
particle-size: 28
particle-size: 28
statement: return this'.data[0]
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.popFront()
particle-size: 28
particle-size: 28
statement: this'.data = this'.data[1..this'.size()]
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return r
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.Q_in.popFront()
particle-size: 192
particle-size: 192
statement: this'.data = this'.data[1..this'.size()]
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: this'.Q_in.popFront()
particle-size: 192
particle-size: 192
statement: this'.data = this'.data[1..this'.size()]
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: this'.__H1.__run()
particle-size: 12
particle-size: 12
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 12
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 432
particle-size: 432
statement: return this'.data.length
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: this'.__S0.__run()
particle-size: 90
particle-size: 90
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 50
particle-size: 50
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 100
particle-size: 100
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 484
particle-size: 484
statement: return this'.data.length
particle-size: 484
particle-size: 484
particle-size: 484
particle-size: 484
statement: this'.__S1.__run()
particle-size: 44
particle-size: 44
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 484
particle-size: 484
statement: return this'.data.length
particle-size: 484
particle-size: 484
particle-size: 484
particle-size: 484
statement: this'.__S2.__run()
particle-size: 44
particle-size: 44
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 38
particle-size: 38
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 76
particle-size: 76
particle-size: 76
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 522
particle-size: 522
statement: return this'.data.length
particle-size: 522
particle-size: 522
particle-size: 522
particle-size: 522
statement: this'.__S3.__run()
particle-size: 34
particle-size: 34
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 797
particle-size: 797
particle-size: 797
particle-size: 310
repetition: 11
statement: __d.__step()
particle-size: 310
particle-size: 310
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
particle-size: 310
statement: (action,node) := this'.scheduler()
particle-size: 310
particle-size: 310
statement: actions := ([]: (R × R)[])
particle-size: 310
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 280
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(1,i)]
particle-size: 127
loop-index: 1
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
loop-index: 2
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 111
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(1,i)]
particle-size: 144
loop-index: 3
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 57
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(1,i)]
particle-size: 44
loop-index: 4
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 57
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(1,i)]
particle-size: 42
loop-index: 5
particle-size: 310
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(0,i)]
particle-size: 50
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 310
particle-size: 310
statement: return this'.data.length
particle-size: 310
particle-size: 310
particle-size: 310
statement: actions ~= [(1,i)]
particle-size: 34
statement: this'.num_actions += 1
particle-size: 310
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 310
particle-size: 310
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 964
particle-size: 964
particle-size: 964
particle-size: 964
particle-size: 964
particle-size: 964
particle-size: 964
particle-size: 964
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 391
particle-size: 391
statement: return this'.data.length
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 127
particle-size: 127
statement: r := this'.front()
particle-size: 127
particle-size: 127
statement: return this'.data[0]
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.popFront()
particle-size: 127
particle-size: 127
statement: this'.data = this'.data[1..this'.size()]
particle-size: 127
particle-size: 127
statement: return this'.data.length
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return r
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.data = this'.data ~ [x]
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 391
particle-size: 391
statement: return this'.data.length
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 391
particle-size: 391
statement: return this'.data.length
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 144
particle-size: 144
statement: r := this'.front()
particle-size: 144
particle-size: 144
statement: return this'.data[0]
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return r
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.data = this'.data ~ [x]
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 391
particle-size: 391
statement: return this'.data.length
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 391
particle-size: 391
statement: return this'.data.length
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 391
particle-size: 391
statement: return this'.data.length
particle-size: 391
particle-size: 391
particle-size: 391
particle-size: 391
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 573
particle-size: 573
statement: return this'.data.length
particle-size: 573
particle-size: 573
particle-size: 573
particle-size: 573
statement: this'.__H0.__run()
particle-size: 280
particle-size: 280
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 280
particle-size: 280
statement: this.id = 0
particle-size: 280
statement: return this
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: this'.data = [x] ~ this'.data
particle-size: 280
statement: return ()
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 24
particle-size: 24
statement: this.id = 0
particle-size: 24
statement: return this
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = [x] ~ this'.data
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 24
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 24
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.Q_in.popFront()
particle-size: 256
particle-size: 256
statement: this'.data = this'.data[1..this'.size()]
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return ()
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: this'.Q_in.popFront()
particle-size: 256
particle-size: 256
statement: this'.data = this'.data[1..this'.size()]
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return ()
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return ()
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 573
particle-size: 573
statement: return this'.data.length
particle-size: 573
particle-size: 573
particle-size: 573
particle-size: 573
statement: this'.__H1.__run()
particle-size: 18
particle-size: 18
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 18
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 555
particle-size: 555
statement: return this'.data.length
particle-size: 555
particle-size: 555
particle-size: 555
particle-size: 555
statement: this'.__S0.__run()
particle-size: 111
particle-size: 111
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 64
particle-size: 64
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 128
particle-size: 128
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 64
particle-size: 64
statement: r := this'.front()
particle-size: 64
particle-size: 64
statement: return this'.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.data = this'.data ~ [x]
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 64
particle-size: 64
statement: r := this'.front()
particle-size: 64
particle-size: 64
statement: return this'.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.data = this'.data ~ [x]
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 175
particle-size: 175
particle-size: 175
particle-size: 175
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 619
particle-size: 619
statement: return this'.data.length
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: this'.__S1.__run()
particle-size: 57
particle-size: 57
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 619
particle-size: 619
statement: return this'.data.length
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: this'.__S2.__run()
particle-size: 57
particle-size: 57
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 45
particle-size: 45
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 90
particle-size: 90
particle-size: 90
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 664
particle-size: 664
statement: return this'.data.length
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: this'.__S3.__run()
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 1055
particle-size: 1055
particle-size: 1055
particle-size: 388
repetition: 12
statement: __d.__step()
particle-size: 388
particle-size: 388
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
particle-size: 388
statement: (action,node) := this'.scheduler()
particle-size: 388
particle-size: 388
statement: actions := ([]: (R × R)[])
particle-size: 388
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 388
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(0,i)]
particle-size: 354
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(1,i)]
particle-size: 129
loop-index: 1
particle-size: 388
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
loop-index: 2
particle-size: 388
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(0,i)]
particle-size: 131
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(1,i)]
particle-size: 177
loop-index: 3
particle-size: 388
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(0,i)]
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(1,i)]
particle-size: 57
loop-index: 4
particle-size: 388
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(0,i)]
particle-size: 81
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(1,i)]
particle-size: 52
loop-index: 5
particle-size: 388
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(0,i)]
particle-size: 86
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 388
particle-size: 388
statement: return this'.data.length
particle-size: 388
particle-size: 388
particle-size: 388
statement: actions ~= [(1,i)]
particle-size: 49
statement: this'.num_actions += 1
particle-size: 388
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 388
particle-size: 388
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1232
particle-size: 1232
particle-size: 1232
particle-size: 1232
particle-size: 1232
particle-size: 1232
particle-size: 1232
particle-size: 1232
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 464
particle-size: 464
statement: return this'.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 129
particle-size: 129
statement: r := this'.front()
particle-size: 129
particle-size: 129
statement: return this'.data[0]
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.popFront()
particle-size: 129
particle-size: 129
statement: this'.data = this'.data[1..this'.size()]
particle-size: 129
particle-size: 129
statement: return this'.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return r
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.data = this'.data ~ [x]
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 464
particle-size: 464
statement: return this'.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 464
particle-size: 464
statement: return this'.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 177
particle-size: 177
statement: r := this'.front()
particle-size: 177
particle-size: 177
statement: return this'.data[0]
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: this'.popFront()
particle-size: 177
particle-size: 177
statement: this'.data = this'.data[1..this'.size()]
particle-size: 177
particle-size: 177
statement: return this'.data.length
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: return ()
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: return r
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
particle-size: 177
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.data = this'.data ~ [x]
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 91
particle-size: 91
particle-size: 91
statement: this'.data = this'.data ~ [x]
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 464
particle-size: 464
statement: return this'.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 464
particle-size: 464
statement: return this'.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 52
particle-size: 52
statement: r := this'.front()
particle-size: 52
particle-size: 52
statement: return this'.data[0]
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return r
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.data = this'.data ~ [x]
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 464
particle-size: 464
statement: return this'.data.length
particle-size: 464
particle-size: 464
particle-size: 464
particle-size: 464
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 49
particle-size: 49
statement: r := this'.front()
particle-size: 49
particle-size: 49
statement: return this'.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 768
particle-size: 768
statement: return this'.data.length
particle-size: 768
particle-size: 768
particle-size: 768
particle-size: 768
statement: this'.__H0.__run()
particle-size: 354
particle-size: 354
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 354
particle-size: 354
statement: this.id = 0
particle-size: 354
statement: return this
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: this'.data = [x] ~ this'.data
particle-size: 354
statement: return ()
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 25
particle-size: 25
statement: this.id = 0
particle-size: 25
statement: return this
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = [x] ~ this'.data
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 25
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_in.popFront()
particle-size: 329
particle-size: 329
statement: this'.data = this'.data[1..this'.size()]
particle-size: 329
particle-size: 329
statement: return this'.data.length
particle-size: 329
particle-size: 329
particle-size: 329
particle-size: 329
particle-size: 329
statement: return ()
particle-size: 329
particle-size: 329
particle-size: 329
particle-size: 329
statement: this'.Q_in.popFront()
particle-size: 329
particle-size: 329
statement: this'.data = this'.data[1..this'.size()]
particle-size: 329
particle-size: 329
statement: return this'.data.length
particle-size: 329
particle-size: 329
particle-size: 329
particle-size: 329
particle-size: 329
statement: return ()
particle-size: 329
particle-size: 329
particle-size: 329
particle-size: 329
statement: return ()
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 768
particle-size: 768
statement: return this'.data.length
particle-size: 768
particle-size: 768
particle-size: 768
particle-size: 768
statement: this'.__H1.__run()
particle-size: 34
particle-size: 34
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 34
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 734
particle-size: 734
statement: return this'.data.length
particle-size: 734
particle-size: 734
particle-size: 734
particle-size: 734
statement: this'.__S0.__run()
particle-size: 131
particle-size: 131
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 79
particle-size: 79
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 158
particle-size: 158
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 79
particle-size: 79
statement: r := this'.front()
particle-size: 79
particle-size: 79
statement: return this'.data[0]
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.popFront()
particle-size: 79
particle-size: 79
statement: this'.data = this'.data[1..this'.size()]
particle-size: 79
particle-size: 79
statement: return this'.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: return r
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.data = this'.data ~ [x]
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 79
particle-size: 79
statement: r := this'.front()
particle-size: 79
particle-size: 79
statement: return this'.data[0]
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.popFront()
particle-size: 79
particle-size: 79
statement: this'.data = this'.data[1..this'.size()]
particle-size: 79
particle-size: 79
statement: return this'.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: return r
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.data = this'.data ~ [x]
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 52
particle-size: 52
statement: r := this'.front()
particle-size: 52
particle-size: 52
statement: return this'.data[0]
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return r
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.data = this'.data ~ [x]
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 210
particle-size: 210
particle-size: 210
particle-size: 210
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 813
particle-size: 813
statement: return this'.data.length
particle-size: 813
particle-size: 813
particle-size: 813
particle-size: 813
statement: this'.__S1.__run()
particle-size: 82
particle-size: 82
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 82
particle-size: 82
statement: r := this'.front()
particle-size: 82
particle-size: 82
statement: return this'.data[0]
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return r
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.data = this'.data ~ [x]
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 813
particle-size: 813
statement: return this'.data.length
particle-size: 813
particle-size: 813
particle-size: 813
particle-size: 813
statement: this'.__S2.__run()
particle-size: 81
particle-size: 81
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 59
particle-size: 59
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 118
particle-size: 118
particle-size: 118
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 74
particle-size: 74
statement: r := this'.front()
particle-size: 74
particle-size: 74
statement: return this'.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 872
particle-size: 872
statement: return this'.data.length
particle-size: 872
particle-size: 872
particle-size: 872
particle-size: 872
statement: this'.__S3.__run()
particle-size: 86
particle-size: 86
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 86
particle-size: 86
statement: r := this'.front()
particle-size: 86
particle-size: 86
statement: return this'.data[0]
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return r
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.data = this'.data ~ [x]
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 1336
particle-size: 1336
particle-size: 1336
particle-size: 475
repetition: 13
statement: __d.__step()
particle-size: 475
particle-size: 475
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
particle-size: 475
statement: (action,node) := this'.scheduler()
particle-size: 475
particle-size: 475
statement: actions := ([]: (R × R)[])
particle-size: 475
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 475
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(0,i)]
particle-size: 420
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(1,i)]
particle-size: 134
loop-index: 1
particle-size: 475
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(0,i)]
particle-size: 49
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
loop-index: 2
particle-size: 475
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(0,i)]
particle-size: 135
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(1,i)]
particle-size: 222
loop-index: 3
particle-size: 475
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(0,i)]
particle-size: 105
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(1,i)]
particle-size: 84
loop-index: 4
particle-size: 475
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(0,i)]
particle-size: 105
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(1,i)]
particle-size: 74
loop-index: 5
particle-size: 475
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(0,i)]
particle-size: 109
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 475
particle-size: 475
statement: return this'.data.length
particle-size: 475
particle-size: 475
particle-size: 475
statement: actions ~= [(1,i)]
particle-size: 84
statement: this'.num_actions += 1
particle-size: 475
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 475
particle-size: 475
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1521
particle-size: 1521
particle-size: 1521
particle-size: 1521
particle-size: 1521
particle-size: 1521
particle-size: 1521
particle-size: 1521
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 134
particle-size: 134
statement: r := this'.front()
particle-size: 134
particle-size: 134
statement: return this'.data[0]
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.popFront()
particle-size: 134
particle-size: 134
statement: this'.data = this'.data[1..this'.size()]
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return r
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.data = this'.data ~ [x]
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 222
particle-size: 222
statement: r := this'.front()
particle-size: 222
particle-size: 222
statement: return this'.data[0]
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: this'.popFront()
particle-size: 222
particle-size: 222
statement: this'.data = this'.data[1..this'.size()]
particle-size: 222
particle-size: 222
statement: return this'.data.length
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return ()
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: return r
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
particle-size: 222
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.data = this'.data ~ [x]
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.data = this'.data ~ [x]
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 74
particle-size: 74
statement: r := this'.front()
particle-size: 74
particle-size: 74
statement: return this'.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
particle-size: 598
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 923
particle-size: 923
statement: return this'.data.length
particle-size: 923
particle-size: 923
particle-size: 923
particle-size: 923
statement: this'.__H0.__run()
particle-size: 420
particle-size: 420
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 420
particle-size: 420
statement: this.id = 0
particle-size: 420
statement: return this
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: this'.data = [x] ~ this'.data
particle-size: 420
statement: return ()
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 16
particle-size: 16
statement: this.id = 0
particle-size: 16
statement: return this
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = [x] ~ this'.data
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 16
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 16
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.Q_in.popFront()
particle-size: 404
particle-size: 404
statement: this'.data = this'.data[1..this'.size()]
particle-size: 404
particle-size: 404
statement: return this'.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return ()
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: this'.Q_in.popFront()
particle-size: 404
particle-size: 404
statement: this'.data = this'.data[1..this'.size()]
particle-size: 404
particle-size: 404
statement: return this'.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return ()
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return ()
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 923
particle-size: 923
statement: return this'.data.length
particle-size: 923
particle-size: 923
particle-size: 923
particle-size: 923
statement: this'.__H1.__run()
particle-size: 49
particle-size: 49
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 49
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 874
particle-size: 874
statement: return this'.data.length
particle-size: 874
particle-size: 874
particle-size: 874
particle-size: 874
statement: this'.__S0.__run()
particle-size: 135
particle-size: 135
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 86
particle-size: 86
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 172
particle-size: 172
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 86
particle-size: 86
statement: r := this'.front()
particle-size: 86
particle-size: 86
statement: return this'.data[0]
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return r
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.data = this'.data ~ [x]
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 86
particle-size: 86
statement: r := this'.front()
particle-size: 86
particle-size: 86
statement: return this'.data[0]
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return r
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.data = this'.data ~ [x]
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 49
particle-size: 49
statement: r := this'.front()
particle-size: 49
particle-size: 49
statement: return this'.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 960
particle-size: 960
statement: return this'.data.length
particle-size: 960
particle-size: 960
particle-size: 960
particle-size: 960
statement: this'.__S1.__run()
particle-size: 105
particle-size: 105
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 105
particle-size: 105
statement: r := this'.front()
particle-size: 105
particle-size: 105
statement: return this'.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.popFront()
particle-size: 105
particle-size: 105
statement: this'.data = this'.data[1..this'.size()]
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 960
particle-size: 960
statement: return this'.data.length
particle-size: 960
particle-size: 960
particle-size: 960
particle-size: 960
statement: this'.__S2.__run()
particle-size: 105
particle-size: 105
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 64
particle-size: 64
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 128
particle-size: 128
particle-size: 128
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 91
particle-size: 91
statement: r := this'.front()
particle-size: 91
particle-size: 91
statement: return this'.data[0]
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this'.popFront()
particle-size: 91
particle-size: 91
statement: this'.data = this'.data[1..this'.size()]
particle-size: 91
particle-size: 91
statement: return this'.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return r
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this'.data = this'.data ~ [x]
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1024
particle-size: 1024
statement: return this'.data.length
particle-size: 1024
particle-size: 1024
particle-size: 1024
particle-size: 1024
statement: this'.__S3.__run()
particle-size: 109
particle-size: 109
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 109
particle-size: 109
statement: r := this'.front()
particle-size: 109
particle-size: 109
statement: return this'.data[0]
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.popFront()
particle-size: 109
particle-size: 109
statement: this'.data = this'.data[1..this'.size()]
particle-size: 109
particle-size: 109
statement: return this'.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return r
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.data = this'.data ~ [x]
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 1622
particle-size: 1622
particle-size: 1622
particle-size: 556
repetition: 14
statement: __d.__step()
particle-size: 556
particle-size: 556
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
particle-size: 556
statement: (action,node) := this'.scheduler()
particle-size: 556
particle-size: 556
statement: actions := ([]: (R × R)[])
particle-size: 556
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 556
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(0,i)]
particle-size: 483
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(1,i)]
particle-size: 123
loop-index: 1
particle-size: 556
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(0,i)]
particle-size: 84
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
loop-index: 2
particle-size: 556
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(0,i)]
particle-size: 138
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(1,i)]
particle-size: 249
loop-index: 3
particle-size: 556
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(0,i)]
particle-size: 136
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(1,i)]
particle-size: 105
loop-index: 4
particle-size: 556
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(0,i)]
particle-size: 135
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(1,i)]
particle-size: 88
loop-index: 5
particle-size: 556
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(0,i)]
particle-size: 158
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 556
particle-size: 556
statement: return this'.data.length
particle-size: 556
particle-size: 556
particle-size: 556
statement: actions ~= [(1,i)]
particle-size: 104
statement: this'.num_actions += 1
particle-size: 556
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 556
particle-size: 556
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1803
particle-size: 1803
particle-size: 1803
particle-size: 1803
particle-size: 1803
particle-size: 1803
particle-size: 1803
particle-size: 1803
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 669
particle-size: 669
statement: return this'.data.length
particle-size: 669
particle-size: 669
particle-size: 669
particle-size: 669
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 123
particle-size: 123
statement: r := this'.front()
particle-size: 123
particle-size: 123
statement: return this'.data[0]
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: this'.popFront()
particle-size: 123
particle-size: 123
statement: this'.data = this'.data[1..this'.size()]
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: return r
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 123
particle-size: 123
particle-size: 123
statement: this'.data = this'.data ~ [x]
particle-size: 123
statement: return ()
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 669
particle-size: 669
statement: return this'.data.length
particle-size: 669
particle-size: 669
particle-size: 669
particle-size: 669
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 669
particle-size: 669
statement: return this'.data.length
particle-size: 669
particle-size: 669
particle-size: 669
particle-size: 669
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 249
particle-size: 249
statement: r := this'.front()
particle-size: 249
particle-size: 249
statement: return this'.data[0]
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 249
statement: this'.popFront()
particle-size: 249
particle-size: 249
statement: this'.data = this'.data[1..this'.size()]
particle-size: 249
particle-size: 249
statement: return this'.data.length
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 249
statement: return ()
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 249
statement: return r
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 249
particle-size: 249
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 122
particle-size: 122
particle-size: 122
statement: this'.data = this'.data ~ [x]
particle-size: 122
statement: return ()
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.data = this'.data ~ [x]
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 669
particle-size: 669
statement: return this'.data.length
particle-size: 669
particle-size: 669
particle-size: 669
particle-size: 669
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 105
particle-size: 105
statement: r := this'.front()
particle-size: 105
particle-size: 105
statement: return this'.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.popFront()
particle-size: 105
particle-size: 105
statement: this'.data = this'.data[1..this'.size()]
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 669
particle-size: 669
statement: return this'.data.length
particle-size: 669
particle-size: 669
particle-size: 669
particle-size: 669
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 88
particle-size: 88
statement: r := this'.front()
particle-size: 88
particle-size: 88
statement: return this'.data[0]
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.popFront()
particle-size: 88
particle-size: 88
statement: this'.data = this'.data[1..this'.size()]
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return ()
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return r
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.data = this'.data ~ [x]
particle-size: 88
statement: return ()
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 669
particle-size: 669
statement: return this'.data.length
particle-size: 669
particle-size: 669
particle-size: 669
particle-size: 669
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 104
particle-size: 104
statement: r := this'.front()
particle-size: 104
particle-size: 104
statement: return this'.data[0]
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.popFront()
particle-size: 104
particle-size: 104
statement: this'.data = this'.data[1..this'.size()]
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return r
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.data = this'.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1134
particle-size: 1134
statement: return this'.data.length
particle-size: 1134
particle-size: 1134
particle-size: 1134
particle-size: 1134
statement: this'.__H0.__run()
particle-size: 483
particle-size: 483
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 483
particle-size: 483
statement: this.id = 0
particle-size: 483
statement: return this
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: this'.data = [x] ~ this'.data
particle-size: 483
statement: return ()
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.id = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 12
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 471
particle-size: 471
statement: this'.data = this'.data[1..this'.size()]
particle-size: 471
particle-size: 471
statement: return this'.data.length
particle-size: 471
particle-size: 471
particle-size: 471
particle-size: 471
particle-size: 471
statement: return ()
particle-size: 471
particle-size: 471
particle-size: 471
particle-size: 471
statement: this'.Q_in.popFront()
particle-size: 471
particle-size: 471
statement: this'.data = this'.data[1..this'.size()]
particle-size: 471
particle-size: 471
statement: return this'.data.length
particle-size: 471
particle-size: 471
particle-size: 471
particle-size: 471
particle-size: 471
statement: return ()
particle-size: 471
particle-size: 471
particle-size: 471
particle-size: 471
statement: return ()
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1134
particle-size: 1134
statement: return this'.data.length
particle-size: 1134
particle-size: 1134
particle-size: 1134
particle-size: 1134
statement: this'.__H1.__run()
particle-size: 84
particle-size: 84
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 84
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1050
particle-size: 1050
statement: return this'.data.length
particle-size: 1050
particle-size: 1050
particle-size: 1050
particle-size: 1050
statement: this'.__S0.__run()
particle-size: 138
particle-size: 138
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 93
particle-size: 93
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 186
particle-size: 186
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 93
particle-size: 93
statement: r := this'.front()
particle-size: 93
particle-size: 93
statement: return this'.data[0]
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.popFront()
particle-size: 93
particle-size: 93
statement: this'.data = this'.data[1..this'.size()]
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return r
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.data = this'.data ~ [x]
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 93
particle-size: 93
statement: r := this'.front()
particle-size: 93
particle-size: 93
statement: return this'.data[0]
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.popFront()
particle-size: 93
particle-size: 93
statement: this'.data = this'.data[1..this'.size()]
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return r
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.data = this'.data ~ [x]
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1143
particle-size: 1143
statement: return this'.data.length
particle-size: 1143
particle-size: 1143
particle-size: 1143
particle-size: 1143
statement: this'.__S1.__run()
particle-size: 136
particle-size: 136
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 136
particle-size: 136
statement: r := this'.front()
particle-size: 136
particle-size: 136
statement: return this'.data[0]
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this'.popFront()
particle-size: 136
particle-size: 136
statement: this'.data = this'.data[1..this'.size()]
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return r
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this'.data = this'.data ~ [x]
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1143
particle-size: 1143
statement: return this'.data.length
particle-size: 1143
particle-size: 1143
particle-size: 1143
particle-size: 1143
statement: this'.__S2.__run()
particle-size: 135
particle-size: 135
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 72
particle-size: 72
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 144
particle-size: 144
particle-size: 144
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 91
particle-size: 91
statement: this'.data = this'.data[1..this'.size()]
particle-size: 91
particle-size: 91
statement: return this'.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 116
particle-size: 116
statement: r := this'.front()
particle-size: 116
particle-size: 116
statement: return this'.data[0]
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.popFront()
particle-size: 116
particle-size: 116
statement: this'.data = this'.data[1..this'.size()]
particle-size: 116
particle-size: 116
statement: return this'.data.length
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return r
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.data = this'.data ~ [x]
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1215
particle-size: 1215
statement: return this'.data.length
particle-size: 1215
particle-size: 1215
particle-size: 1215
particle-size: 1215
statement: this'.__S3.__run()
particle-size: 158
particle-size: 158
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 158
particle-size: 158
statement: r := this'.front()
particle-size: 158
particle-size: 158
statement: return this'.data[0]
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.popFront()
particle-size: 158
particle-size: 158
statement: this'.data = this'.data[1..this'.size()]
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return r
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.data = this'.data ~ [x]
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return ()
particle-size: 1884
particle-size: 1884
particle-size: 1884
particle-size: 614
repetition: 15
statement: __d.__step()
particle-size: 614
particle-size: 614
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
particle-size: 614
statement: (action,node) := this'.scheduler()
particle-size: 614
particle-size: 614
statement: actions := ([]: (R × R)[])
particle-size: 614
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 614
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(0,i)]
particle-size: 520
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(1,i)]
particle-size: 105
loop-index: 1
particle-size: 614
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(0,i)]
particle-size: 104
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
loop-index: 2
particle-size: 614
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(0,i)]
particle-size: 127
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(1,i)]
particle-size: 258
loop-index: 3
particle-size: 614
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(0,i)]
particle-size: 150
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(1,i)]
particle-size: 134
loop-index: 4
particle-size: 614
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(0,i)]
particle-size: 149
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(1,i)]
particle-size: 108
loop-index: 5
particle-size: 614
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(0,i)]
particle-size: 193
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 614
particle-size: 614
statement: return this'.data.length
particle-size: 614
particle-size: 614
particle-size: 614
statement: actions ~= [(1,i)]
particle-size: 148
statement: this'.num_actions += 1
particle-size: 614
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 614
particle-size: 614
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1996
particle-size: 1996
particle-size: 1996
particle-size: 1996
particle-size: 1996
particle-size: 1996
particle-size: 1996
particle-size: 1996
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
particle-size: 753
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 105
particle-size: 105
statement: r := this'.front()
particle-size: 105
particle-size: 105
statement: return this'.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.popFront()
particle-size: 105
particle-size: 105
statement: this'.data = this'.data[1..this'.size()]
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
particle-size: 753
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
particle-size: 753
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 258
particle-size: 258
statement: r := this'.front()
particle-size: 258
particle-size: 258
statement: return this'.data[0]
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: this'.popFront()
particle-size: 258
particle-size: 258
statement: this'.data = this'.data[1..this'.size()]
particle-size: 258
particle-size: 258
statement: return this'.data.length
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return r
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.data = this'.data ~ [x]
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 131
particle-size: 131
particle-size: 131
statement: this'.data = this'.data ~ [x]
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
particle-size: 753
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 134
particle-size: 134
statement: r := this'.front()
particle-size: 134
particle-size: 134
statement: return this'.data[0]
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.popFront()
particle-size: 134
particle-size: 134
statement: this'.data = this'.data[1..this'.size()]
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return r
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 134
particle-size: 134
particle-size: 134
statement: this'.data = this'.data ~ [x]
particle-size: 134
statement: return ()
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
particle-size: 753
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 108
particle-size: 108
statement: r := this'.front()
particle-size: 108
particle-size: 108
statement: return this'.data[0]
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.popFront()
particle-size: 108
particle-size: 108
statement: this'.data = this'.data[1..this'.size()]
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return r
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.data = this'.data ~ [x]
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
particle-size: 753
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 148
particle-size: 148
statement: r := this'.front()
particle-size: 148
particle-size: 148
statement: return this'.data[0]
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: this'.popFront()
particle-size: 148
particle-size: 148
statement: this'.data = this'.data[1..this'.size()]
particle-size: 148
particle-size: 148
statement: return this'.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return r
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 148
particle-size: 148
particle-size: 148
statement: this'.data = this'.data ~ [x]
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1243
particle-size: 1243
statement: return this'.data.length
particle-size: 1243
particle-size: 1243
particle-size: 1243
particle-size: 1243
statement: this'.__H0.__run()
particle-size: 520
particle-size: 520
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 520
particle-size: 520
statement: this.id = 0
particle-size: 520
statement: return this
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: this'.data = [x] ~ this'.data
particle-size: 520
statement: return ()
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.id = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 5
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 515
particle-size: 515
statement: this'.data = this'.data[1..this'.size()]
particle-size: 515
particle-size: 515
statement: return this'.data.length
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: return ()
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: this'.Q_in.popFront()
particle-size: 515
particle-size: 515
statement: this'.data = this'.data[1..this'.size()]
particle-size: 515
particle-size: 515
statement: return this'.data.length
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: return ()
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: return ()
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 520
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1243
particle-size: 1243
statement: return this'.data.length
particle-size: 1243
particle-size: 1243
particle-size: 1243
particle-size: 1243
statement: this'.__H1.__run()
particle-size: 104
particle-size: 104
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 104
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1139
particle-size: 1139
statement: return this'.data.length
particle-size: 1139
particle-size: 1139
particle-size: 1139
particle-size: 1139
statement: this'.__S0.__run()
particle-size: 127
particle-size: 127
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 89
particle-size: 89
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 178
particle-size: 178
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 89
particle-size: 89
statement: r := this'.front()
particle-size: 89
particle-size: 89
statement: return this'.data[0]
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.popFront()
particle-size: 89
particle-size: 89
statement: this'.data = this'.data[1..this'.size()]
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return r
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 89
particle-size: 89
statement: r := this'.front()
particle-size: 89
particle-size: 89
statement: return this'.data[0]
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.popFront()
particle-size: 89
particle-size: 89
statement: this'.data = this'.data[1..this'.size()]
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return r
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1228
particle-size: 1228
statement: return this'.data.length
particle-size: 1228
particle-size: 1228
particle-size: 1228
particle-size: 1228
statement: this'.__S1.__run()
particle-size: 150
particle-size: 150
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 150
particle-size: 150
statement: r := this'.front()
particle-size: 150
particle-size: 150
statement: return this'.data[0]
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: this'.popFront()
particle-size: 150
particle-size: 150
statement: this'.data = this'.data[1..this'.size()]
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return r
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: this'.data = this'.data ~ [x]
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1228
particle-size: 1228
statement: return this'.data.length
particle-size: 1228
particle-size: 1228
particle-size: 1228
particle-size: 1228
statement: this'.__S2.__run()
particle-size: 149
particle-size: 149
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 69
particle-size: 69
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 138
particle-size: 138
particle-size: 138
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 89
particle-size: 89
statement: this'.data = this'.data[1..this'.size()]
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 129
particle-size: 129
statement: r := this'.front()
particle-size: 129
particle-size: 129
statement: return this'.data[0]
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.popFront()
particle-size: 129
particle-size: 129
statement: this'.data = this'.data[1..this'.size()]
particle-size: 129
particle-size: 129
statement: return this'.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return r
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.data = this'.data ~ [x]
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return ()
particle-size: 218
particle-size: 218
particle-size: 218
particle-size: 218
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1297
particle-size: 1297
statement: return this'.data.length
particle-size: 1297
particle-size: 1297
particle-size: 1297
particle-size: 1297
statement: this'.__S3.__run()
particle-size: 193
particle-size: 193
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 193
particle-size: 193
statement: r := this'.front()
particle-size: 193
particle-size: 193
statement: return this'.data[0]
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.popFront()
particle-size: 193
particle-size: 193
statement: this'.data = this'.data[1..this'.size()]
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return r
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.data = this'.data ~ [x]
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 2050
particle-size: 2050
particle-size: 2050
particle-size: 658
repetition: 16
statement: __d.__step()
particle-size: 658
particle-size: 658
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
particle-size: 658
statement: (action,node) := this'.scheduler()
particle-size: 658
particle-size: 658
statement: actions := ([]: (R × R)[])
particle-size: 658
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 658
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(0,i)]
particle-size: 551
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(1,i)]
particle-size: 82
loop-index: 1
particle-size: 658
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(0,i)]
particle-size: 148
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
loop-index: 2
particle-size: 658
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(0,i)]
particle-size: 109
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(1,i)]
particle-size: 234
loop-index: 3
particle-size: 658
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(0,i)]
particle-size: 169
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(1,i)]
particle-size: 148
loop-index: 4
particle-size: 658
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(0,i)]
particle-size: 169
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(1,i)]
particle-size: 116
loop-index: 5
particle-size: 658
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(0,i)]
particle-size: 246
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 658
particle-size: 658
statement: return this'.data.length
particle-size: 658
particle-size: 658
particle-size: 658
statement: actions ~= [(1,i)]
particle-size: 176
statement: this'.num_actions += 1
particle-size: 658
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 658
particle-size: 658
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2148
particle-size: 2148
particle-size: 2148
particle-size: 2148
particle-size: 2148
particle-size: 2148
particle-size: 2148
particle-size: 2148
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 82
particle-size: 82
statement: r := this'.front()
particle-size: 82
particle-size: 82
statement: return this'.data[0]
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return r
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.data = this'.data ~ [x]
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 234
particle-size: 234
statement: r := this'.front()
particle-size: 234
particle-size: 234
statement: return this'.data[0]
particle-size: 234
particle-size: 234
particle-size: 234
particle-size: 234
particle-size: 234
statement: this'.popFront()
particle-size: 234
particle-size: 234
statement: this'.data = this'.data[1..this'.size()]
particle-size: 234
particle-size: 234
statement: return this'.data.length
particle-size: 234
particle-size: 234
particle-size: 234
particle-size: 234
particle-size: 234
statement: return ()
particle-size: 234
particle-size: 234
particle-size: 234
particle-size: 234
statement: return r
particle-size: 234
particle-size: 234
particle-size: 234
particle-size: 234
particle-size: 234
particle-size: 234
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.data = this'.data ~ [x]
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 118
particle-size: 118
particle-size: 118
statement: this'.data = this'.data ~ [x]
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 148
particle-size: 148
statement: r := this'.front()
particle-size: 148
particle-size: 148
statement: return this'.data[0]
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: this'.popFront()
particle-size: 148
particle-size: 148
statement: this'.data = this'.data[1..this'.size()]
particle-size: 148
particle-size: 148
statement: return this'.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return r
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 148
particle-size: 148
particle-size: 148
statement: this'.data = this'.data ~ [x]
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 116
particle-size: 116
statement: r := this'.front()
particle-size: 116
particle-size: 116
statement: return this'.data[0]
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.popFront()
particle-size: 116
particle-size: 116
statement: this'.data = this'.data[1..this'.size()]
particle-size: 116
particle-size: 116
statement: return this'.data.length
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return r
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.data = this'.data ~ [x]
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 176
particle-size: 176
statement: r := this'.front()
particle-size: 176
particle-size: 176
statement: return this'.data[0]
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: this'.popFront()
particle-size: 176
particle-size: 176
statement: this'.data = this'.data[1..this'.size()]
particle-size: 176
particle-size: 176
statement: return this'.data.length
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: return ()
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: return r
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 176
particle-size: 176
particle-size: 176
statement: this'.data = this'.data ~ [x]
particle-size: 176
statement: return ()
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1392
particle-size: 1392
statement: return this'.data.length
particle-size: 1392
particle-size: 1392
particle-size: 1392
particle-size: 1392
statement: this'.__H0.__run()
particle-size: 551
particle-size: 551
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 551
particle-size: 551
statement: this.id = 0
particle-size: 551
statement: return this
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: this'.data = [x] ~ this'.data
particle-size: 551
statement: return ()
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.id = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 5
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 546
particle-size: 546
statement: this'.data = this'.data[1..this'.size()]
particle-size: 546
particle-size: 546
statement: return this'.data.length
particle-size: 546
particle-size: 546
particle-size: 546
particle-size: 546
particle-size: 546
statement: return ()
particle-size: 546
particle-size: 546
particle-size: 546
particle-size: 546
statement: this'.Q_in.popFront()
particle-size: 546
particle-size: 546
statement: this'.data = this'.data[1..this'.size()]
particle-size: 546
particle-size: 546
statement: return this'.data.length
particle-size: 546
particle-size: 546
particle-size: 546
particle-size: 546
particle-size: 546
statement: return ()
particle-size: 546
particle-size: 546
particle-size: 546
particle-size: 546
statement: return ()
particle-size: 551
particle-size: 551
particle-size: 551
particle-size: 551
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1392
particle-size: 1392
statement: return this'.data.length
particle-size: 1392
particle-size: 1392
particle-size: 1392
particle-size: 1392
statement: this'.__H1.__run()
particle-size: 148
particle-size: 148
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 148
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1244
particle-size: 1244
statement: return this'.data.length
particle-size: 1244
particle-size: 1244
particle-size: 1244
particle-size: 1244
statement: this'.__S0.__run()
particle-size: 109
particle-size: 109
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 78
particle-size: 78
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 156
particle-size: 156
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 78
particle-size: 78
statement: r := this'.front()
particle-size: 78
particle-size: 78
statement: return this'.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.data = this'.data ~ [x]
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 78
particle-size: 78
statement: r := this'.front()
particle-size: 78
particle-size: 78
statement: return this'.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.data = this'.data ~ [x]
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 31
particle-size: 31
statement: r := this'.front()
particle-size: 31
particle-size: 31
statement: return this'.data[0]
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return r
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1322
particle-size: 1322
statement: return this'.data.length
particle-size: 1322
particle-size: 1322
particle-size: 1322
particle-size: 1322
statement: this'.__S1.__run()
particle-size: 169
particle-size: 169
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 169
particle-size: 169
statement: r := this'.front()
particle-size: 169
particle-size: 169
statement: return this'.data[0]
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this'.popFront()
particle-size: 169
particle-size: 169
statement: this'.data = this'.data[1..this'.size()]
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return r
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this'.data = this'.data ~ [x]
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1322
particle-size: 1322
statement: return this'.data.length
particle-size: 1322
particle-size: 1322
particle-size: 1322
particle-size: 1322
statement: this'.__S2.__run()
particle-size: 169
particle-size: 169
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 70
particle-size: 70
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 140
particle-size: 140
particle-size: 140
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 91
particle-size: 91
statement: this'.data = this'.data[1..this'.size()]
particle-size: 91
particle-size: 91
statement: return this'.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 148
particle-size: 148
statement: r := this'.front()
particle-size: 148
particle-size: 148
statement: return this'.data[0]
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: this'.popFront()
particle-size: 148
particle-size: 148
statement: this'.data = this'.data[1..this'.size()]
particle-size: 148
particle-size: 148
statement: return this'.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return r
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: this'.data = this'.data ~ [x]
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return ()
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1392
particle-size: 1392
statement: return this'.data.length
particle-size: 1392
particle-size: 1392
particle-size: 1392
particle-size: 1392
statement: this'.__S3.__run()
particle-size: 246
particle-size: 246
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 246
particle-size: 246
statement: r := this'.front()
particle-size: 246
particle-size: 246
statement: return this'.data[0]
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: this'.popFront()
particle-size: 246
particle-size: 246
statement: this'.data = this'.data[1..this'.size()]
particle-size: 246
particle-size: 246
statement: return this'.data.length
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: return ()
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: return r
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: this'.data = this'.data ~ [x]
particle-size: 246
statement: return ()
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: return ()
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: return ()
particle-size: 2148
particle-size: 2148
particle-size: 2148
particle-size: 668
repetition: 17
statement: __d.__step()
particle-size: 668
particle-size: 668
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
particle-size: 668
statement: (action,node) := this'.scheduler()
particle-size: 668
particle-size: 668
statement: actions := ([]: (R × R)[])
particle-size: 668
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 668
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(0,i)]
particle-size: 538
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(1,i)]
particle-size: 63
loop-index: 1
particle-size: 668
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(0,i)]
particle-size: 176
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
loop-index: 2
particle-size: 668
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(0,i)]
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(1,i)]
particle-size: 201
loop-index: 3
particle-size: 668
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(0,i)]
particle-size: 163
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(1,i)]
particle-size: 167
loop-index: 4
particle-size: 668
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(0,i)]
particle-size: 166
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(1,i)]
particle-size: 130
loop-index: 5
particle-size: 668
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(0,i)]
particle-size: 264
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 668
particle-size: 668
statement: return this'.data.length
particle-size: 668
particle-size: 668
particle-size: 668
statement: actions ~= [(1,i)]
particle-size: 217
statement: this'.num_actions += 1
particle-size: 668
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 668
particle-size: 668
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2167
particle-size: 2167
particle-size: 2167
particle-size: 2167
particle-size: 2167
particle-size: 2167
particle-size: 2167
particle-size: 2167
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 63
particle-size: 63
statement: r := this'.front()
particle-size: 63
particle-size: 63
statement: return this'.data[0]
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.popFront()
particle-size: 63
particle-size: 63
statement: this'.data = this'.data[1..this'.size()]
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return r
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.data = this'.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 201
particle-size: 201
statement: r := this'.front()
particle-size: 201
particle-size: 201
statement: return this'.data[0]
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: this'.popFront()
particle-size: 201
particle-size: 201
statement: this'.data = this'.data[1..this'.size()]
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: return ()
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: return r
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 100
particle-size: 100
particle-size: 100
statement: this'.data = this'.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 101
particle-size: 101
particle-size: 101
statement: this'.data = this'.data ~ [x]
particle-size: 101
statement: return ()
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 167
particle-size: 167
statement: r := this'.front()
particle-size: 167
particle-size: 167
statement: return this'.data[0]
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.popFront()
particle-size: 167
particle-size: 167
statement: this'.data = this'.data[1..this'.size()]
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return r
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.data = this'.data ~ [x]
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 130
particle-size: 130
statement: r := this'.front()
particle-size: 130
particle-size: 130
statement: return this'.data[0]
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: this'.popFront()
particle-size: 130
particle-size: 130
statement: this'.data = this'.data[1..this'.size()]
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return ()
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return r
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 130
particle-size: 130
particle-size: 130
statement: this'.data = this'.data ~ [x]
particle-size: 130
statement: return ()
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 217
particle-size: 217
statement: r := this'.front()
particle-size: 217
particle-size: 217
statement: return this'.data[0]
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: this'.popFront()
particle-size: 217
particle-size: 217
statement: this'.data = this'.data[1..this'.size()]
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: return ()
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: return r
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 217
particle-size: 217
particle-size: 217
statement: this'.data = this'.data ~ [x]
particle-size: 217
statement: return ()
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1389
particle-size: 1389
statement: return this'.data.length
particle-size: 1389
particle-size: 1389
particle-size: 1389
particle-size: 1389
statement: this'.__H0.__run()
particle-size: 538
particle-size: 538
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 538
particle-size: 538
statement: this.id = 0
particle-size: 538
statement: return this
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: this'.data = [x] ~ this'.data
particle-size: 538
statement: return ()
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 538
particle-size: 538
statement: this'.data = this'.data[1..this'.size()]
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return ()
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: this'.Q_in.popFront()
particle-size: 538
particle-size: 538
statement: this'.data = this'.data[1..this'.size()]
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return ()
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: return ()
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1389
particle-size: 1389
statement: return this'.data.length
particle-size: 1389
particle-size: 1389
particle-size: 1389
particle-size: 1389
statement: this'.__H1.__run()
particle-size: 176
particle-size: 176
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 176
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1213
particle-size: 1213
statement: return this'.data.length
particle-size: 1213
particle-size: 1213
particle-size: 1213
particle-size: 1213
statement: this'.__S0.__run()
particle-size: 82
particle-size: 82
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 60
particle-size: 60
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 120
particle-size: 120
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 60
particle-size: 60
statement: r := this'.front()
particle-size: 60
particle-size: 60
statement: return this'.data[0]
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.popFront()
particle-size: 60
particle-size: 60
statement: this'.data = this'.data[1..this'.size()]
particle-size: 60
particle-size: 60
statement: return this'.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return r
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 60
particle-size: 60
statement: r := this'.front()
particle-size: 60
particle-size: 60
statement: return this'.data[0]
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.popFront()
particle-size: 60
particle-size: 60
statement: this'.data = this'.data[1..this'.size()]
particle-size: 60
particle-size: 60
statement: return this'.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return r
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 22
particle-size: 22
statement: r := this'.front()
particle-size: 22
particle-size: 22
statement: return this'.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = this'.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1273
particle-size: 1273
statement: return this'.data.length
particle-size: 1273
particle-size: 1273
particle-size: 1273
particle-size: 1273
statement: this'.__S1.__run()
particle-size: 163
particle-size: 163
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 163
particle-size: 163
statement: r := this'.front()
particle-size: 163
particle-size: 163
statement: return this'.data[0]
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: this'.popFront()
particle-size: 163
particle-size: 163
statement: this'.data = this'.data[1..this'.size()]
particle-size: 163
particle-size: 163
statement: return this'.data.length
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return ()
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return r
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: this'.data = this'.data ~ [x]
particle-size: 163
statement: return ()
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return ()
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1273
particle-size: 1273
statement: return this'.data.length
particle-size: 1273
particle-size: 1273
particle-size: 1273
particle-size: 1273
statement: this'.__S2.__run()
particle-size: 166
particle-size: 166
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 60
particle-size: 60
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 120
particle-size: 120
particle-size: 120
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 81
particle-size: 81
statement: this'.data = this'.data[1..this'.size()]
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 145
particle-size: 145
statement: r := this'.front()
particle-size: 145
particle-size: 145
statement: return this'.data[0]
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.popFront()
particle-size: 145
particle-size: 145
statement: this'.data = this'.data[1..this'.size()]
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return r
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.data = this'.data ~ [x]
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1333
particle-size: 1333
statement: return this'.data.length
particle-size: 1333
particle-size: 1333
particle-size: 1333
particle-size: 1333
statement: this'.__S3.__run()
particle-size: 264
particle-size: 264
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 264
particle-size: 264
statement: r := this'.front()
particle-size: 264
particle-size: 264
statement: return this'.data[0]
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: this'.popFront()
particle-size: 264
particle-size: 264
statement: this'.data = this'.data[1..this'.size()]
particle-size: 264
particle-size: 264
statement: return this'.data.length
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: return ()
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: return r
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: this'.data = this'.data ~ [x]
particle-size: 264
statement: return ()
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: return ()
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: return ()
particle-size: 2111
particle-size: 2111
particle-size: 2111
particle-size: 650
repetition: 18
statement: __d.__step()
particle-size: 650
particle-size: 650
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
particle-size: 650
statement: (action,node) := this'.scheduler()
particle-size: 650
particle-size: 650
statement: actions := ([]: (R × R)[])
particle-size: 650
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 650
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(0,i)]
particle-size: 510
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(1,i)]
particle-size: 38
loop-index: 1
particle-size: 650
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(0,i)]
particle-size: 217
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
loop-index: 2
particle-size: 650
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(0,i)]
particle-size: 63
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(1,i)]
particle-size: 152
loop-index: 3
particle-size: 650
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(0,i)]
particle-size: 145
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(1,i)]
particle-size: 161
loop-index: 4
particle-size: 650
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(0,i)]
particle-size: 149
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(1,i)]
particle-size: 124
loop-index: 5
particle-size: 650
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(0,i)]
particle-size: 293
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 650
particle-size: 650
statement: return this'.data.length
particle-size: 650
particle-size: 650
particle-size: 650
statement: actions ~= [(1,i)]
particle-size: 223
statement: this'.num_actions += 1
particle-size: 650
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 650
particle-size: 650
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2075
particle-size: 2075
particle-size: 2075
particle-size: 2075
particle-size: 2075
particle-size: 2075
particle-size: 2075
particle-size: 2075
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 698
particle-size: 698
statement: return this'.data.length
particle-size: 698
particle-size: 698
particle-size: 698
particle-size: 698
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 698
particle-size: 698
statement: return this'.data.length
particle-size: 698
particle-size: 698
particle-size: 698
particle-size: 698
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 698
particle-size: 698
statement: return this'.data.length
particle-size: 698
particle-size: 698
particle-size: 698
particle-size: 698
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 152
particle-size: 152
statement: r := this'.front()
particle-size: 152
particle-size: 152
statement: return this'.data[0]
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this'.popFront()
particle-size: 152
particle-size: 152
statement: this'.data = this'.data[1..this'.size()]
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return r
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 698
particle-size: 698
statement: return this'.data.length
particle-size: 698
particle-size: 698
particle-size: 698
particle-size: 698
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 161
particle-size: 161
statement: r := this'.front()
particle-size: 161
particle-size: 161
statement: return this'.data[0]
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: this'.popFront()
particle-size: 161
particle-size: 161
statement: this'.data = this'.data[1..this'.size()]
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return r
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 161
particle-size: 161
particle-size: 161
statement: this'.data = this'.data ~ [x]
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 698
particle-size: 698
statement: return this'.data.length
particle-size: 698
particle-size: 698
particle-size: 698
particle-size: 698
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 124
particle-size: 124
statement: r := this'.front()
particle-size: 124
particle-size: 124
statement: return this'.data[0]
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: this'.popFront()
particle-size: 124
particle-size: 124
statement: this'.data = this'.data[1..this'.size()]
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: return r
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 124
particle-size: 124
particle-size: 124
statement: this'.data = this'.data ~ [x]
particle-size: 124
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 698
particle-size: 698
statement: return this'.data.length
particle-size: 698
particle-size: 698
particle-size: 698
particle-size: 698
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 223
particle-size: 223
statement: r := this'.front()
particle-size: 223
particle-size: 223
statement: return this'.data[0]
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: this'.popFront()
particle-size: 223
particle-size: 223
statement: this'.data = this'.data[1..this'.size()]
particle-size: 223
particle-size: 223
statement: return this'.data.length
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: return ()
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: return r
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 223
particle-size: 223
particle-size: 223
statement: this'.data = this'.data ~ [x]
particle-size: 223
statement: return ()
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1377
particle-size: 1377
statement: return this'.data.length
particle-size: 1377
particle-size: 1377
particle-size: 1377
particle-size: 1377
statement: this'.__H0.__run()
particle-size: 510
particle-size: 510
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 510
particle-size: 510
statement: this.id = 0
particle-size: 510
statement: return this
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: this'.data = [x] ~ this'.data
particle-size: 510
statement: return ()
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 510
particle-size: 510
statement: this'.data = this'.data[1..this'.size()]
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return ()
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: this'.Q_in.popFront()
particle-size: 510
particle-size: 510
statement: this'.data = this'.data[1..this'.size()]
particle-size: 510
particle-size: 510
statement: return this'.data.length
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return ()
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: return ()
particle-size: 510
particle-size: 510
particle-size: 510
particle-size: 510
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1377
particle-size: 1377
statement: return this'.data.length
particle-size: 1377
particle-size: 1377
particle-size: 1377
particle-size: 1377
statement: this'.__H1.__run()
particle-size: 217
particle-size: 217
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 217
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1160
particle-size: 1160
statement: return this'.data.length
particle-size: 1160
particle-size: 1160
particle-size: 1160
particle-size: 1160
statement: this'.__S0.__run()
particle-size: 63
particle-size: 63
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 45
particle-size: 45
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 90
particle-size: 90
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1205
particle-size: 1205
statement: return this'.data.length
particle-size: 1205
particle-size: 1205
particle-size: 1205
particle-size: 1205
statement: this'.__S1.__run()
particle-size: 145
particle-size: 145
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 145
particle-size: 145
statement: r := this'.front()
particle-size: 145
particle-size: 145
statement: return this'.data[0]
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.popFront()
particle-size: 145
particle-size: 145
statement: this'.data = this'.data[1..this'.size()]
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return r
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.data = this'.data ~ [x]
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1205
particle-size: 1205
statement: return this'.data.length
particle-size: 1205
particle-size: 1205
particle-size: 1205
particle-size: 1205
statement: this'.__S2.__run()
particle-size: 149
particle-size: 149
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 52
particle-size: 52
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 104
particle-size: 104
particle-size: 104
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 135
particle-size: 135
statement: r := this'.front()
particle-size: 135
particle-size: 135
statement: return this'.data[0]
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.popFront()
particle-size: 135
particle-size: 135
statement: this'.data = this'.data[1..this'.size()]
particle-size: 135
particle-size: 135
statement: return this'.data.length
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return r
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.data = this'.data ~ [x]
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1257
particle-size: 1257
statement: return this'.data.length
particle-size: 1257
particle-size: 1257
particle-size: 1257
particle-size: 1257
statement: this'.__S3.__run()
particle-size: 293
particle-size: 293
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 293
particle-size: 293
statement: r := this'.front()
particle-size: 293
particle-size: 293
statement: return this'.data[0]
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: this'.popFront()
particle-size: 293
particle-size: 293
statement: this'.data = this'.data[1..this'.size()]
particle-size: 293
particle-size: 293
statement: return this'.data.length
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: return ()
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: return r
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: this'.data = this'.data ~ [x]
particle-size: 293
statement: return ()
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: return ()
particle-size: 293
particle-size: 293
particle-size: 293
particle-size: 293
statement: return ()
particle-size: 1955
particle-size: 1955
particle-size: 1955
particle-size: 603
repetition: 19
statement: __d.__step()
particle-size: 603
particle-size: 603
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: return this'.data.length
particle-size: 603
particle-size: 603
particle-size: 603
particle-size: 603
statement: (action,node) := this'.scheduler()
particle-size: 601
particle-size: 601
statement: actions := ([]: (R × R)[])
particle-size: 601
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 601
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(0,i)]
particle-size: 465
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(1,i)]
particle-size: 22
loop-index: 1
particle-size: 601
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(0,i)]
particle-size: 223
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
loop-index: 2
particle-size: 601
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(0,i)]
particle-size: 38
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(1,i)]
particle-size: 108
loop-index: 3
particle-size: 601
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(0,i)]
particle-size: 114
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(1,i)]
particle-size: 145
loop-index: 4
particle-size: 601
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(0,i)]
particle-size: 120
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(1,i)]
particle-size: 114
loop-index: 5
particle-size: 601
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(0,i)]
particle-size: 294
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 601
particle-size: 601
statement: return this'.data.length
particle-size: 601
particle-size: 601
particle-size: 601
statement: actions ~= [(1,i)]
particle-size: 258
statement: this'.num_actions += 1
particle-size: 601
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 601
particle-size: 601
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1901
particle-size: 1901
particle-size: 1901
particle-size: 1901
particle-size: 1901
particle-size: 1901
particle-size: 1901
particle-size: 1901
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 647
particle-size: 647
statement: return this'.data.length
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 22
particle-size: 22
statement: r := this'.front()
particle-size: 22
particle-size: 22
statement: return this'.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = this'.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 647
particle-size: 647
statement: return this'.data.length
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 647
particle-size: 647
statement: return this'.data.length
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 108
particle-size: 108
statement: r := this'.front()
particle-size: 108
particle-size: 108
statement: return this'.data[0]
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.popFront()
particle-size: 108
particle-size: 108
statement: this'.data = this'.data[1..this'.size()]
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return r
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 647
particle-size: 647
statement: return this'.data.length
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 145
particle-size: 145
statement: r := this'.front()
particle-size: 145
particle-size: 145
statement: return this'.data[0]
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.popFront()
particle-size: 145
particle-size: 145
statement: this'.data = this'.data[1..this'.size()]
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return r
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.data = this'.data ~ [x]
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 647
particle-size: 647
statement: return this'.data.length
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 114
particle-size: 114
statement: r := this'.front()
particle-size: 114
particle-size: 114
statement: return this'.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.popFront()
particle-size: 114
particle-size: 114
statement: this'.data = this'.data[1..this'.size()]
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.data = this'.data ~ [x]
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 647
particle-size: 647
statement: return this'.data.length
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 258
particle-size: 258
statement: r := this'.front()
particle-size: 258
particle-size: 258
statement: return this'.data[0]
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: this'.popFront()
particle-size: 258
particle-size: 258
statement: this'.data = this'.data[1..this'.size()]
particle-size: 258
particle-size: 258
statement: return this'.data.length
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: return r
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 258
particle-size: 258
particle-size: 258
statement: this'.data = this'.data ~ [x]
particle-size: 258
statement: return ()
particle-size: 258
particle-size: 258
particle-size: 258
particle-size: 258
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1254
particle-size: 1254
statement: return this'.data.length
particle-size: 1254
particle-size: 1254
particle-size: 1254
particle-size: 1254
statement: this'.__H0.__run()
particle-size: 465
particle-size: 465
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 465
particle-size: 465
statement: this.id = 0
particle-size: 465
statement: return this
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: this'.data = [x] ~ this'.data
particle-size: 465
statement: return ()
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 465
particle-size: 465
statement: this'.data = this'.data[1..this'.size()]
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: return ()
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: this'.Q_in.popFront()
particle-size: 465
particle-size: 465
statement: this'.data = this'.data[1..this'.size()]
particle-size: 465
particle-size: 465
statement: return this'.data.length
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: return ()
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: return ()
particle-size: 465
particle-size: 465
particle-size: 465
particle-size: 465
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1254
particle-size: 1254
statement: return this'.data.length
particle-size: 1254
particle-size: 1254
particle-size: 1254
particle-size: 1254
statement: this'.__H1.__run()
particle-size: 223
particle-size: 223
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 223
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1031
particle-size: 1031
statement: return this'.data.length
particle-size: 1031
particle-size: 1031
particle-size: 1031
particle-size: 1031
statement: this'.__S0.__run()
particle-size: 38
particle-size: 38
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 26
particle-size: 26
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 52
particle-size: 52
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1057
particle-size: 1057
statement: return this'.data.length
particle-size: 1057
particle-size: 1057
particle-size: 1057
particle-size: 1057
statement: this'.__S1.__run()
particle-size: 114
particle-size: 114
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 114
particle-size: 114
statement: r := this'.front()
particle-size: 114
particle-size: 114
statement: return this'.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.popFront()
particle-size: 114
particle-size: 114
statement: this'.data = this'.data[1..this'.size()]
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.data = this'.data ~ [x]
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1057
particle-size: 1057
statement: return this'.data.length
particle-size: 1057
particle-size: 1057
particle-size: 1057
particle-size: 1057
statement: this'.__S2.__run()
particle-size: 120
particle-size: 120
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 40
particle-size: 40
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 80
particle-size: 80
particle-size: 80
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 111
particle-size: 111
statement: r := this'.front()
particle-size: 111
particle-size: 111
statement: return this'.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1097
particle-size: 1097
statement: return this'.data.length
particle-size: 1097
particle-size: 1097
particle-size: 1097
particle-size: 1097
statement: this'.__S3.__run()
particle-size: 294
particle-size: 294
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 294
particle-size: 294
statement: r := this'.front()
particle-size: 294
particle-size: 294
statement: return this'.data[0]
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
statement: this'.popFront()
particle-size: 294
particle-size: 294
statement: this'.data = this'.data[1..this'.size()]
particle-size: 294
particle-size: 294
statement: return this'.data.length
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
statement: return ()
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
statement: return r
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
statement: this'.data = this'.data ~ [x]
particle-size: 294
statement: return ()
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
statement: return ()
particle-size: 294
particle-size: 294
particle-size: 294
particle-size: 294
statement: return ()
particle-size: 1746
particle-size: 1746
particle-size: 1746
particle-size: 545
repetition: 20
statement: __d.__step()
particle-size: 545
particle-size: 545
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: return this'.data.length
particle-size: 545
particle-size: 545
particle-size: 545
particle-size: 545
statement: (action,node) := this'.scheduler()
particle-size: 543
particle-size: 543
statement: actions := ([]: (R × R)[])
particle-size: 543
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(0,i)]
particle-size: 405
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 1
particle-size: 543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(0,i)]
particle-size: 258
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
loop-index: 2
particle-size: 543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(0,i)]
particle-size: 22
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(1,i)]
particle-size: 64
loop-index: 3
particle-size: 543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(0,i)]
particle-size: 87
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(1,i)]
particle-size: 116
loop-index: 4
particle-size: 543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(0,i)]
particle-size: 94
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(1,i)]
particle-size: 93
loop-index: 5
particle-size: 543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(0,i)]
particle-size: 285
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
statement: actions ~= [(1,i)]
particle-size: 239
statement: this'.num_actions += 1
particle-size: 543
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 543
particle-size: 543
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1673
particle-size: 1673
particle-size: 1673
particle-size: 1673
particle-size: 1673
particle-size: 1673
particle-size: 1673
particle-size: 1673
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 522
particle-size: 522
statement: return this'.data.length
particle-size: 522
particle-size: 522
particle-size: 522
particle-size: 522
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 522
particle-size: 522
statement: return this'.data.length
particle-size: 522
particle-size: 522
particle-size: 522
particle-size: 522
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 522
particle-size: 522
statement: return this'.data.length
particle-size: 522
particle-size: 522
particle-size: 522
particle-size: 522
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 64
particle-size: 64
statement: r := this'.front()
particle-size: 64
particle-size: 64
statement: return this'.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 522
particle-size: 522
statement: return this'.data.length
particle-size: 522
particle-size: 522
particle-size: 522
particle-size: 522
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 116
particle-size: 116
statement: r := this'.front()
particle-size: 116
particle-size: 116
statement: return this'.data[0]
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.popFront()
particle-size: 116
particle-size: 116
statement: this'.data = this'.data[1..this'.size()]
particle-size: 116
particle-size: 116
statement: return this'.data.length
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return r
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 116
particle-size: 116
particle-size: 116
statement: this'.data = this'.data ~ [x]
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 522
particle-size: 522
statement: return this'.data.length
particle-size: 522
particle-size: 522
particle-size: 522
particle-size: 522
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 93
particle-size: 93
statement: r := this'.front()
particle-size: 93
particle-size: 93
statement: return this'.data[0]
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.popFront()
particle-size: 93
particle-size: 93
statement: this'.data = this'.data[1..this'.size()]
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return r
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.data = this'.data ~ [x]
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 522
particle-size: 522
statement: return this'.data.length
particle-size: 522
particle-size: 522
particle-size: 522
particle-size: 522
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 239
particle-size: 239
statement: r := this'.front()
particle-size: 239
particle-size: 239
statement: return this'.data[0]
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: this'.popFront()
particle-size: 239
particle-size: 239
statement: this'.data = this'.data[1..this'.size()]
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return ()
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return r
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 239
particle-size: 239
particle-size: 239
statement: this'.data = this'.data ~ [x]
particle-size: 239
statement: return ()
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1151
particle-size: 1151
statement: return this'.data.length
particle-size: 1151
particle-size: 1151
particle-size: 1151
particle-size: 1151
statement: this'.__H0.__run()
particle-size: 405
particle-size: 405
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 405
particle-size: 405
statement: this.id = 0
particle-size: 405
statement: return this
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: this'.data = [x] ~ this'.data
particle-size: 405
statement: return ()
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 405
particle-size: 405
statement: this'.data = this'.data[1..this'.size()]
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: return ()
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: this'.Q_in.popFront()
particle-size: 405
particle-size: 405
statement: this'.data = this'.data[1..this'.size()]
particle-size: 405
particle-size: 405
statement: return this'.data.length
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: return ()
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: return ()
particle-size: 405
particle-size: 405
particle-size: 405
particle-size: 405
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1151
particle-size: 1151
statement: return this'.data.length
particle-size: 1151
particle-size: 1151
particle-size: 1151
particle-size: 1151
statement: this'.__H1.__run()
particle-size: 258
particle-size: 258
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 258
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 893
particle-size: 893
statement: return this'.data.length
particle-size: 893
particle-size: 893
particle-size: 893
particle-size: 893
statement: this'.__S0.__run()
particle-size: 22
particle-size: 22
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 14
particle-size: 14
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 28
particle-size: 28
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 907
particle-size: 907
statement: return this'.data.length
particle-size: 907
particle-size: 907
particle-size: 907
particle-size: 907
statement: this'.__S1.__run()
particle-size: 87
particle-size: 87
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 87
particle-size: 87
statement: r := this'.front()
particle-size: 87
particle-size: 87
statement: return this'.data[0]
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.popFront()
particle-size: 87
particle-size: 87
statement: this'.data = this'.data[1..this'.size()]
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return r
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.data = this'.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 907
particle-size: 907
statement: return this'.data.length
particle-size: 907
particle-size: 907
particle-size: 907
particle-size: 907
statement: this'.__S2.__run()
particle-size: 94
particle-size: 94
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 30
particle-size: 30
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 60
particle-size: 60
particle-size: 60
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 88
particle-size: 88
statement: r := this'.front()
particle-size: 88
particle-size: 88
statement: return this'.data[0]
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.popFront()
particle-size: 88
particle-size: 88
statement: this'.data = this'.data[1..this'.size()]
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return ()
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return r
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.data = this'.data ~ [x]
particle-size: 88
statement: return ()
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return ()
particle-size: 124
particle-size: 124
particle-size: 124
particle-size: 124
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 937
particle-size: 937
statement: return this'.data.length
particle-size: 937
particle-size: 937
particle-size: 937
particle-size: 937
statement: this'.__S3.__run()
particle-size: 285
particle-size: 285
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 285
particle-size: 285
statement: r := this'.front()
particle-size: 285
particle-size: 285
statement: return this'.data[0]
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: this'.popFront()
particle-size: 285
particle-size: 285
statement: this'.data = this'.data[1..this'.size()]
particle-size: 285
particle-size: 285
statement: return this'.data.length
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: return ()
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: return r
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: this'.data = this'.data ~ [x]
particle-size: 285
statement: return ()
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: return ()
particle-size: 285
particle-size: 285
particle-size: 285
particle-size: 285
statement: return ()
particle-size: 1461
particle-size: 1461
particle-size: 1461
particle-size: 444
repetition: 21
statement: __d.__step()
particle-size: 444
particle-size: 444
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: return this'.data.length
particle-size: 444
particle-size: 444
particle-size: 444
particle-size: 444
statement: (action,node) := this'.scheduler()
particle-size: 442
particle-size: 442
statement: actions := ([]: (R × R)[])
particle-size: 442
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 442
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(0,i)]
particle-size: 320
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(1,i)]
particle-size: 5
loop-index: 1
particle-size: 442
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(0,i)]
particle-size: 239
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
loop-index: 2
particle-size: 442
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(1,i)]
particle-size: 36
loop-index: 3
particle-size: 442
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(0,i)]
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(1,i)]
particle-size: 89
loop-index: 4
particle-size: 442
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(0,i)]
particle-size: 57
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(1,i)]
particle-size: 73
loop-index: 5
particle-size: 442
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(0,i)]
particle-size: 231
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 442
particle-size: 442
statement: return this'.data.length
particle-size: 442
particle-size: 442
particle-size: 442
statement: actions ~= [(1,i)]
particle-size: 213
statement: this'.num_actions += 1
particle-size: 442
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 442
particle-size: 442
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1324
particle-size: 1324
particle-size: 1324
particle-size: 1324
particle-size: 1324
particle-size: 1324
particle-size: 1324
particle-size: 1324
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 416
particle-size: 416
statement: return this'.data.length
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 416
particle-size: 416
statement: return this'.data.length
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 416
particle-size: 416
statement: return this'.data.length
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 36
particle-size: 36
statement: r := this'.front()
particle-size: 36
particle-size: 36
statement: return this'.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 416
particle-size: 416
statement: return this'.data.length
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 89
particle-size: 89
statement: r := this'.front()
particle-size: 89
particle-size: 89
statement: return this'.data[0]
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.popFront()
particle-size: 89
particle-size: 89
statement: this'.data = this'.data[1..this'.size()]
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return r
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 416
particle-size: 416
statement: return this'.data.length
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 73
particle-size: 73
statement: r := this'.front()
particle-size: 73
particle-size: 73
statement: return this'.data[0]
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.popFront()
particle-size: 73
particle-size: 73
statement: this'.data = this'.data[1..this'.size()]
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return r
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.data = this'.data ~ [x]
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 416
particle-size: 416
statement: return this'.data.length
particle-size: 416
particle-size: 416
particle-size: 416
particle-size: 416
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 213
particle-size: 213
statement: r := this'.front()
particle-size: 213
particle-size: 213
statement: return this'.data[0]
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: this'.popFront()
particle-size: 213
particle-size: 213
statement: this'.data = this'.data[1..this'.size()]
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return ()
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return r
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 213
particle-size: 213
particle-size: 213
statement: this'.data = this'.data ~ [x]
particle-size: 213
statement: return ()
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 908
particle-size: 908
statement: return this'.data.length
particle-size: 908
particle-size: 908
particle-size: 908
particle-size: 908
statement: this'.__H0.__run()
particle-size: 320
particle-size: 320
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 320
particle-size: 320
statement: this.id = 0
particle-size: 320
statement: return this
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
statement: this'.data = [x] ~ this'.data
particle-size: 320
statement: return ()
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 320
particle-size: 320
statement: this'.data = this'.data[1..this'.size()]
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
statement: return ()
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
statement: this'.Q_in.popFront()
particle-size: 320
particle-size: 320
statement: this'.data = this'.data[1..this'.size()]
particle-size: 320
particle-size: 320
statement: return this'.data.length
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
statement: return ()
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
statement: return ()
particle-size: 320
particle-size: 320
particle-size: 320
particle-size: 320
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 908
particle-size: 908
statement: return this'.data.length
particle-size: 908
particle-size: 908
particle-size: 908
particle-size: 908
statement: this'.__H1.__run()
particle-size: 239
particle-size: 239
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 239
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 669
particle-size: 669
statement: return this'.data.length
particle-size: 669
particle-size: 669
particle-size: 669
particle-size: 669
statement: this'.__S0.__run()
particle-size: 10
particle-size: 10
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 6
particle-size: 6
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 675
particle-size: 675
statement: return this'.data.length
particle-size: 675
particle-size: 675
particle-size: 675
particle-size: 675
statement: this'.__S1.__run()
particle-size: 51
particle-size: 51
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 51
particle-size: 51
statement: r := this'.front()
particle-size: 51
particle-size: 51
statement: return this'.data[0]
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.popFront()
particle-size: 51
particle-size: 51
statement: this'.data = this'.data[1..this'.size()]
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return r
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.data = this'.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 675
particle-size: 675
statement: return this'.data.length
particle-size: 675
particle-size: 675
particle-size: 675
particle-size: 675
statement: this'.__S2.__run()
particle-size: 57
particle-size: 57
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 18
particle-size: 18
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 36
particle-size: 36
particle-size: 36
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 693
particle-size: 693
statement: return this'.data.length
particle-size: 693
particle-size: 693
particle-size: 693
particle-size: 693
statement: this'.__S3.__run()
particle-size: 231
particle-size: 231
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 231
particle-size: 231
statement: r := this'.front()
particle-size: 231
particle-size: 231
statement: return this'.data[0]
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: this'.popFront()
particle-size: 231
particle-size: 231
statement: this'.data = this'.data[1..this'.size()]
particle-size: 231
particle-size: 231
statement: return this'.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return r
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: this'.data = this'.data ~ [x]
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 1111
particle-size: 1111
particle-size: 1111
particle-size: 351
repetition: 22
statement: __d.__step()
particle-size: 351
particle-size: 351
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: (action,node) := this'.scheduler()
particle-size: 349
particle-size: 349
statement: actions := ([]: (R × R)[])
particle-size: 349
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 349
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(0,i)]
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
loop-index: 1
particle-size: 349
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(0,i)]
particle-size: 221
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
loop-index: 2
particle-size: 349
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(0,i)]
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 3
particle-size: 349
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(0,i)]
particle-size: 30
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(1,i)]
particle-size: 53
loop-index: 4
particle-size: 349
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(1,i)]
particle-size: 44
loop-index: 5
particle-size: 349
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(0,i)]
particle-size: 188
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 349
particle-size: 349
statement: return this'.data.length
particle-size: 349
particle-size: 349
particle-size: 349
statement: actions ~= [(1,i)]
particle-size: 174
statement: this'.num_actions += 1
particle-size: 349
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 349
particle-size: 349
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1002
particle-size: 1002
particle-size: 1002
particle-size: 1002
particle-size: 1002
particle-size: 1002
particle-size: 1002
particle-size: 1002
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 287
particle-size: 287
statement: return this'.data.length
particle-size: 287
particle-size: 287
particle-size: 287
particle-size: 287
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 287
particle-size: 287
statement: return this'.data.length
particle-size: 287
particle-size: 287
particle-size: 287
particle-size: 287
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 287
particle-size: 287
statement: return this'.data.length
particle-size: 287
particle-size: 287
particle-size: 287
particle-size: 287
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 287
particle-size: 287
statement: return this'.data.length
particle-size: 287
particle-size: 287
particle-size: 287
particle-size: 287
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 287
particle-size: 287
statement: return this'.data.length
particle-size: 287
particle-size: 287
particle-size: 287
particle-size: 287
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 287
particle-size: 287
statement: return this'.data.length
particle-size: 287
particle-size: 287
particle-size: 287
particle-size: 287
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 174
particle-size: 174
statement: r := this'.front()
particle-size: 174
particle-size: 174
statement: return this'.data[0]
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: this'.popFront()
particle-size: 174
particle-size: 174
statement: this'.data = this'.data[1..this'.size()]
particle-size: 174
particle-size: 174
statement: return this'.data.length
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: return r
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 174
particle-size: 174
particle-size: 174
statement: this'.data = this'.data ~ [x]
particle-size: 174
statement: return ()
particle-size: 174
particle-size: 174
particle-size: 174
particle-size: 174
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 715
particle-size: 715
statement: return this'.data.length
particle-size: 715
particle-size: 715
particle-size: 715
particle-size: 715
statement: this'.__H0.__run()
particle-size: 237
particle-size: 237
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 237
particle-size: 237
statement: this.id = 0
particle-size: 237
statement: return this
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: this'.data = [x] ~ this'.data
particle-size: 237
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 237
particle-size: 237
statement: this'.data = this'.data[1..this'.size()]
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: this'.Q_in.popFront()
particle-size: 237
particle-size: 237
statement: this'.data = this'.data[1..this'.size()]
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 715
particle-size: 715
statement: return this'.data.length
particle-size: 715
particle-size: 715
particle-size: 715
particle-size: 715
statement: this'.__H1.__run()
particle-size: 221
particle-size: 221
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 221
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 494
particle-size: 494
statement: return this'.data.length
particle-size: 494
particle-size: 494
particle-size: 494
particle-size: 494
statement: this'.__S0.__run()
particle-size: 5
particle-size: 5
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: this'.__S1.__run()
particle-size: 30
particle-size: 30
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: this'.__S2.__run()
particle-size: 34
particle-size: 34
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 12
particle-size: 12
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 24
particle-size: 24
particle-size: 24
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 509
particle-size: 509
statement: return this'.data.length
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
statement: this'.__S3.__run()
particle-size: 188
particle-size: 188
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 188
particle-size: 188
statement: r := this'.front()
particle-size: 188
particle-size: 188
statement: return this'.data[0]
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: this'.popFront()
particle-size: 188
particle-size: 188
statement: this'.data = this'.data[1..this'.size()]
particle-size: 188
particle-size: 188
statement: return this'.data.length
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return r
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: this'.data = this'.data ~ [x]
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return ()
particle-size: 188
particle-size: 188
particle-size: 188
particle-size: 188
statement: return ()
particle-size: 798
particle-size: 798
particle-size: 798
particle-size: 247
repetition: 23
statement: __d.__step()
particle-size: 247
particle-size: 247
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: return this'.data.length
particle-size: 247
particle-size: 247
particle-size: 247
particle-size: 247
statement: (action,node) := this'.scheduler()
particle-size: 245
particle-size: 245
statement: actions := ([]: (R × R)[])
particle-size: 245
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 245
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: actions ~= [(0,i)]
particle-size: 152
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
loop-index: 1
particle-size: 245
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: actions ~= [(0,i)]
particle-size: 174
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
loop-index: 2
particle-size: 245
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: actions ~= [(1,i)]
particle-size: 8
loop-index: 3
particle-size: 245
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: actions ~= [(0,i)]
particle-size: 14
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: actions ~= [(1,i)]
particle-size: 30
loop-index: 4
particle-size: 245
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: actions ~= [(0,i)]
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 5
particle-size: 245
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: actions ~= [(0,i)]
particle-size: 127
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
statement: actions ~= [(1,i)]
particle-size: 139
statement: this'.num_actions += 1
particle-size: 245
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 245
particle-size: 245
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 686
particle-size: 686
particle-size: 686
particle-size: 686
particle-size: 686
particle-size: 686
particle-size: 686
particle-size: 686
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 203
particle-size: 203
statement: return this'.data.length
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 203
particle-size: 203
statement: return this'.data.length
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 203
particle-size: 203
statement: return this'.data.length
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 203
particle-size: 203
statement: return this'.data.length
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 203
particle-size: 203
statement: return this'.data.length
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 203
particle-size: 203
statement: return this'.data.length
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 139
particle-size: 139
statement: r := this'.front()
particle-size: 139
particle-size: 139
statement: return this'.data[0]
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: this'.popFront()
particle-size: 139
particle-size: 139
statement: this'.data = this'.data[1..this'.size()]
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return r
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 139
particle-size: 139
particle-size: 139
statement: this'.data = this'.data ~ [x]
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: this'.__H0.__run()
particle-size: 152
particle-size: 152
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 152
particle-size: 152
statement: this.id = 0
particle-size: 152
statement: return this
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this'.data = [x] ~ this'.data
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 152
particle-size: 152
statement: this'.data = this'.data[1..this'.size()]
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this'.Q_in.popFront()
particle-size: 152
particle-size: 152
statement: this'.data = this'.data[1..this'.size()]
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 483
particle-size: 483
statement: return this'.data.length
particle-size: 483
particle-size: 483
particle-size: 483
particle-size: 483
statement: this'.__H1.__run()
particle-size: 174
particle-size: 174
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 174
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 309
particle-size: 309
statement: return this'.data.length
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 309
particle-size: 309
statement: return this'.data.length
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.__S1.__run()
particle-size: 14
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 309
particle-size: 309
statement: return this'.data.length
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.__S2.__run()
particle-size: 16
particle-size: 16
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 6
particle-size: 6
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 315
particle-size: 315
statement: return this'.data.length
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: this'.__S3.__run()
particle-size: 127
particle-size: 127
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 127
particle-size: 127
statement: r := this'.front()
particle-size: 127
particle-size: 127
statement: return this'.data[0]
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.popFront()
particle-size: 127
particle-size: 127
statement: this'.data = this'.data[1..this'.size()]
particle-size: 127
particle-size: 127
statement: return this'.data.length
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return r
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.data = this'.data ~ [x]
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 520
particle-size: 520
particle-size: 520
particle-size: 162
repetition: 24
statement: __d.__step()
particle-size: 162
particle-size: 162
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: (action,node) := this'.scheduler()
particle-size: 160
particle-size: 160
statement: actions := ([]: (R × R)[])
particle-size: 160
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 160
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
statement: actions ~= [(0,i)]
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
loop-index: 1
particle-size: 160
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
statement: actions ~= [(0,i)]
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
loop-index: 2
particle-size: 160
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
loop-index: 3
particle-size: 160
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
statement: actions ~= [(1,i)]
particle-size: 14
loop-index: 4
particle-size: 160
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 5
particle-size: 160
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
statement: actions ~= [(0,i)]
particle-size: 73
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
statement: actions ~= [(1,i)]
particle-size: 74
statement: this'.num_actions += 1
particle-size: 160
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 160
particle-size: 160
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 409
particle-size: 409
particle-size: 409
particle-size: 409
particle-size: 409
particle-size: 409
particle-size: 409
particle-size: 409
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 100
particle-size: 100
statement: return this'.data.length
particle-size: 100
particle-size: 100
particle-size: 100
particle-size: 100
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 74
particle-size: 74
statement: r := this'.front()
particle-size: 74
particle-size: 74
statement: return this'.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 309
particle-size: 309
statement: return this'.data.length
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.__H0.__run()
particle-size: 82
particle-size: 82
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 82
particle-size: 82
statement: this.id = 0
particle-size: 82
statement: return this
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.data = [x] ~ this'.data
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.Q_in.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 309
particle-size: 309
statement: return this'.data.length
particle-size: 309
particle-size: 309
particle-size: 309
particle-size: 309
statement: this'.__H1.__run()
particle-size: 139
particle-size: 139
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 139
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 170
particle-size: 170
statement: return this'.data.length
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 170
particle-size: 170
statement: return this'.data.length
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: this'.__S1.__run()
particle-size: 7
particle-size: 7
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 170
particle-size: 170
statement: return this'.data.length
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: this'.__S2.__run()
particle-size: 8
particle-size: 8
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 173
particle-size: 173
statement: return this'.data.length
particle-size: 173
particle-size: 173
particle-size: 173
particle-size: 173
statement: this'.__S3.__run()
particle-size: 73
particle-size: 73
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 73
particle-size: 73
statement: r := this'.front()
particle-size: 73
particle-size: 73
statement: return this'.data[0]
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.popFront()
particle-size: 73
particle-size: 73
statement: this'.data = this'.data[1..this'.size()]
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return r
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.data = this'.data ~ [x]
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: return ()
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 84
repetition: 25
statement: __d.__step()
particle-size: 84
particle-size: 84
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: (action,node) := this'.scheduler()
particle-size: 82
particle-size: 82
statement: actions := ([]: (R × R)[])
particle-size: 82
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
loop-index: 1
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
loop-index: 2
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
loop-index: 3
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 4
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(1,i)]
particle-size: 45
statement: this'.num_actions += 1
particle-size: 82
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 82
particle-size: 82
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
particle-size: 203
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = this'.data ~ [x]
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.__H0.__run()
particle-size: 45
particle-size: 45
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 45
particle-size: 45
statement: this.id = 0
particle-size: 45
statement: return this
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = [x] ~ this'.data
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.Q_in.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.__H1.__run()
particle-size: 74
particle-size: 74
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 74
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.__S3.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 47
repetition: 26
statement: __d.__step()
particle-size: 47
particle-size: 47
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: (action,node) := this'.scheduler()
particle-size: 45
particle-size: 45
statement: actions := ([]: (R × R)[])
particle-size: 45
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 1
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 2
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 3
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 4
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 5
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 24
statement: this'.num_actions += 1
particle-size: 45
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 45
particle-size: 45
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.__H0.__run()
particle-size: 16
particle-size: 16
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 16
particle-size: 16
statement: this.id = 0
particle-size: 16
statement: return this
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = [x] ~ this'.data
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.Q_in.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.__H1.__run()
particle-size: 45
particle-size: 45
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 45
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.__S3.__run()
particle-size: 13
particle-size: 13
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 18
repetition: 27
statement: __d.__step()
particle-size: 18
particle-size: 18
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: (action,node) := this'.scheduler()
particle-size: 16
particle-size: 16
statement: actions := ([]: (R × R)[])
particle-size: 16
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 1
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: actions ~= [(0,i)]
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 2
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 3
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 4
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
loop-index: 5
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
statement: actions ~= [(1,i)]
particle-size: 8
statement: this'.num_actions += 1
particle-size: 16
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 16
particle-size: 16
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.__H0.__run()
particle-size: 8
particle-size: 8
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 8
particle-size: 8
statement: this.id = 0
particle-size: 8
statement: return this
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = [x] ~ this'.data
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.__H1.__run()
particle-size: 16
particle-size: 16
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 16
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 10
repetition: 28
statement: __d.__step()
particle-size: 10
particle-size: 10
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: (action,node) := this'.scheduler()
particle-size: 8
particle-size: 8
statement: actions := ([]: (R × R)[])
particle-size: 8
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 1
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 2
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 3
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 4
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
loop-index: 5
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.num_actions += 1
particle-size: 8
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 8
particle-size: 8
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.__H1.__run()
particle-size: 8
particle-size: 8
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 8
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 29
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 30
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: observe(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 0))
statement: assert(!(__d.__H0.Q_in.size() || __d.__H0.Q_out.size() || __d.__H1.Q_in.size() || __d.__H1.Q_out.size() || __d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size() || __d.__S3.Q_in.size() || __d.__S3.Q_out.size()))
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: q₁ := Expectation(((if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 2
statement: q₂ := Expectation(((if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2) != 0)
particle-size: 2
statement: q₃ := Expectation(((if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 3) != 0)
particle-size: 2
statement: return (q₁,q₂,q₃)
particle-size: 2
E[q1_,q2_,q3_] = (1/5,0,4/5)

real	3m19.264s
user	3m18.024s
sys	0m1.080s
