statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'() , this.__S3 = __s3_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_arrived = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.strategy = 4
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.failing = 2
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __s3_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.num_actions = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.Q_in.pushBack((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 30 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.num_actions += 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 2
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (action,node) := this'.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.num_actions += 1
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__H0.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: this.id = 0
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 2
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 6
repetition: 3
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (action,node) := this'.scheduler()
particle-size: 6
particle-size: 6
statement: actions := ([]: (R × R)[])
particle-size: 6
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 2
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 4
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 5
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.num_actions += 1
particle-size: 6
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 6
particle-size: 6
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.__H0.__run()
particle-size: 6
particle-size: 6
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 6
particle-size: 6
statement: this.id = 0
particle-size: 6
statement: return this
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = [x] ~ this'.data
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: this.id = 0
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 5
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 12
repetition: 4
statement: __d.__step()
particle-size: 12
particle-size: 12
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: (action,node) := this'.scheduler()
particle-size: 12
particle-size: 12
statement: actions := ([]: (R × R)[])
particle-size: 12
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 1
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 2
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 3
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 4
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 5
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.num_actions += 1
particle-size: 12
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 12
particle-size: 12
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.__H0.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.id = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: this.id = 0
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = [x] ~ this'.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 9
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.__S0.__run()
particle-size: 3
particle-size: 3
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 3
particle-size: 3
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 26
repetition: 5
statement: __d.__step()
particle-size: 26
particle-size: 26
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: (action,node) := this'.scheduler()
particle-size: 26
particle-size: 26
statement: actions := ([]: (R × R)[])
particle-size: 26
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 1
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
loop-index: 2
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 12
loop-index: 3
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.num_actions += 1
particle-size: 26
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 26
particle-size: 26
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.__H0.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 26
particle-size: 26
statement: this.id = 0
particle-size: 26
statement: return this
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = [x] ~ this'.data
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 14
particle-size: 14
statement: this.id = 0
particle-size: 14
statement: return this
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = [x] ~ this'.data
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 14
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.__S0.__run()
particle-size: 7
particle-size: 7
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 3
particle-size: 3
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 5
particle-size: 5
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 10
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 45
repetition: 6
statement: __d.__step()
particle-size: 45
particle-size: 45
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: (action,node) := this'.scheduler()
particle-size: 45
particle-size: 45
statement: actions := ([]: (R × R)[])
particle-size: 45
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 30
loop-index: 1
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
loop-index: 2
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 18
loop-index: 3
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 45
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.num_actions += 1
particle-size: 45
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 45
particle-size: 45
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
particle-size: 125
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.__H0.__run()
particle-size: 45
particle-size: 45
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 45
particle-size: 45
statement: this.id = 0
particle-size: 45
statement: return this
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.data = [x] ~ this'.data
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 20
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_in.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 73
particle-size: 73
statement: return this'.data.length
particle-size: 73
particle-size: 73
particle-size: 73
particle-size: 73
statement: this'.__S0.__run()
particle-size: 12
particle-size: 12
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 4
particle-size: 4
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 4
particle-size: 4
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 8
particle-size: 8
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 16
particle-size: 16
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.__S1.__run()
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.__S2.__run()
particle-size: 6
particle-size: 6
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 6
particle-size: 6
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 95
particle-size: 95
statement: return this'.data.length
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: this'.__S3.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 75
repetition: 7
statement: __d.__step()
particle-size: 75
particle-size: 75
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: (action,node) := this'.scheduler()
particle-size: 75
particle-size: 75
statement: actions := ([]: (R × R)[])
particle-size: 75
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 74
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 50
loop-index: 1
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
loop-index: 2
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 3
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 4
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 75
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
statement: actions ~= [(1,i)]
particle-size: 4
statement: this'.num_actions += 1
particle-size: 75
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 75
particle-size: 75
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 98
particle-size: 98
statement: return this'.data.length
particle-size: 98
particle-size: 98
particle-size: 98
particle-size: 98
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: this'.__H0.__run()
particle-size: 74
particle-size: 74
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 74
particle-size: 74
statement: this.id = 0
particle-size: 74
statement: return this
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = [x] ~ this'.data
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: this.id = 0
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 20
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.Q_in.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: this'.__S0.__run()
particle-size: 26
particle-size: 26
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 4
particle-size: 4
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 4
particle-size: 4
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 15
particle-size: 15
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 30
particle-size: 30
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 19
particle-size: 19
statement: r := this'.front()
particle-size: 19
particle-size: 19
statement: return this'.data[0]
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.popFront()
particle-size: 19
particle-size: 19
statement: this'.data = this'.data[1..this'.size()]
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return r
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.__S1.__run()
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.__S2.__run()
particle-size: 9
particle-size: 9
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 9
particle-size: 9
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 18
particle-size: 18
particle-size: 18
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.__S3.__run()
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 252
particle-size: 252
particle-size: 252
particle-size: 115
repetition: 8
statement: __d.__step()
particle-size: 115
particle-size: 115
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: (action,node) := this'.scheduler()
particle-size: 115
particle-size: 115
statement: actions := ([]: (R × R)[])
particle-size: 115
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 69
loop-index: 1
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
loop-index: 2
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 47
loop-index: 3
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 4
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 5
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
statement: actions ~= [(1,i)]
particle-size: 4
statement: this'.num_actions += 1
particle-size: 115
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 115
particle-size: 115
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
particle-size: 345
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 69
particle-size: 69
statement: r := this'.front()
particle-size: 69
particle-size: 69
statement: return this'.data[0]
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.popFront()
particle-size: 69
particle-size: 69
statement: this'.data = this'.data[1..this'.size()]
particle-size: 69
particle-size: 69
statement: return this'.data.length
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return r
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.data = this'.data ~ [x]
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 138
particle-size: 138
statement: return this'.data.length
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 207
particle-size: 207
statement: return this'.data.length
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: this'.__H0.__run()
particle-size: 113
particle-size: 113
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 113
particle-size: 113
statement: this.id = 0
particle-size: 113
statement: return this
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: this'.data = [x] ~ this'.data
particle-size: 113
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 27
particle-size: 27
statement: this.id = 0
particle-size: 27
statement: return this
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = [x] ~ this'.data
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 27
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 27
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.Q_in.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.Q_in.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 113
particle-size: 113
particle-size: 113
particle-size: 113
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 207
particle-size: 207
statement: return this'.data.length
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 4
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: this'.Q_in.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 207
particle-size: 207
statement: return this'.data.length
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: this'.__S0.__run()
particle-size: 44
particle-size: 44
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 4
particle-size: 4
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 4
particle-size: 4
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 8
particle-size: 8
particle-size: 8
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 25
particle-size: 25
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 27
particle-size: 27
statement: r := this'.front()
particle-size: 27
particle-size: 27
statement: return this'.data[0]
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return r
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: this'.__S1.__run()
particle-size: 17
particle-size: 17
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 240
particle-size: 240
statement: return this'.data.length
particle-size: 240
particle-size: 240
particle-size: 240
particle-size: 240
statement: this'.__S2.__run()
particle-size: 17
particle-size: 17
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 17
particle-size: 17
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 34
particle-size: 34
particle-size: 34
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 257
particle-size: 257
statement: return this'.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: this'.__S3.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 395
particle-size: 395
particle-size: 395
particle-size: 171
repetition: 9
statement: __d.__step()
particle-size: 171
particle-size: 171
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: (action,node) := this'.scheduler()
particle-size: 171
particle-size: 171
statement: actions := ([]: (R × R)[])
particle-size: 171
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 171
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(0,i)]
particle-size: 162
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(1,i)]
particle-size: 94
loop-index: 1
particle-size: 171
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
loop-index: 2
particle-size: 171
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(0,i)]
particle-size: 64
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(1,i)]
particle-size: 69
loop-index: 3
particle-size: 171
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 4
particle-size: 171
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 5
particle-size: 171
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
statement: actions ~= [(1,i)]
particle-size: 12
statement: this'.num_actions += 1
particle-size: 171
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 171
particle-size: 171
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 94
particle-size: 94
statement: r := this'.front()
particle-size: 94
particle-size: 94
statement: return this'.data[0]
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.popFront()
particle-size: 94
particle-size: 94
statement: this'.data = this'.data[1..this'.size()]
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return r
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.data = this'.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 69
particle-size: 69
statement: r := this'.front()
particle-size: 69
particle-size: 69
statement: return this'.data[0]
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.popFront()
particle-size: 69
particle-size: 69
statement: this'.data = this'.data[1..this'.size()]
particle-size: 69
particle-size: 69
statement: return this'.data.length
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return r
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 300
particle-size: 300
statement: return this'.data.length
particle-size: 300
particle-size: 300
particle-size: 300
particle-size: 300
statement: this'.__H0.__run()
particle-size: 162
particle-size: 162
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 162
particle-size: 162
statement: this.id = 0
particle-size: 162
statement: return this
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.data = [x] ~ this'.data
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 30
particle-size: 30
statement: this.id = 0
particle-size: 30
statement: return this
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = [x] ~ this'.data
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 30
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 30
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 30
particle-size: 30
statement: r := this'.front()
particle-size: 30
particle-size: 30
statement: return this'.data[0]
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.popFront()
particle-size: 30
particle-size: 30
statement: this'.data = this'.data[1..this'.size()]
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: return r
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.data = this'.data ~ [x]
particle-size: 30
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.Q_in.popFront()
particle-size: 132
particle-size: 132
statement: this'.data = this'.data[1..this'.size()]
particle-size: 132
particle-size: 132
statement: return this'.data.length
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: this'.Q_in.popFront()
particle-size: 132
particle-size: 132
statement: this'.data = this'.data[1..this'.size()]
particle-size: 132
particle-size: 132
statement: return this'.data.length
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 132
particle-size: 132
particle-size: 132
particle-size: 132
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 300
particle-size: 300
statement: return this'.data.length
particle-size: 300
particle-size: 300
particle-size: 300
particle-size: 300
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 4
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: this'.Q_in.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 300
particle-size: 300
statement: return this'.data.length
particle-size: 300
particle-size: 300
particle-size: 300
particle-size: 300
statement: this'.__S0.__run()
particle-size: 64
particle-size: 64
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 35
particle-size: 35
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 70
particle-size: 70
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 35
particle-size: 35
statement: r := this'.front()
particle-size: 35
particle-size: 35
statement: return this'.data[0]
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.popFront()
particle-size: 35
particle-size: 35
statement: this'.data = this'.data[1..this'.size()]
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return r
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 35
particle-size: 35
statement: r := this'.front()
particle-size: 35
particle-size: 35
statement: return this'.data[0]
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.popFront()
particle-size: 35
particle-size: 35
statement: this'.data = this'.data[1..this'.size()]
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return r
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.data = this'.data ~ [x]
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 33
particle-size: 33
statement: r := this'.front()
particle-size: 33
particle-size: 33
statement: return this'.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.data = this'.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 339
particle-size: 339
statement: return this'.data.length
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: this'.__S1.__run()
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 339
particle-size: 339
statement: return this'.data.length
particle-size: 339
particle-size: 339
particle-size: 339
particle-size: 339
statement: this'.__S2.__run()
particle-size: 26
particle-size: 26
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 22
particle-size: 22
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 44
particle-size: 44
particle-size: 44
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 361
particle-size: 361
statement: return this'.data.length
particle-size: 361
particle-size: 361
particle-size: 361
particle-size: 361
statement: this'.__S3.__run()
particle-size: 18
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 570
particle-size: 570
particle-size: 570
particle-size: 237
repetition: 10
statement: __d.__step()
particle-size: 237
particle-size: 237
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: (action,node) := this'.scheduler()
particle-size: 237
particle-size: 237
statement: actions := ([]: (R × R)[])
particle-size: 237
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 224
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(1,i)]
particle-size: 115
loop-index: 1
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
loop-index: 2
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 90
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(1,i)]
particle-size: 96
loop-index: 3
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(1,i)]
particle-size: 26
loop-index: 4
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 44
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(1,i)]
particle-size: 24
loop-index: 5
particle-size: 237
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 237
particle-size: 237
statement: return this'.data.length
particle-size: 237
particle-size: 237
particle-size: 237
statement: actions ~= [(1,i)]
particle-size: 18
statement: this'.num_actions += 1
particle-size: 237
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 237
particle-size: 237
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 727
particle-size: 727
particle-size: 727
particle-size: 727
particle-size: 727
particle-size: 727
particle-size: 727
particle-size: 727
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 115
particle-size: 115
statement: r := this'.front()
particle-size: 115
particle-size: 115
statement: return this'.data[0]
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: this'.popFront()
particle-size: 115
particle-size: 115
statement: this'.data = this'.data[1..this'.size()]
particle-size: 115
particle-size: 115
statement: return this'.data.length
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: return r
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 115
particle-size: 115
particle-size: 115
statement: this'.data = this'.data ~ [x]
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 115
particle-size: 115
particle-size: 115
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 96
particle-size: 96
statement: r := this'.front()
particle-size: 96
particle-size: 96
statement: return this'.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.popFront()
particle-size: 96
particle-size: 96
statement: this'.data = this'.data[1..this'.size()]
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 279
particle-size: 279
statement: return this'.data.length
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 448
particle-size: 448
statement: return this'.data.length
particle-size: 448
particle-size: 448
particle-size: 448
particle-size: 448
statement: this'.__H0.__run()
particle-size: 224
particle-size: 224
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 224
particle-size: 224
statement: this.id = 0
particle-size: 224
statement: return this
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: this'.data = [x] ~ this'.data
particle-size: 224
statement: return ()
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 32
particle-size: 32
statement: this.id = 0
particle-size: 32
statement: return this
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = [x] ~ this'.data
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 32
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 32
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.Q_in.popFront()
particle-size: 192
particle-size: 192
statement: this'.data = this'.data[1..this'.size()]
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: this'.Q_in.popFront()
particle-size: 192
particle-size: 192
statement: this'.data = this'.data[1..this'.size()]
particle-size: 192
particle-size: 192
statement: return this'.data.length
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: return ()
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 448
particle-size: 448
statement: return this'.data.length
particle-size: 448
particle-size: 448
particle-size: 448
particle-size: 448
statement: this'.__H1.__run()
particle-size: 12
particle-size: 12
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 12
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 448
particle-size: 448
statement: return this'.data.length
particle-size: 448
particle-size: 448
particle-size: 448
particle-size: 448
statement: this'.__S0.__run()
particle-size: 90
particle-size: 90
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: this'.strategy = uniformInt(1,2)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 2) {
    this'.strategy = (this'.strategy + flip((1 / 2)));
}
statement: this'.strategy = (this'.strategy + flip((1 / 2)))
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 50
particle-size: 50
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 100
particle-size: 100
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 142
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 500
particle-size: 500
statement: return this'.data.length
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: this'.__S1.__run()
particle-size: 44
particle-size: 44
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 500
particle-size: 500
statement: return this'.data.length
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: this'.__S2.__run()
particle-size: 44
particle-size: 44
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 38
particle-size: 38
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 76
particle-size: 76
particle-size: 76
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 538
particle-size: 538
statement: return this'.data.length
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 538
statement: this'.__S3.__run()
particle-size: 34
particle-size: 34
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 817
particle-size: 817
particle-size: 817
particle-size: 322
repetition: 11
statement: __d.__step()
particle-size: 322
particle-size: 322
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
particle-size: 322
statement: (action,node) := this'.scheduler()
particle-size: 322
particle-size: 322
statement: actions := ([]: (R × R)[])
particle-size: 322
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 322
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(0,i)]
particle-size: 292
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(1,i)]
particle-size: 135
loop-index: 1
particle-size: 322
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(0,i)]
particle-size: 18
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
loop-index: 2
particle-size: 322
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(0,i)]
particle-size: 115
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(1,i)]
particle-size: 144
loop-index: 3
particle-size: 322
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(0,i)]
particle-size: 57
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(1,i)]
particle-size: 44
loop-index: 4
particle-size: 322
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(0,i)]
particle-size: 57
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(1,i)]
particle-size: 42
loop-index: 5
particle-size: 322
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(0,i)]
particle-size: 50
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 322
particle-size: 322
statement: return this'.data.length
particle-size: 322
particle-size: 322
particle-size: 322
statement: actions ~= [(1,i)]
particle-size: 34
statement: this'.num_actions += 1
particle-size: 322
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 322
particle-size: 322
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 988
particle-size: 988
particle-size: 988
particle-size: 988
particle-size: 988
particle-size: 988
particle-size: 988
particle-size: 988
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 399
particle-size: 399
statement: return this'.data.length
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 135
particle-size: 135
statement: r := this'.front()
particle-size: 135
particle-size: 135
statement: return this'.data[0]
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.popFront()
particle-size: 135
particle-size: 135
statement: this'.data = this'.data[1..this'.size()]
particle-size: 135
particle-size: 135
statement: return this'.data.length
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return r
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.data = this'.data ~ [x]
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 399
particle-size: 399
statement: return this'.data.length
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 399
particle-size: 399
statement: return this'.data.length
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 144
particle-size: 144
statement: r := this'.front()
particle-size: 144
particle-size: 144
statement: return this'.data[0]
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return r
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 70
particle-size: 70
particle-size: 70
statement: this'.data = this'.data ~ [x]
particle-size: 70
statement: return ()
particle-size: 70
particle-size: 70
particle-size: 70
particle-size: 70
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 399
particle-size: 399
statement: return this'.data.length
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 44
particle-size: 44
statement: r := this'.front()
particle-size: 44
particle-size: 44
statement: return this'.data[0]
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return r
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.data = this'.data ~ [x]
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 399
particle-size: 399
statement: return this'.data.length
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = this'.data ~ [x]
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 399
particle-size: 399
statement: return this'.data.length
particle-size: 399
particle-size: 399
particle-size: 399
particle-size: 399
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 589
particle-size: 589
statement: return this'.data.length
particle-size: 589
particle-size: 589
particle-size: 589
particle-size: 589
statement: this'.__H0.__run()
particle-size: 292
particle-size: 292
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 292
particle-size: 292
statement: this.id = 0
particle-size: 292
statement: return this
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: this'.data = [x] ~ this'.data
particle-size: 292
statement: return ()
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 28
particle-size: 28
statement: this.id = 0
particle-size: 28
statement: return this
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = [x] ~ this'.data
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 28
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 28
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 28
particle-size: 28
statement: r := this'.front()
particle-size: 28
particle-size: 28
statement: return this'.data[0]
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.popFront()
particle-size: 28
particle-size: 28
statement: this'.data = this'.data[1..this'.size()]
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return r
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.Q_in.popFront()
particle-size: 264
particle-size: 264
statement: this'.data = this'.data[1..this'.size()]
particle-size: 264
particle-size: 264
statement: return this'.data.length
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: return ()
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: this'.Q_in.popFront()
particle-size: 264
particle-size: 264
statement: this'.data = this'.data[1..this'.size()]
particle-size: 264
particle-size: 264
statement: return this'.data.length
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: return ()
particle-size: 264
particle-size: 264
particle-size: 264
particle-size: 264
statement: return ()
particle-size: 292
particle-size: 292
particle-size: 292
particle-size: 292
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 589
particle-size: 589
statement: return this'.data.length
particle-size: 589
particle-size: 589
particle-size: 589
particle-size: 589
statement: this'.__H1.__run()
particle-size: 18
particle-size: 18
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 18
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: this'.Q_in.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 589
particle-size: 589
statement: return this'.data.length
particle-size: 589
particle-size: 589
particle-size: 589
particle-size: 589
statement: this'.__S0.__run()
particle-size: 115
particle-size: 115
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 66
particle-size: 66
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 132
particle-size: 132
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.data = this'.data ~ [x]
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.data = this'.data ~ [x]
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 49
particle-size: 49
statement: r := this'.front()
particle-size: 49
particle-size: 49
statement: return this'.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 655
particle-size: 655
statement: return this'.data.length
particle-size: 655
particle-size: 655
particle-size: 655
particle-size: 655
statement: this'.__S1.__run()
particle-size: 57
particle-size: 57
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 655
particle-size: 655
statement: return this'.data.length
particle-size: 655
particle-size: 655
particle-size: 655
particle-size: 655
statement: this'.__S2.__run()
particle-size: 57
particle-size: 57
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 45
particle-size: 45
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 90
particle-size: 90
particle-size: 90
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 700
particle-size: 700
statement: return this'.data.length
particle-size: 700
particle-size: 700
particle-size: 700
particle-size: 700
statement: this'.__S3.__run()
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 50
particle-size: 50
statement: r := this'.front()
particle-size: 50
particle-size: 50
statement: return this'.data[0]
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.popFront()
particle-size: 50
particle-size: 50
statement: this'.data = this'.data[1..this'.size()]
particle-size: 50
particle-size: 50
statement: return this'.data.length
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return r
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: this'.data = this'.data ~ [x]
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 50
particle-size: 50
particle-size: 50
particle-size: 50
statement: return ()
particle-size: 1099
particle-size: 1099
particle-size: 1099
particle-size: 406
repetition: 12
statement: __d.__step()
particle-size: 406
particle-size: 406
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: (action,node) := this'.scheduler()
particle-size: 406
particle-size: 406
statement: actions := ([]: (R × R)[])
particle-size: 406
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 406
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(0,i)]
particle-size: 372
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(1,i)]
particle-size: 141
loop-index: 1
particle-size: 406
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
loop-index: 2
particle-size: 406
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(0,i)]
particle-size: 135
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(1,i)]
particle-size: 183
loop-index: 3
particle-size: 406
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(0,i)]
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(1,i)]
particle-size: 57
loop-index: 4
particle-size: 406
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(0,i)]
particle-size: 81
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(1,i)]
particle-size: 52
loop-index: 5
particle-size: 406
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(0,i)]
particle-size: 86
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
statement: actions ~= [(1,i)]
particle-size: 49
statement: this'.num_actions += 1
particle-size: 406
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 406
particle-size: 406
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1272
particle-size: 1272
particle-size: 1272
particle-size: 1272
particle-size: 1272
particle-size: 1272
particle-size: 1272
particle-size: 1272
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 141
particle-size: 141
statement: r := this'.front()
particle-size: 141
particle-size: 141
statement: return this'.data[0]
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: this'.popFront()
particle-size: 141
particle-size: 141
statement: this'.data = this'.data[1..this'.size()]
particle-size: 141
particle-size: 141
statement: return this'.data.length
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: return ()
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: return r
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 141
particle-size: 141
particle-size: 141
statement: this'.data = this'.data ~ [x]
particle-size: 141
statement: return ()
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 183
particle-size: 183
statement: r := this'.front()
particle-size: 183
particle-size: 183
statement: return this'.data[0]
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: this'.popFront()
particle-size: 183
particle-size: 183
statement: this'.data = this'.data[1..this'.size()]
particle-size: 183
particle-size: 183
statement: return this'.data.length
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: return ()
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: return r
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.data = this'.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 52
particle-size: 52
statement: r := this'.front()
particle-size: 52
particle-size: 52
statement: return this'.data[0]
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return r
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.data = this'.data ~ [x]
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 482
particle-size: 482
statement: return this'.data.length
particle-size: 482
particle-size: 482
particle-size: 482
particle-size: 482
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 49
particle-size: 49
statement: r := this'.front()
particle-size: 49
particle-size: 49
statement: return this'.data[0]
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.popFront()
particle-size: 49
particle-size: 49
statement: this'.data = this'.data[1..this'.size()]
particle-size: 49
particle-size: 49
statement: return this'.data.length
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: return r
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 49
particle-size: 49
particle-size: 49
statement: this'.data = this'.data ~ [x]
particle-size: 49
statement: return ()
particle-size: 49
particle-size: 49
particle-size: 49
particle-size: 49
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 790
particle-size: 790
statement: return this'.data.length
particle-size: 790
particle-size: 790
particle-size: 790
particle-size: 790
statement: this'.__H0.__run()
particle-size: 372
particle-size: 372
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 372
particle-size: 372
statement: this.id = 0
particle-size: 372
statement: return this
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: this'.data = [x] ~ this'.data
particle-size: 372
statement: return ()
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 31
particle-size: 31
statement: this.id = 0
particle-size: 31
statement: return this
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = [x] ~ this'.data
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 31
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 31
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 31
particle-size: 31
statement: r := this'.front()
particle-size: 31
particle-size: 31
statement: return this'.data[0]
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return r
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.Q_in.popFront()
particle-size: 341
particle-size: 341
statement: this'.data = this'.data[1..this'.size()]
particle-size: 341
particle-size: 341
statement: return this'.data.length
particle-size: 341
particle-size: 341
particle-size: 341
particle-size: 341
particle-size: 341
statement: return ()
particle-size: 341
particle-size: 341
particle-size: 341
particle-size: 341
statement: this'.Q_in.popFront()
particle-size: 341
particle-size: 341
statement: this'.data = this'.data[1..this'.size()]
particle-size: 341
particle-size: 341
statement: return this'.data.length
particle-size: 341
particle-size: 341
particle-size: 341
particle-size: 341
particle-size: 341
statement: return ()
particle-size: 341
particle-size: 341
particle-size: 341
particle-size: 341
statement: return ()
particle-size: 372
particle-size: 372
particle-size: 372
particle-size: 372
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 790
particle-size: 790
statement: return this'.data.length
particle-size: 790
particle-size: 790
particle-size: 790
particle-size: 790
statement: this'.__H1.__run()
particle-size: 34
particle-size: 34
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 34
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: this'.Q_in.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 788
particle-size: 788
statement: return this'.data.length
particle-size: 788
particle-size: 788
particle-size: 788
particle-size: 788
statement: this'.__S0.__run()
particle-size: 135
particle-size: 135
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 81
particle-size: 81
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 162
particle-size: 162
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 81
particle-size: 81
statement: r := this'.front()
particle-size: 81
particle-size: 81
statement: return this'.data[0]
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.popFront()
particle-size: 81
particle-size: 81
statement: this'.data = this'.data[1..this'.size()]
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return r
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.data = this'.data ~ [x]
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 81
particle-size: 81
statement: r := this'.front()
particle-size: 81
particle-size: 81
statement: return this'.data[0]
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.popFront()
particle-size: 81
particle-size: 81
statement: this'.data = this'.data[1..this'.size()]
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return r
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.data = this'.data ~ [x]
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 869
particle-size: 869
statement: return this'.data.length
particle-size: 869
particle-size: 869
particle-size: 869
particle-size: 869
statement: this'.__S1.__run()
particle-size: 82
particle-size: 82
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 82
particle-size: 82
statement: r := this'.front()
particle-size: 82
particle-size: 82
statement: return this'.data[0]
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return r
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.data = this'.data ~ [x]
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 869
particle-size: 869
statement: return this'.data.length
particle-size: 869
particle-size: 869
particle-size: 869
particle-size: 869
statement: this'.__S2.__run()
particle-size: 81
particle-size: 81
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 59
particle-size: 59
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 118
particle-size: 118
particle-size: 118
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 74
particle-size: 74
statement: r := this'.front()
particle-size: 74
particle-size: 74
statement: return this'.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 928
particle-size: 928
statement: return this'.data.length
particle-size: 928
particle-size: 928
particle-size: 928
particle-size: 928
statement: this'.__S3.__run()
particle-size: 86
particle-size: 86
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 86
particle-size: 86
statement: r := this'.front()
particle-size: 86
particle-size: 86
statement: return this'.data[0]
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.popFront()
particle-size: 86
particle-size: 86
statement: this'.data = this'.data[1..this'.size()]
particle-size: 86
particle-size: 86
statement: return this'.data.length
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return r
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: this'.data = this'.data ~ [x]
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 86
particle-size: 86
particle-size: 86
particle-size: 86
statement: return ()
particle-size: 1410
particle-size: 1410
particle-size: 1410
particle-size: 507
repetition: 13
statement: __d.__step()
particle-size: 507
particle-size: 507
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: (action,node) := this'.scheduler()
particle-size: 507
particle-size: 507
statement: actions := ([]: (R × R)[])
particle-size: 507
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 507
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(0,i)]
particle-size: 452
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(1,i)]
particle-size: 152
loop-index: 1
particle-size: 507
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(0,i)]
particle-size: 49
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
loop-index: 2
particle-size: 507
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(0,i)]
particle-size: 147
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(1,i)]
particle-size: 228
loop-index: 3
particle-size: 507
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(0,i)]
particle-size: 108
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(1,i)]
particle-size: 84
loop-index: 4
particle-size: 507
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(0,i)]
particle-size: 108
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(1,i)]
particle-size: 74
loop-index: 5
particle-size: 507
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(0,i)]
particle-size: 109
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
statement: actions ~= [(1,i)]
particle-size: 84
statement: this'.num_actions += 1
particle-size: 507
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 507
particle-size: 507
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1595
particle-size: 1595
particle-size: 1595
particle-size: 1595
particle-size: 1595
particle-size: 1595
particle-size: 1595
particle-size: 1595
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 622
particle-size: 622
statement: return this'.data.length
particle-size: 622
particle-size: 622
particle-size: 622
particle-size: 622
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 152
particle-size: 152
statement: r := this'.front()
particle-size: 152
particle-size: 152
statement: return this'.data[0]
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: this'.popFront()
particle-size: 152
particle-size: 152
statement: this'.data = this'.data[1..this'.size()]
particle-size: 152
particle-size: 152
statement: return this'.data.length
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: return r
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 152
particle-size: 152
particle-size: 152
statement: this'.data = this'.data ~ [x]
particle-size: 152
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 622
particle-size: 622
statement: return this'.data.length
particle-size: 622
particle-size: 622
particle-size: 622
particle-size: 622
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 622
particle-size: 622
statement: return this'.data.length
particle-size: 622
particle-size: 622
particle-size: 622
particle-size: 622
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 228
particle-size: 228
statement: r := this'.front()
particle-size: 228
particle-size: 228
statement: return this'.data[0]
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.popFront()
particle-size: 228
particle-size: 228
statement: this'.data = this'.data[1..this'.size()]
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return r
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 117
particle-size: 117
particle-size: 117
statement: this'.data = this'.data ~ [x]
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 622
particle-size: 622
statement: return this'.data.length
particle-size: 622
particle-size: 622
particle-size: 622
particle-size: 622
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 622
particle-size: 622
statement: return this'.data.length
particle-size: 622
particle-size: 622
particle-size: 622
particle-size: 622
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 74
particle-size: 74
statement: r := this'.front()
particle-size: 74
particle-size: 74
statement: return this'.data[0]
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.popFront()
particle-size: 74
particle-size: 74
statement: this'.data = this'.data[1..this'.size()]
particle-size: 74
particle-size: 74
statement: return this'.data.length
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: return r
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 74
particle-size: 74
particle-size: 74
statement: this'.data = this'.data ~ [x]
particle-size: 74
statement: return ()
particle-size: 74
particle-size: 74
particle-size: 74
particle-size: 74
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 622
particle-size: 622
statement: return this'.data.length
particle-size: 622
particle-size: 622
particle-size: 622
particle-size: 622
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 973
particle-size: 973
statement: return this'.data.length
particle-size: 973
particle-size: 973
particle-size: 973
particle-size: 973
statement: this'.__H0.__run()
particle-size: 452
particle-size: 452
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 452
particle-size: 452
statement: this.id = 0
particle-size: 452
statement: return this
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: this'.data = [x] ~ this'.data
particle-size: 452
statement: return ()
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 22
particle-size: 22
statement: this.id = 0
particle-size: 22
statement: return this
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = [x] ~ this'.data
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 22
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 22
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 22
particle-size: 22
statement: r := this'.front()
particle-size: 22
particle-size: 22
statement: return this'.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = this'.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.Q_in.popFront()
particle-size: 430
particle-size: 430
statement: this'.data = this'.data[1..this'.size()]
particle-size: 430
particle-size: 430
statement: return this'.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: return ()
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: this'.Q_in.popFront()
particle-size: 430
particle-size: 430
statement: this'.data = this'.data[1..this'.size()]
particle-size: 430
particle-size: 430
statement: return this'.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: return ()
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: return ()
particle-size: 452
particle-size: 452
particle-size: 452
particle-size: 452
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 973
particle-size: 973
statement: return this'.data.length
particle-size: 973
particle-size: 973
particle-size: 973
particle-size: 973
statement: this'.__H1.__run()
particle-size: 49
particle-size: 49
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 49
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: this'.Q_in.popFront()
particle-size: 44
particle-size: 44
statement: this'.data = this'.data[1..this'.size()]
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: return ()
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 968
particle-size: 968
statement: return this'.data.length
particle-size: 968
particle-size: 968
particle-size: 968
particle-size: 968
statement: this'.__S0.__run()
particle-size: 147
particle-size: 147
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 92
particle-size: 92
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 184
particle-size: 184
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 92
particle-size: 92
statement: r := this'.front()
particle-size: 92
particle-size: 92
statement: return this'.data[0]
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.popFront()
particle-size: 92
particle-size: 92
statement: this'.data = this'.data[1..this'.size()]
particle-size: 92
particle-size: 92
statement: return this'.data.length
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return r
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.data = this'.data ~ [x]
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 92
particle-size: 92
statement: r := this'.front()
particle-size: 92
particle-size: 92
statement: return this'.data[0]
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.popFront()
particle-size: 92
particle-size: 92
statement: this'.data = this'.data[1..this'.size()]
particle-size: 92
particle-size: 92
statement: return this'.data.length
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return r
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.data = this'.data ~ [x]
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 55
particle-size: 55
statement: r := this'.front()
particle-size: 55
particle-size: 55
statement: return this'.data[0]
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.popFront()
particle-size: 55
particle-size: 55
statement: this'.data = this'.data[1..this'.size()]
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return r
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.data = this'.data ~ [x]
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1060
particle-size: 1060
statement: return this'.data.length
particle-size: 1060
particle-size: 1060
particle-size: 1060
particle-size: 1060
statement: this'.__S1.__run()
particle-size: 108
particle-size: 108
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 108
particle-size: 108
statement: r := this'.front()
particle-size: 108
particle-size: 108
statement: return this'.data[0]
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.popFront()
particle-size: 108
particle-size: 108
statement: this'.data = this'.data[1..this'.size()]
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return r
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.data = this'.data ~ [x]
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1060
particle-size: 1060
statement: return this'.data.length
particle-size: 1060
particle-size: 1060
particle-size: 1060
particle-size: 1060
statement: this'.__S2.__run()
particle-size: 108
particle-size: 108
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 65
particle-size: 65
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 130
particle-size: 130
particle-size: 130
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 79
particle-size: 79
statement: this'.data = this'.data[1..this'.size()]
particle-size: 79
particle-size: 79
statement: return this'.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 94
particle-size: 94
statement: r := this'.front()
particle-size: 94
particle-size: 94
statement: return this'.data[0]
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.popFront()
particle-size: 94
particle-size: 94
statement: this'.data = this'.data[1..this'.size()]
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return r
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: this'.data = this'.data ~ [x]
particle-size: 94
statement: return ()
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: return ()
particle-size: 173
particle-size: 173
particle-size: 173
particle-size: 173
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1125
particle-size: 1125
statement: return this'.data.length
particle-size: 1125
particle-size: 1125
particle-size: 1125
particle-size: 1125
statement: this'.__S3.__run()
particle-size: 109
particle-size: 109
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 109
particle-size: 109
statement: r := this'.front()
particle-size: 109
particle-size: 109
statement: return this'.data[0]
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.popFront()
particle-size: 109
particle-size: 109
statement: this'.data = this'.data[1..this'.size()]
particle-size: 109
particle-size: 109
statement: return this'.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return r
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.data = this'.data ~ [x]
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 1747
particle-size: 1747
particle-size: 1747
particle-size: 600
repetition: 14
statement: __d.__step()
particle-size: 600
particle-size: 600
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
particle-size: 600
statement: (action,node) := this'.scheduler()
particle-size: 600
particle-size: 600
statement: actions := ([]: (R × R)[])
particle-size: 600
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 600
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(0,i)]
particle-size: 527
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(1,i)]
particle-size: 147
loop-index: 1
particle-size: 600
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(0,i)]
particle-size: 84
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
loop-index: 2
particle-size: 600
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(0,i)]
particle-size: 156
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(1,i)]
particle-size: 261
loop-index: 3
particle-size: 600
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(0,i)]
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(1,i)]
particle-size: 108
loop-index: 4
particle-size: 600
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(0,i)]
particle-size: 138
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(1,i)]
particle-size: 90
loop-index: 5
particle-size: 600
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(0,i)]
particle-size: 158
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 600
particle-size: 600
statement: return this'.data.length
particle-size: 600
particle-size: 600
particle-size: 600
statement: actions ~= [(1,i)]
particle-size: 104
statement: this'.num_actions += 1
particle-size: 600
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 600
particle-size: 600
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1912
particle-size: 1912
particle-size: 1912
particle-size: 1912
particle-size: 1912
particle-size: 1912
particle-size: 1912
particle-size: 1912
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 710
particle-size: 710
statement: return this'.data.length
particle-size: 710
particle-size: 710
particle-size: 710
particle-size: 710
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 147
particle-size: 147
statement: r := this'.front()
particle-size: 147
particle-size: 147
statement: return this'.data[0]
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: this'.popFront()
particle-size: 147
particle-size: 147
statement: this'.data = this'.data[1..this'.size()]
particle-size: 147
particle-size: 147
statement: return this'.data.length
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: return r
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 147
particle-size: 147
particle-size: 147
statement: this'.data = this'.data ~ [x]
particle-size: 147
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 710
particle-size: 710
statement: return this'.data.length
particle-size: 710
particle-size: 710
particle-size: 710
particle-size: 710
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 710
particle-size: 710
statement: return this'.data.length
particle-size: 710
particle-size: 710
particle-size: 710
particle-size: 710
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 261
particle-size: 261
statement: r := this'.front()
particle-size: 261
particle-size: 261
statement: return this'.data[0]
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: this'.popFront()
particle-size: 261
particle-size: 261
statement: this'.data = this'.data[1..this'.size()]
particle-size: 261
particle-size: 261
statement: return this'.data.length
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return r
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 128
particle-size: 128
particle-size: 128
statement: this'.data = this'.data ~ [x]
particle-size: 128
statement: return ()
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 133
particle-size: 133
particle-size: 133
statement: this'.data = this'.data ~ [x]
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 133
particle-size: 133
particle-size: 133
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 710
particle-size: 710
statement: return this'.data.length
particle-size: 710
particle-size: 710
particle-size: 710
particle-size: 710
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 108
particle-size: 108
statement: r := this'.front()
particle-size: 108
particle-size: 108
statement: return this'.data[0]
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.popFront()
particle-size: 108
particle-size: 108
statement: this'.data = this'.data[1..this'.size()]
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return r
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.data = this'.data ~ [x]
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 710
particle-size: 710
statement: return this'.data.length
particle-size: 710
particle-size: 710
particle-size: 710
particle-size: 710
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 90
particle-size: 90
statement: r := this'.front()
particle-size: 90
particle-size: 90
statement: return this'.data[0]
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.popFront()
particle-size: 90
particle-size: 90
statement: this'.data = this'.data[1..this'.size()]
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return r
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.data = this'.data ~ [x]
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 710
particle-size: 710
statement: return this'.data.length
particle-size: 710
particle-size: 710
particle-size: 710
particle-size: 710
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 104
particle-size: 104
statement: r := this'.front()
particle-size: 104
particle-size: 104
statement: return this'.data[0]
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.popFront()
particle-size: 104
particle-size: 104
statement: this'.data = this'.data[1..this'.size()]
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return r
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.data = this'.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1202
particle-size: 1202
statement: return this'.data.length
particle-size: 1202
particle-size: 1202
particle-size: 1202
particle-size: 1202
statement: this'.__H0.__run()
particle-size: 527
particle-size: 527
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 527
particle-size: 527
statement: this.id = 0
particle-size: 527
statement: return this
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: this'.data = [x] ~ this'.data
particle-size: 527
statement: return ()
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: this.id = 0
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = [x] ~ this'.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 18
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_in.popFront()
particle-size: 509
particle-size: 509
statement: this'.data = this'.data[1..this'.size()]
particle-size: 509
particle-size: 509
statement: return this'.data.length
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
statement: return ()
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
statement: this'.Q_in.popFront()
particle-size: 509
particle-size: 509
statement: this'.data = this'.data[1..this'.size()]
particle-size: 509
particle-size: 509
statement: return this'.data.length
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
statement: return ()
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
statement: return ()
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1202
particle-size: 1202
statement: return this'.data.length
particle-size: 1202
particle-size: 1202
particle-size: 1202
particle-size: 1202
statement: this'.__H1.__run()
particle-size: 84
particle-size: 84
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 84
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: this'.Q_in.popFront()
particle-size: 75
particle-size: 75
statement: this'.data = this'.data[1..this'.size()]
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1193
particle-size: 1193
statement: return this'.data.length
particle-size: 1193
particle-size: 1193
particle-size: 1193
particle-size: 1193
statement: this'.__S0.__run()
particle-size: 156
particle-size: 156
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 103
particle-size: 103
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 206
particle-size: 206
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1296
particle-size: 1296
statement: return this'.data.length
particle-size: 1296
particle-size: 1296
particle-size: 1296
particle-size: 1296
statement: this'.__S1.__run()
particle-size: 139
particle-size: 139
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 139
particle-size: 139
statement: r := this'.front()
particle-size: 139
particle-size: 139
statement: return this'.data[0]
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: this'.popFront()
particle-size: 139
particle-size: 139
statement: this'.data = this'.data[1..this'.size()]
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return r
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: this'.data = this'.data ~ [x]
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1296
particle-size: 1296
statement: return this'.data.length
particle-size: 1296
particle-size: 1296
particle-size: 1296
particle-size: 1296
statement: this'.__S2.__run()
particle-size: 138
particle-size: 138
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 73
particle-size: 73
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 146
particle-size: 146
particle-size: 146
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 92
particle-size: 92
statement: this'.data = this'.data[1..this'.size()]
particle-size: 92
particle-size: 92
statement: return this'.data.length
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 92
particle-size: 92
particle-size: 92
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 119
particle-size: 119
statement: r := this'.front()
particle-size: 119
particle-size: 119
statement: return this'.data[0]
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return r
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.data = this'.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 211
particle-size: 211
particle-size: 211
particle-size: 211
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1369
particle-size: 1369
statement: return this'.data.length
particle-size: 1369
particle-size: 1369
particle-size: 1369
particle-size: 1369
statement: this'.__S3.__run()
particle-size: 158
particle-size: 158
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 158
particle-size: 158
statement: r := this'.front()
particle-size: 158
particle-size: 158
statement: return this'.data[0]
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.popFront()
particle-size: 158
particle-size: 158
statement: this'.data = this'.data[1..this'.size()]
particle-size: 158
particle-size: 158
statement: return this'.data.length
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return r
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: this'.data = this'.data ~ [x]
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return ()
particle-size: 158
particle-size: 158
particle-size: 158
particle-size: 158
statement: return ()
particle-size: 2079
particle-size: 2079
particle-size: 2079
particle-size: 689
repetition: 15
statement: __d.__step()
particle-size: 689
particle-size: 689
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
particle-size: 689
statement: (action,node) := this'.scheduler()
particle-size: 689
particle-size: 689
statement: actions := ([]: (R × R)[])
particle-size: 689
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 689
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(0,i)]
particle-size: 587
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(1,i)]
particle-size: 135
loop-index: 1
particle-size: 689
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(0,i)]
particle-size: 104
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
loop-index: 2
particle-size: 689
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(0,i)]
particle-size: 151
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(1,i)]
particle-size: 290
loop-index: 3
particle-size: 689
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(0,i)]
particle-size: 156
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(1,i)]
particle-size: 137
loop-index: 4
particle-size: 689
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(0,i)]
particle-size: 155
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(1,i)]
particle-size: 110
loop-index: 5
particle-size: 689
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(0,i)]
particle-size: 198
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 689
particle-size: 689
statement: return this'.data.length
particle-size: 689
particle-size: 689
particle-size: 689
statement: actions ~= [(1,i)]
particle-size: 148
statement: this'.num_actions += 1
particle-size: 689
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 689
particle-size: 689
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2171
particle-size: 2171
particle-size: 2171
particle-size: 2171
particle-size: 2171
particle-size: 2171
particle-size: 2171
particle-size: 2171
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 820
particle-size: 820
statement: return this'.data.length
particle-size: 820
particle-size: 820
particle-size: 820
particle-size: 820
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 135
particle-size: 135
statement: r := this'.front()
particle-size: 135
particle-size: 135
statement: return this'.data[0]
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.popFront()
particle-size: 135
particle-size: 135
statement: this'.data = this'.data[1..this'.size()]
particle-size: 135
particle-size: 135
statement: return this'.data.length
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return r
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.data = this'.data ~ [x]
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 820
particle-size: 820
statement: return this'.data.length
particle-size: 820
particle-size: 820
particle-size: 820
particle-size: 820
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 820
particle-size: 820
statement: return this'.data.length
particle-size: 820
particle-size: 820
particle-size: 820
particle-size: 820
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 290
particle-size: 290
statement: r := this'.front()
particle-size: 290
particle-size: 290
statement: return this'.data[0]
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: this'.popFront()
particle-size: 290
particle-size: 290
statement: this'.data = this'.data[1..this'.size()]
particle-size: 290
particle-size: 290
statement: return this'.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: return ()
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: return r
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 143
particle-size: 143
particle-size: 143
statement: this'.data = this'.data ~ [x]
particle-size: 143
statement: return ()
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 147
particle-size: 147
particle-size: 147
statement: this'.data = this'.data ~ [x]
particle-size: 147
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 147
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 820
particle-size: 820
statement: return this'.data.length
particle-size: 820
particle-size: 820
particle-size: 820
particle-size: 820
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 137
particle-size: 137
statement: r := this'.front()
particle-size: 137
particle-size: 137
statement: return this'.data[0]
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.popFront()
particle-size: 137
particle-size: 137
statement: this'.data = this'.data[1..this'.size()]
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return r
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.data = this'.data ~ [x]
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 820
particle-size: 820
statement: return this'.data.length
particle-size: 820
particle-size: 820
particle-size: 820
particle-size: 820
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 110
particle-size: 110
statement: r := this'.front()
particle-size: 110
particle-size: 110
statement: return this'.data[0]
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: this'.popFront()
particle-size: 110
particle-size: 110
statement: this'.data = this'.data[1..this'.size()]
particle-size: 110
particle-size: 110
statement: return this'.data.length
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: return ()
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: return r
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 110
particle-size: 110
particle-size: 110
statement: this'.data = this'.data ~ [x]
particle-size: 110
statement: return ()
particle-size: 110
particle-size: 110
particle-size: 110
particle-size: 110
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 820
particle-size: 820
statement: return this'.data.length
particle-size: 820
particle-size: 820
particle-size: 820
particle-size: 820
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 148
particle-size: 148
statement: r := this'.front()
particle-size: 148
particle-size: 148
statement: return this'.data[0]
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: this'.popFront()
particle-size: 148
particle-size: 148
statement: this'.data = this'.data[1..this'.size()]
particle-size: 148
particle-size: 148
statement: return this'.data.length
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: return r
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 148
particle-size: 148
particle-size: 148
statement: this'.data = this'.data ~ [x]
particle-size: 148
statement: return ()
particle-size: 148
particle-size: 148
particle-size: 148
particle-size: 148
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1351
particle-size: 1351
statement: return this'.data.length
particle-size: 1351
particle-size: 1351
particle-size: 1351
particle-size: 1351
statement: this'.__H0.__run()
particle-size: 587
particle-size: 587
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 587
particle-size: 587
statement: this.id = 0
particle-size: 587
statement: return this
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: this'.data = [x] ~ this'.data
particle-size: 587
statement: return ()
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 10
particle-size: 10
statement: this.id = 0
particle-size: 10
statement: return this
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = [x] ~ this'.data
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 10
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.Q_in.popFront()
particle-size: 577
particle-size: 577
statement: this'.data = this'.data[1..this'.size()]
particle-size: 577
particle-size: 577
statement: return this'.data.length
particle-size: 577
particle-size: 577
particle-size: 577
particle-size: 577
particle-size: 577
statement: return ()
particle-size: 577
particle-size: 577
particle-size: 577
particle-size: 577
statement: this'.Q_in.popFront()
particle-size: 577
particle-size: 577
statement: this'.data = this'.data[1..this'.size()]
particle-size: 577
particle-size: 577
statement: return this'.data.length
particle-size: 577
particle-size: 577
particle-size: 577
particle-size: 577
particle-size: 577
statement: return ()
particle-size: 577
particle-size: 577
particle-size: 577
particle-size: 577
statement: return ()
particle-size: 587
particle-size: 587
particle-size: 587
particle-size: 587
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1351
particle-size: 1351
statement: return this'.data.length
particle-size: 1351
particle-size: 1351
particle-size: 1351
particle-size: 1351
statement: this'.__H1.__run()
particle-size: 104
particle-size: 104
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 104
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: this'.Q_in.popFront()
particle-size: 87
particle-size: 87
statement: this'.data = this'.data[1..this'.size()]
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1334
particle-size: 1334
statement: return this'.data.length
particle-size: 1334
particle-size: 1334
particle-size: 1334
particle-size: 1334
statement: this'.__S0.__run()
particle-size: 151
particle-size: 151
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 103
particle-size: 103
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 206
particle-size: 206
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 48
particle-size: 48
statement: r := this'.front()
particle-size: 48
particle-size: 48
statement: return this'.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.popFront()
particle-size: 48
particle-size: 48
statement: this'.data = this'.data[1..this'.size()]
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.data = this'.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1437
particle-size: 1437
statement: return this'.data.length
particle-size: 1437
particle-size: 1437
particle-size: 1437
particle-size: 1437
statement: this'.__S1.__run()
particle-size: 156
particle-size: 156
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 156
particle-size: 156
statement: r := this'.front()
particle-size: 156
particle-size: 156
statement: return this'.data[0]
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this'.popFront()
particle-size: 156
particle-size: 156
statement: this'.data = this'.data[1..this'.size()]
particle-size: 156
particle-size: 156
statement: return this'.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return r
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this'.data = this'.data ~ [x]
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1437
particle-size: 1437
statement: return this'.data.length
particle-size: 1437
particle-size: 1437
particle-size: 1437
particle-size: 1437
statement: this'.__S2.__run()
particle-size: 155
particle-size: 155
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 71
particle-size: 71
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 142
particle-size: 142
particle-size: 142
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 91
particle-size: 91
statement: this'.data = this'.data[1..this'.size()]
particle-size: 91
particle-size: 91
statement: return this'.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 135
particle-size: 135
statement: r := this'.front()
particle-size: 135
particle-size: 135
statement: return this'.data[0]
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.popFront()
particle-size: 135
particle-size: 135
statement: this'.data = this'.data[1..this'.size()]
particle-size: 135
particle-size: 135
statement: return this'.data.length
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return r
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.data = this'.data ~ [x]
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 226
particle-size: 226
particle-size: 226
particle-size: 226
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1508
particle-size: 1508
statement: return this'.data.length
particle-size: 1508
particle-size: 1508
particle-size: 1508
particle-size: 1508
statement: this'.__S3.__run()
particle-size: 198
particle-size: 198
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 198
particle-size: 198
statement: r := this'.front()
particle-size: 198
particle-size: 198
statement: return this'.data[0]
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
statement: this'.popFront()
particle-size: 198
particle-size: 198
statement: this'.data = this'.data[1..this'.size()]
particle-size: 198
particle-size: 198
statement: return this'.data.length
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
statement: return ()
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
statement: return r
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
statement: this'.data = this'.data ~ [x]
particle-size: 198
statement: return ()
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
statement: return ()
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
statement: return ()
particle-size: 2328
particle-size: 2328
particle-size: 2328
particle-size: 745
repetition: 16
statement: __d.__step()
particle-size: 745
particle-size: 745
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: (action,node) := this'.scheduler()
particle-size: 745
particle-size: 745
statement: actions := ([]: (R × R)[])
particle-size: 745
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 745
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(0,i)]
particle-size: 634
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(1,i)]
particle-size: 109
loop-index: 1
particle-size: 745
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(0,i)]
particle-size: 148
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
loop-index: 2
particle-size: 745
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(0,i)]
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(1,i)]
particle-size: 276
loop-index: 3
particle-size: 745
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(0,i)]
particle-size: 180
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(1,i)]
particle-size: 154
loop-index: 4
particle-size: 745
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(0,i)]
particle-size: 180
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(1,i)]
particle-size: 120
loop-index: 5
particle-size: 745
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(0,i)]
particle-size: 251
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
statement: actions ~= [(1,i)]
particle-size: 180
statement: this'.num_actions += 1
particle-size: 745
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 745
particle-size: 745
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2371
particle-size: 2371
particle-size: 2371
particle-size: 2371
particle-size: 2371
particle-size: 2371
particle-size: 2371
particle-size: 2371
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 839
particle-size: 839
statement: return this'.data.length
particle-size: 839
particle-size: 839
particle-size: 839
particle-size: 839
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 109
particle-size: 109
statement: r := this'.front()
particle-size: 109
particle-size: 109
statement: return this'.data[0]
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.popFront()
particle-size: 109
particle-size: 109
statement: this'.data = this'.data[1..this'.size()]
particle-size: 109
particle-size: 109
statement: return this'.data.length
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: return r
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 109
particle-size: 109
particle-size: 109
statement: this'.data = this'.data ~ [x]
particle-size: 109
statement: return ()
particle-size: 109
particle-size: 109
particle-size: 109
particle-size: 109
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 839
particle-size: 839
statement: return this'.data.length
particle-size: 839
particle-size: 839
particle-size: 839
particle-size: 839
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 839
particle-size: 839
statement: return this'.data.length
particle-size: 839
particle-size: 839
particle-size: 839
particle-size: 839
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 276
particle-size: 276
statement: r := this'.front()
particle-size: 276
particle-size: 276
statement: return this'.data[0]
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: this'.popFront()
particle-size: 276
particle-size: 276
statement: this'.data = this'.data[1..this'.size()]
particle-size: 276
particle-size: 276
statement: return this'.data.length
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: return ()
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: return r
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
particle-size: 276
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.data = this'.data ~ [x]
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 139
particle-size: 139
particle-size: 139
statement: this'.data = this'.data ~ [x]
particle-size: 139
statement: return ()
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 839
particle-size: 839
statement: return this'.data.length
particle-size: 839
particle-size: 839
particle-size: 839
particle-size: 839
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 154
particle-size: 154
statement: r := this'.front()
particle-size: 154
particle-size: 154
statement: return this'.data[0]
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.popFront()
particle-size: 154
particle-size: 154
statement: this'.data = this'.data[1..this'.size()]
particle-size: 154
particle-size: 154
statement: return this'.data.length
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: return r
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 154
particle-size: 154
particle-size: 154
statement: this'.data = this'.data ~ [x]
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 154
particle-size: 154
particle-size: 154
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 839
particle-size: 839
statement: return this'.data.length
particle-size: 839
particle-size: 839
particle-size: 839
particle-size: 839
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 120
particle-size: 120
statement: r := this'.front()
particle-size: 120
particle-size: 120
statement: return this'.data[0]
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.popFront()
particle-size: 120
particle-size: 120
statement: this'.data = this'.data[1..this'.size()]
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return r
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.data = this'.data ~ [x]
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 839
particle-size: 839
statement: return this'.data.length
particle-size: 839
particle-size: 839
particle-size: 839
particle-size: 839
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 180
particle-size: 180
statement: r := this'.front()
particle-size: 180
particle-size: 180
statement: return this'.data[0]
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.popFront()
particle-size: 180
particle-size: 180
statement: this'.data = this'.data[1..this'.size()]
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return r
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.data = this'.data ~ [x]
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1532
particle-size: 1532
statement: return this'.data.length
particle-size: 1532
particle-size: 1532
particle-size: 1532
particle-size: 1532
statement: this'.__H0.__run()
particle-size: 634
particle-size: 634
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 634
particle-size: 634
statement: this.id = 0
particle-size: 634
statement: return this
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: this'.data = [x] ~ this'.data
particle-size: 634
statement: return ()
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: this.id = 0
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = [x] ~ this'.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 9
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 625
particle-size: 625
statement: this'.data = this'.data[1..this'.size()]
particle-size: 625
particle-size: 625
statement: return this'.data.length
particle-size: 625
particle-size: 625
particle-size: 625
particle-size: 625
particle-size: 625
statement: return ()
particle-size: 625
particle-size: 625
particle-size: 625
particle-size: 625
statement: this'.Q_in.popFront()
particle-size: 625
particle-size: 625
statement: this'.data = this'.data[1..this'.size()]
particle-size: 625
particle-size: 625
statement: return this'.data.length
particle-size: 625
particle-size: 625
particle-size: 625
particle-size: 625
particle-size: 625
statement: return ()
particle-size: 625
particle-size: 625
particle-size: 625
particle-size: 625
statement: return ()
particle-size: 634
particle-size: 634
particle-size: 634
particle-size: 634
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1532
particle-size: 1532
statement: return this'.data.length
particle-size: 1532
particle-size: 1532
particle-size: 1532
particle-size: 1532
statement: this'.__H1.__run()
particle-size: 148
particle-size: 148
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 148
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: this'.Q_in.popFront()
particle-size: 116
particle-size: 116
statement: this'.data = this'.data[1..this'.size()]
particle-size: 116
particle-size: 116
statement: return this'.data.length
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: return ()
particle-size: 116
particle-size: 116
particle-size: 116
particle-size: 116
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1500
particle-size: 1500
statement: return this'.data.length
particle-size: 1500
particle-size: 1500
particle-size: 1500
particle-size: 1500
statement: this'.__S0.__run()
particle-size: 139
particle-size: 139
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 96
particle-size: 96
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 192
particle-size: 192
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 96
particle-size: 96
statement: r := this'.front()
particle-size: 96
particle-size: 96
statement: return this'.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.popFront()
particle-size: 96
particle-size: 96
statement: this'.data = this'.data[1..this'.size()]
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.data = this'.data ~ [x]
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 96
particle-size: 96
statement: r := this'.front()
particle-size: 96
particle-size: 96
statement: return this'.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.popFront()
particle-size: 96
particle-size: 96
statement: this'.data = this'.data[1..this'.size()]
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.data = this'.data ~ [x]
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 43
particle-size: 43
statement: r := this'.front()
particle-size: 43
particle-size: 43
statement: return this'.data[0]
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.popFront()
particle-size: 43
particle-size: 43
statement: this'.data = this'.data[1..this'.size()]
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return r
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.data = this'.data ~ [x]
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 235
particle-size: 235
particle-size: 235
particle-size: 235
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1596
particle-size: 1596
statement: return this'.data.length
particle-size: 1596
particle-size: 1596
particle-size: 1596
particle-size: 1596
statement: this'.__S1.__run()
particle-size: 180
particle-size: 180
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 180
particle-size: 180
statement: r := this'.front()
particle-size: 180
particle-size: 180
statement: return this'.data[0]
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.popFront()
particle-size: 180
particle-size: 180
statement: this'.data = this'.data[1..this'.size()]
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return r
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.data = this'.data ~ [x]
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1596
particle-size: 1596
statement: return this'.data.length
particle-size: 1596
particle-size: 1596
particle-size: 1596
particle-size: 1596
statement: this'.__S2.__run()
particle-size: 180
particle-size: 180
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 74
particle-size: 74
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 148
particle-size: 148
particle-size: 148
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 95
particle-size: 95
statement: this'.data = this'.data[1..this'.size()]
particle-size: 95
particle-size: 95
statement: return this'.data.length
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return ()
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 159
particle-size: 159
statement: r := this'.front()
particle-size: 159
particle-size: 159
statement: return this'.data[0]
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: this'.popFront()
particle-size: 159
particle-size: 159
statement: this'.data = this'.data[1..this'.size()]
particle-size: 159
particle-size: 159
statement: return this'.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return r
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: this'.data = this'.data ~ [x]
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return ()
particle-size: 254
particle-size: 254
particle-size: 254
particle-size: 254
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1670
particle-size: 1670
statement: return this'.data.length
particle-size: 1670
particle-size: 1670
particle-size: 1670
particle-size: 1670
statement: this'.__S3.__run()
particle-size: 251
particle-size: 251
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 251
particle-size: 251
statement: r := this'.front()
particle-size: 251
particle-size: 251
statement: return this'.data[0]
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
statement: this'.popFront()
particle-size: 251
particle-size: 251
statement: this'.data = this'.data[1..this'.size()]
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
statement: return ()
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
statement: return r
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
statement: this'.data = this'.data ~ [x]
particle-size: 251
statement: return ()
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
statement: return ()
particle-size: 251
particle-size: 251
particle-size: 251
particle-size: 251
statement: return ()
particle-size: 2509
particle-size: 2509
particle-size: 2509
particle-size: 784
repetition: 17
statement: __d.__step()
particle-size: 784
particle-size: 784
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
particle-size: 784
statement: (action,node) := this'.scheduler()
particle-size: 784
particle-size: 784
statement: actions := ([]: (R × R)[])
particle-size: 784
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 784
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(0,i)]
particle-size: 640
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(1,i)]
particle-size: 90
loop-index: 1
particle-size: 784
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(0,i)]
particle-size: 180
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
loop-index: 2
particle-size: 784
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(0,i)]
particle-size: 113
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(1,i)]
particle-size: 253
loop-index: 3
particle-size: 784
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(0,i)]
particle-size: 183
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(1,i)]
particle-size: 178
loop-index: 4
particle-size: 784
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(0,i)]
particle-size: 186
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(1,i)]
particle-size: 137
loop-index: 5
particle-size: 784
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(0,i)]
particle-size: 274
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 784
particle-size: 784
statement: return this'.data.length
particle-size: 784
particle-size: 784
particle-size: 784
statement: actions ~= [(1,i)]
particle-size: 221
statement: this'.num_actions += 1
particle-size: 784
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 784
particle-size: 784
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2455
particle-size: 2455
particle-size: 2455
particle-size: 2455
particle-size: 2455
particle-size: 2455
particle-size: 2455
particle-size: 2455
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 879
particle-size: 879
statement: return this'.data.length
particle-size: 879
particle-size: 879
particle-size: 879
particle-size: 879
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 90
particle-size: 90
statement: r := this'.front()
particle-size: 90
particle-size: 90
statement: return this'.data[0]
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.popFront()
particle-size: 90
particle-size: 90
statement: this'.data = this'.data[1..this'.size()]
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return r
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.data = this'.data ~ [x]
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 879
particle-size: 879
statement: return this'.data.length
particle-size: 879
particle-size: 879
particle-size: 879
particle-size: 879
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 879
particle-size: 879
statement: return this'.data.length
particle-size: 879
particle-size: 879
particle-size: 879
particle-size: 879
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 253
particle-size: 253
statement: r := this'.front()
particle-size: 253
particle-size: 253
statement: return this'.data[0]
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: this'.popFront()
particle-size: 253
particle-size: 253
statement: this'.data = this'.data[1..this'.size()]
particle-size: 253
particle-size: 253
statement: return this'.data.length
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: return ()
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: return r
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 126
particle-size: 126
particle-size: 126
statement: this'.data = this'.data ~ [x]
particle-size: 126
statement: return ()
particle-size: 126
particle-size: 126
particle-size: 126
particle-size: 126
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.data = this'.data ~ [x]
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 879
particle-size: 879
statement: return this'.data.length
particle-size: 879
particle-size: 879
particle-size: 879
particle-size: 879
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 178
particle-size: 178
statement: r := this'.front()
particle-size: 178
particle-size: 178
statement: return this'.data[0]
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: this'.popFront()
particle-size: 178
particle-size: 178
statement: this'.data = this'.data[1..this'.size()]
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return ()
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return r
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 178
particle-size: 178
particle-size: 178
statement: this'.data = this'.data ~ [x]
particle-size: 178
statement: return ()
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 879
particle-size: 879
statement: return this'.data.length
particle-size: 879
particle-size: 879
particle-size: 879
particle-size: 879
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 137
particle-size: 137
statement: r := this'.front()
particle-size: 137
particle-size: 137
statement: return this'.data[0]
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.popFront()
particle-size: 137
particle-size: 137
statement: this'.data = this'.data[1..this'.size()]
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return r
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.data = this'.data ~ [x]
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 879
particle-size: 879
statement: return this'.data.length
particle-size: 879
particle-size: 879
particle-size: 879
particle-size: 879
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 221
particle-size: 221
statement: r := this'.front()
particle-size: 221
particle-size: 221
statement: return this'.data[0]
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: this'.popFront()
particle-size: 221
particle-size: 221
statement: this'.data = this'.data[1..this'.size()]
particle-size: 221
particle-size: 221
statement: return this'.data.length
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return ()
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: return r
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 221
particle-size: 221
particle-size: 221
statement: this'.data = this'.data ~ [x]
particle-size: 221
statement: return ()
particle-size: 221
particle-size: 221
particle-size: 221
particle-size: 221
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1576
particle-size: 1576
statement: return this'.data.length
particle-size: 1576
particle-size: 1576
particle-size: 1576
particle-size: 1576
statement: this'.__H0.__run()
particle-size: 640
particle-size: 640
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 640
particle-size: 640
statement: this.id = 0
particle-size: 640
statement: return this
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: this'.data = [x] ~ this'.data
particle-size: 640
statement: return ()
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 4
particle-size: 4
statement: this.id = 0
particle-size: 4
statement: return this
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = [x] ~ this'.data
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 4
statement: this'.Q_in.data[0][0].id = this'.pkt_count
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.Q_in.popFront()
particle-size: 636
particle-size: 636
statement: this'.data = this'.data[1..this'.size()]
particle-size: 636
particle-size: 636
statement: return this'.data.length
particle-size: 636
particle-size: 636
particle-size: 636
particle-size: 636
particle-size: 636
statement: return ()
particle-size: 636
particle-size: 636
particle-size: 636
particle-size: 636
statement: this'.Q_in.popFront()
particle-size: 636
particle-size: 636
statement: this'.data = this'.data[1..this'.size()]
particle-size: 636
particle-size: 636
statement: return this'.data.length
particle-size: 636
particle-size: 636
particle-size: 636
particle-size: 636
particle-size: 636
statement: return ()
particle-size: 636
particle-size: 636
particle-size: 636
particle-size: 636
statement: return ()
particle-size: 640
particle-size: 640
particle-size: 640
particle-size: 640
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1576
particle-size: 1576
statement: return this'.data.length
particle-size: 1576
particle-size: 1576
particle-size: 1576
particle-size: 1576
statement: this'.__H1.__run()
particle-size: 180
particle-size: 180
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 180
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: this'.Q_in.popFront()
particle-size: 128
particle-size: 128
statement: this'.data = this'.data[1..this'.size()]
particle-size: 128
particle-size: 128
statement: return this'.data.length
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: return ()
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: return ()
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1524
particle-size: 1524
statement: return this'.data.length
particle-size: 1524
particle-size: 1524
particle-size: 1524
particle-size: 1524
statement: this'.__S0.__run()
particle-size: 113
particle-size: 113
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 79
particle-size: 79
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 158
particle-size: 158
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 79
particle-size: 79
statement: r := this'.front()
particle-size: 79
particle-size: 79
statement: return this'.data[0]
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.popFront()
particle-size: 79
particle-size: 79
statement: this'.data = this'.data[1..this'.size()]
particle-size: 79
particle-size: 79
statement: return this'.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: return r
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.data = this'.data ~ [x]
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 79
particle-size: 79
statement: r := this'.front()
particle-size: 79
particle-size: 79
statement: return this'.data[0]
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.popFront()
particle-size: 79
particle-size: 79
statement: this'.data = this'.data[1..this'.size()]
particle-size: 79
particle-size: 79
statement: return this'.data.length
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: return r
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.data = this'.data ~ [x]
particle-size: 79
statement: return ()
particle-size: 79
particle-size: 79
particle-size: 79
particle-size: 79
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 192
particle-size: 192
particle-size: 192
particle-size: 192
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1603
particle-size: 1603
statement: return this'.data.length
particle-size: 1603
particle-size: 1603
particle-size: 1603
particle-size: 1603
statement: this'.__S1.__run()
particle-size: 183
particle-size: 183
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 183
particle-size: 183
statement: r := this'.front()
particle-size: 183
particle-size: 183
statement: return this'.data[0]
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: this'.popFront()
particle-size: 183
particle-size: 183
statement: this'.data = this'.data[1..this'.size()]
particle-size: 183
particle-size: 183
statement: return this'.data.length
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: return ()
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: return r
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: this'.data = this'.data ~ [x]
particle-size: 183
statement: return ()
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: return ()
particle-size: 183
particle-size: 183
particle-size: 183
particle-size: 183
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1603
particle-size: 1603
statement: return this'.data.length
particle-size: 1603
particle-size: 1603
particle-size: 1603
particle-size: 1603
statement: this'.__S2.__run()
particle-size: 186
particle-size: 186
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 67
particle-size: 67
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 134
particle-size: 134
particle-size: 134
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 88
particle-size: 88
statement: this'.data = this'.data[1..this'.size()]
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return ()
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 165
particle-size: 165
statement: r := this'.front()
particle-size: 165
particle-size: 165
statement: return this'.data[0]
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: this'.popFront()
particle-size: 165
particle-size: 165
statement: this'.data = this'.data[1..this'.size()]
particle-size: 165
particle-size: 165
statement: return this'.data.length
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: return ()
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: return r
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: this'.data = this'.data ~ [x]
particle-size: 165
statement: return ()
particle-size: 165
particle-size: 165
particle-size: 165
particle-size: 165
statement: return ()
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1670
particle-size: 1670
statement: return this'.data.length
particle-size: 1670
particle-size: 1670
particle-size: 1670
particle-size: 1670
statement: this'.__S3.__run()
particle-size: 274
particle-size: 274
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 274
particle-size: 274
statement: r := this'.front()
particle-size: 274
particle-size: 274
statement: return this'.data[0]
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: this'.popFront()
particle-size: 274
particle-size: 274
statement: this'.data = this'.data[1..this'.size()]
particle-size: 274
particle-size: 274
statement: return this'.data.length
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return r
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: this'.data = this'.data ~ [x]
particle-size: 274
statement: return ()
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 2549
particle-size: 2549
particle-size: 2549
particle-size: 778
repetition: 18
statement: __d.__step()
particle-size: 778
particle-size: 778
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (action,node) := this'.scheduler()
particle-size: 778
particle-size: 778
statement: actions := ([]: (R × R)[])
particle-size: 778
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 778
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(0,i)]
particle-size: 626
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(1,i)]
particle-size: 63
loop-index: 1
particle-size: 778
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(0,i)]
particle-size: 221
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
loop-index: 2
particle-size: 778
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(0,i)]
particle-size: 90
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(1,i)]
particle-size: 206
loop-index: 3
particle-size: 778
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(0,i)]
particle-size: 172
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(1,i)]
particle-size: 179
loop-index: 4
particle-size: 778
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(0,i)]
particle-size: 176
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(1,i)]
particle-size: 135
loop-index: 5
particle-size: 778
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(0,i)]
particle-size: 311
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
statement: actions ~= [(1,i)]
particle-size: 231
statement: this'.num_actions += 1
particle-size: 778
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 778
particle-size: 778
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2410
particle-size: 2410
particle-size: 2410
particle-size: 2410
particle-size: 2410
particle-size: 2410
particle-size: 2410
particle-size: 2410
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 814
particle-size: 814
statement: return this'.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 63
particle-size: 63
statement: r := this'.front()
particle-size: 63
particle-size: 63
statement: return this'.data[0]
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.popFront()
particle-size: 63
particle-size: 63
statement: this'.data = this'.data[1..this'.size()]
particle-size: 63
particle-size: 63
statement: return this'.data.length
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: return r
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 63
particle-size: 63
particle-size: 63
statement: this'.data = this'.data ~ [x]
particle-size: 63
statement: return ()
particle-size: 63
particle-size: 63
particle-size: 63
particle-size: 63
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 814
particle-size: 814
statement: return this'.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 814
particle-size: 814
statement: return this'.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 206
particle-size: 206
statement: r := this'.front()
particle-size: 206
particle-size: 206
statement: return this'.data[0]
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: this'.popFront()
particle-size: 206
particle-size: 206
statement: this'.data = this'.data[1..this'.size()]
particle-size: 206
particle-size: 206
statement: return this'.data.length
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: return ()
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: return r
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
particle-size: 206
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 814
particle-size: 814
statement: return this'.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 179
particle-size: 179
statement: r := this'.front()
particle-size: 179
particle-size: 179
statement: return this'.data[0]
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: this'.popFront()
particle-size: 179
particle-size: 179
statement: this'.data = this'.data[1..this'.size()]
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: return ()
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: return r
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 179
particle-size: 179
particle-size: 179
statement: this'.data = this'.data ~ [x]
particle-size: 179
statement: return ()
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 814
particle-size: 814
statement: return this'.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 135
particle-size: 135
statement: r := this'.front()
particle-size: 135
particle-size: 135
statement: return this'.data[0]
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.popFront()
particle-size: 135
particle-size: 135
statement: this'.data = this'.data[1..this'.size()]
particle-size: 135
particle-size: 135
statement: return this'.data.length
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: return r
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 135
particle-size: 135
particle-size: 135
statement: this'.data = this'.data ~ [x]
particle-size: 135
statement: return ()
particle-size: 135
particle-size: 135
particle-size: 135
particle-size: 135
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 814
particle-size: 814
statement: return this'.data.length
particle-size: 814
particle-size: 814
particle-size: 814
particle-size: 814
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 231
particle-size: 231
statement: r := this'.front()
particle-size: 231
particle-size: 231
statement: return this'.data[0]
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: this'.popFront()
particle-size: 231
particle-size: 231
statement: this'.data = this'.data[1..this'.size()]
particle-size: 231
particle-size: 231
statement: return this'.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: return r
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 231
particle-size: 231
particle-size: 231
statement: this'.data = this'.data ~ [x]
particle-size: 231
statement: return ()
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1596
particle-size: 1596
statement: return this'.data.length
particle-size: 1596
particle-size: 1596
particle-size: 1596
particle-size: 1596
statement: this'.__H0.__run()
particle-size: 626
particle-size: 626
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 626
particle-size: 626
statement: this.id = 0
particle-size: 626
statement: return this
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
statement: this'.data = [x] ~ this'.data
particle-size: 626
statement: return ()
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 626
particle-size: 626
statement: this'.data = this'.data[1..this'.size()]
particle-size: 626
particle-size: 626
statement: return this'.data.length
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
statement: return ()
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
statement: this'.Q_in.popFront()
particle-size: 626
particle-size: 626
statement: this'.data = this'.data[1..this'.size()]
particle-size: 626
particle-size: 626
statement: return this'.data.length
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
statement: return ()
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
statement: return ()
particle-size: 626
particle-size: 626
particle-size: 626
particle-size: 626
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1596
particle-size: 1596
statement: return this'.data.length
particle-size: 1596
particle-size: 1596
particle-size: 1596
particle-size: 1596
statement: this'.__H1.__run()
particle-size: 221
particle-size: 221
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 221
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: this'.Q_in.popFront()
particle-size: 151
particle-size: 151
statement: this'.data = this'.data[1..this'.size()]
particle-size: 151
particle-size: 151
statement: return this'.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return ()
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return ()
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1526
particle-size: 1526
statement: return this'.data.length
particle-size: 1526
particle-size: 1526
particle-size: 1526
particle-size: 1526
statement: this'.__S0.__run()
particle-size: 90
particle-size: 90
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 62
particle-size: 62
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 124
particle-size: 124
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.data = this'.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.data = this'.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 28
particle-size: 28
statement: r := this'.front()
particle-size: 28
particle-size: 28
statement: return this'.data[0]
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.popFront()
particle-size: 28
particle-size: 28
statement: this'.data = this'.data[1..this'.size()]
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return r
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 152
particle-size: 152
particle-size: 152
particle-size: 152
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1588
particle-size: 1588
statement: return this'.data.length
particle-size: 1588
particle-size: 1588
particle-size: 1588
particle-size: 1588
statement: this'.__S1.__run()
particle-size: 172
particle-size: 172
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 172
particle-size: 172
statement: r := this'.front()
particle-size: 172
particle-size: 172
statement: return this'.data[0]
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: this'.popFront()
particle-size: 172
particle-size: 172
statement: this'.data = this'.data[1..this'.size()]
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: return ()
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: return r
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: this'.data = this'.data ~ [x]
particle-size: 172
statement: return ()
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: return ()
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1588
particle-size: 1588
statement: return this'.data.length
particle-size: 1588
particle-size: 1588
particle-size: 1588
particle-size: 1588
statement: this'.__S2.__run()
particle-size: 176
particle-size: 176
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 61
particle-size: 61
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 122
particle-size: 122
particle-size: 122
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 76
particle-size: 76
statement: this'.data = this'.data[1..this'.size()]
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 161
particle-size: 161
statement: r := this'.front()
particle-size: 161
particle-size: 161
statement: return this'.data[0]
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: this'.popFront()
particle-size: 161
particle-size: 161
statement: this'.data = this'.data[1..this'.size()]
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return r
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: this'.data = this'.data ~ [x]
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: return ()
particle-size: 237
particle-size: 237
particle-size: 237
particle-size: 237
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1649
particle-size: 1649
statement: return this'.data.length
particle-size: 1649
particle-size: 1649
particle-size: 1649
particle-size: 1649
statement: this'.__S3.__run()
particle-size: 311
particle-size: 311
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 311
particle-size: 311
statement: r := this'.front()
particle-size: 311
particle-size: 311
statement: return this'.data[0]
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: this'.popFront()
particle-size: 311
particle-size: 311
statement: this'.data = this'.data[1..this'.size()]
particle-size: 311
particle-size: 311
statement: return this'.data.length
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: return ()
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: return r
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: this'.data = this'.data ~ [x]
particle-size: 311
statement: return ()
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: return ()
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: return ()
particle-size: 2463
particle-size: 2463
particle-size: 2463
particle-size: 754
repetition: 19
statement: __d.__step()
particle-size: 754
particle-size: 754
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: return this'.data.length
particle-size: 754
particle-size: 754
particle-size: 754
particle-size: 754
statement: (action,node) := this'.scheduler()
particle-size: 752
particle-size: 752
statement: actions := ([]: (R × R)[])
particle-size: 752
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 752
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(0,i)]
particle-size: 584
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(1,i)]
particle-size: 41
loop-index: 1
particle-size: 752
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(0,i)]
particle-size: 231
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
loop-index: 2
particle-size: 752
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(0,i)]
particle-size: 63
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(1,i)]
particle-size: 162
loop-index: 3
particle-size: 752
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(0,i)]
particle-size: 143
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(1,i)]
particle-size: 172
loop-index: 4
particle-size: 752
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(0,i)]
particle-size: 150
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(1,i)]
particle-size: 131
loop-index: 5
particle-size: 752
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(0,i)]
particle-size: 323
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 752
particle-size: 752
statement: return this'.data.length
particle-size: 752
particle-size: 752
particle-size: 752
statement: actions ~= [(1,i)]
particle-size: 272
statement: this'.num_actions += 1
particle-size: 752
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 752
particle-size: 752
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2272
particle-size: 2272
particle-size: 2272
particle-size: 2272
particle-size: 2272
particle-size: 2272
particle-size: 2272
particle-size: 2272
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 162
particle-size: 162
statement: r := this'.front()
particle-size: 162
particle-size: 162
statement: return this'.data[0]
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: this'.popFront()
particle-size: 162
particle-size: 162
statement: this'.data = this'.data[1..this'.size()]
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return r
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.data = this'.data ~ [x]
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.data = this'.data ~ [x]
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 172
particle-size: 172
statement: r := this'.front()
particle-size: 172
particle-size: 172
statement: return this'.data[0]
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: this'.popFront()
particle-size: 172
particle-size: 172
statement: this'.data = this'.data[1..this'.size()]
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: return ()
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: return r
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 172
particle-size: 172
particle-size: 172
statement: this'.data = this'.data ~ [x]
particle-size: 172
statement: return ()
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 131
particle-size: 131
statement: r := this'.front()
particle-size: 131
particle-size: 131
statement: return this'.data[0]
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: this'.popFront()
particle-size: 131
particle-size: 131
statement: this'.data = this'.data[1..this'.size()]
particle-size: 131
particle-size: 131
statement: return this'.data.length
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: return r
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 131
particle-size: 131
particle-size: 131
statement: this'.data = this'.data ~ [x]
particle-size: 131
statement: return ()
particle-size: 131
particle-size: 131
particle-size: 131
particle-size: 131
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 272
particle-size: 272
statement: r := this'.front()
particle-size: 272
particle-size: 272
statement: return this'.data[0]
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: this'.popFront()
particle-size: 272
particle-size: 272
statement: this'.data = this'.data[1..this'.size()]
particle-size: 272
particle-size: 272
statement: return this'.data.length
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return ()
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: return r
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 272
particle-size: 272
particle-size: 272
statement: this'.data = this'.data ~ [x]
particle-size: 272
statement: return ()
particle-size: 272
particle-size: 272
particle-size: 272
particle-size: 272
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: this'.__H0.__run()
particle-size: 584
particle-size: 584
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 584
particle-size: 584
statement: this.id = 0
particle-size: 584
statement: return this
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: this'.data = [x] ~ this'.data
particle-size: 584
statement: return ()
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 584
particle-size: 584
statement: this'.data = this'.data[1..this'.size()]
particle-size: 584
particle-size: 584
statement: return this'.data.length
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: return ()
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: this'.Q_in.popFront()
particle-size: 584
particle-size: 584
statement: this'.data = this'.data[1..this'.size()]
particle-size: 584
particle-size: 584
statement: return this'.data.length
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: return ()
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: return ()
particle-size: 584
particle-size: 584
particle-size: 584
particle-size: 584
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1494
particle-size: 1494
statement: return this'.data.length
particle-size: 1494
particle-size: 1494
particle-size: 1494
particle-size: 1494
statement: this'.__H1.__run()
particle-size: 231
particle-size: 231
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 231
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: this'.Q_in.popFront()
particle-size: 145
particle-size: 145
statement: this'.data = this'.data[1..this'.size()]
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1408
particle-size: 1408
statement: return this'.data.length
particle-size: 1408
particle-size: 1408
particle-size: 1408
particle-size: 1408
statement: this'.__S0.__run()
particle-size: 63
particle-size: 63
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 41
particle-size: 41
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 82
particle-size: 82
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 22
particle-size: 22
statement: r := this'.front()
particle-size: 22
particle-size: 22
statement: return this'.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.data = this'.data ~ [x]
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1449
particle-size: 1449
statement: return this'.data.length
particle-size: 1449
particle-size: 1449
particle-size: 1449
particle-size: 1449
statement: this'.__S1.__run()
particle-size: 143
particle-size: 143
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 143
particle-size: 143
statement: r := this'.front()
particle-size: 143
particle-size: 143
statement: return this'.data[0]
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this'.popFront()
particle-size: 143
particle-size: 143
statement: this'.data = this'.data[1..this'.size()]
particle-size: 143
particle-size: 143
statement: return this'.data.length
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: return ()
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: return r
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this'.data = this'.data ~ [x]
particle-size: 143
statement: return ()
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: return ()
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1449
particle-size: 1449
statement: return this'.data.length
particle-size: 1449
particle-size: 1449
particle-size: 1449
particle-size: 1449
statement: this'.__S2.__run()
particle-size: 150
particle-size: 150
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 50
particle-size: 50
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 100
particle-size: 100
particle-size: 100
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 60
particle-size: 60
statement: this'.data = this'.data[1..this'.size()]
particle-size: 60
particle-size: 60
statement: return this'.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 140
particle-size: 140
statement: r := this'.front()
particle-size: 140
particle-size: 140
statement: return this'.data[0]
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: this'.popFront()
particle-size: 140
particle-size: 140
statement: this'.data = this'.data[1..this'.size()]
particle-size: 140
particle-size: 140
statement: return this'.data.length
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: return ()
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: return r
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: this'.data = this'.data ~ [x]
particle-size: 140
statement: return ()
particle-size: 140
particle-size: 140
particle-size: 140
particle-size: 140
statement: return ()
particle-size: 200
particle-size: 200
particle-size: 200
particle-size: 200
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1499
particle-size: 1499
statement: return this'.data.length
particle-size: 1499
particle-size: 1499
particle-size: 1499
particle-size: 1499
statement: this'.__S3.__run()
particle-size: 323
particle-size: 323
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 323
particle-size: 323
statement: r := this'.front()
particle-size: 323
particle-size: 323
statement: return this'.data[0]
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
statement: this'.popFront()
particle-size: 323
particle-size: 323
statement: this'.data = this'.data[1..this'.size()]
particle-size: 323
particle-size: 323
statement: return this'.data.length
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
statement: return ()
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
statement: return r
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
statement: this'.data = this'.data ~ [x]
particle-size: 323
statement: return ()
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
statement: return ()
particle-size: 323
particle-size: 323
particle-size: 323
particle-size: 323
statement: return ()
particle-size: 2279
particle-size: 2279
particle-size: 2279
particle-size: 690
repetition: 20
statement: __d.__step()
particle-size: 690
particle-size: 690
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: return this'.data.length
particle-size: 690
particle-size: 690
particle-size: 690
particle-size: 690
statement: (action,node) := this'.scheduler()
particle-size: 688
particle-size: 688
statement: actions := ([]: (R × R)[])
particle-size: 688
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 688
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(0,i)]
particle-size: 529
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(1,i)]
particle-size: 23
loop-index: 1
particle-size: 688
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(0,i)]
particle-size: 272
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
loop-index: 2
particle-size: 688
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(0,i)]
particle-size: 41
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(1,i)]
particle-size: 104
loop-index: 3
particle-size: 688
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(0,i)]
particle-size: 117
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(1,i)]
particle-size: 145
loop-index: 4
particle-size: 688
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(0,i)]
particle-size: 126
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(1,i)]
particle-size: 112
loop-index: 5
particle-size: 688
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(0,i)]
particle-size: 325
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 688
particle-size: 688
statement: return this'.data.length
particle-size: 688
particle-size: 688
particle-size: 688
statement: actions ~= [(1,i)]
particle-size: 262
statement: this'.num_actions += 1
particle-size: 688
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 688
particle-size: 688
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2056
particle-size: 2056
particle-size: 2056
particle-size: 2056
particle-size: 2056
particle-size: 2056
particle-size: 2056
particle-size: 2056
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 646
particle-size: 646
statement: return this'.data.length
particle-size: 646
particle-size: 646
particle-size: 646
particle-size: 646
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 23
particle-size: 23
statement: r := this'.front()
particle-size: 23
particle-size: 23
statement: return this'.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.popFront()
particle-size: 23
particle-size: 23
statement: this'.data = this'.data[1..this'.size()]
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 646
particle-size: 646
statement: return this'.data.length
particle-size: 646
particle-size: 646
particle-size: 646
particle-size: 646
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 646
particle-size: 646
statement: return this'.data.length
particle-size: 646
particle-size: 646
particle-size: 646
particle-size: 646
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 104
particle-size: 104
statement: r := this'.front()
particle-size: 104
particle-size: 104
statement: return this'.data[0]
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: this'.popFront()
particle-size: 104
particle-size: 104
statement: this'.data = this'.data[1..this'.size()]
particle-size: 104
particle-size: 104
statement: return this'.data.length
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: return r
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
particle-size: 104
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.data = this'.data ~ [x]
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.data = this'.data ~ [x]
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 646
particle-size: 646
statement: return this'.data.length
particle-size: 646
particle-size: 646
particle-size: 646
particle-size: 646
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 145
particle-size: 145
statement: r := this'.front()
particle-size: 145
particle-size: 145
statement: return this'.data[0]
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.popFront()
particle-size: 145
particle-size: 145
statement: this'.data = this'.data[1..this'.size()]
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return r
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.data = this'.data ~ [x]
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 646
particle-size: 646
statement: return this'.data.length
particle-size: 646
particle-size: 646
particle-size: 646
particle-size: 646
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 112
particle-size: 112
statement: r := this'.front()
particle-size: 112
particle-size: 112
statement: return this'.data[0]
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.popFront()
particle-size: 112
particle-size: 112
statement: this'.data = this'.data[1..this'.size()]
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return r
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.data = this'.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 646
particle-size: 646
statement: return this'.data.length
particle-size: 646
particle-size: 646
particle-size: 646
particle-size: 646
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 262
particle-size: 262
statement: r := this'.front()
particle-size: 262
particle-size: 262
statement: return this'.data[0]
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: this'.popFront()
particle-size: 262
particle-size: 262
statement: this'.data = this'.data[1..this'.size()]
particle-size: 262
particle-size: 262
statement: return this'.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: return ()
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: return r
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 262
particle-size: 262
particle-size: 262
statement: this'.data = this'.data ~ [x]
particle-size: 262
statement: return ()
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1410
particle-size: 1410
statement: return this'.data.length
particle-size: 1410
particle-size: 1410
particle-size: 1410
particle-size: 1410
statement: this'.__H0.__run()
particle-size: 529
particle-size: 529
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 529
particle-size: 529
statement: this.id = 0
particle-size: 529
statement: return this
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: this'.data = [x] ~ this'.data
particle-size: 529
statement: return ()
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 529
particle-size: 529
statement: this'.data = this'.data[1..this'.size()]
particle-size: 529
particle-size: 529
statement: return this'.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return ()
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: this'.Q_in.popFront()
particle-size: 529
particle-size: 529
statement: this'.data = this'.data[1..this'.size()]
particle-size: 529
particle-size: 529
statement: return this'.data.length
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return ()
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: return ()
particle-size: 529
particle-size: 529
particle-size: 529
particle-size: 529
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1410
particle-size: 1410
statement: return this'.data.length
particle-size: 1410
particle-size: 1410
particle-size: 1410
particle-size: 1410
statement: this'.__H1.__run()
particle-size: 272
particle-size: 272
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 272
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: this'.Q_in.popFront()
particle-size: 160
particle-size: 160
statement: this'.data = this'.data[1..this'.size()]
particle-size: 160
particle-size: 160
statement: return this'.data.length
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: return ()
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: return ()
particle-size: 160
particle-size: 160
particle-size: 160
particle-size: 160
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1298
particle-size: 1298
statement: return this'.data.length
particle-size: 1298
particle-size: 1298
particle-size: 1298
particle-size: 1298
statement: this'.__S0.__run()
particle-size: 41
particle-size: 41
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 25
particle-size: 25
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 50
particle-size: 50
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1323
particle-size: 1323
statement: return this'.data.length
particle-size: 1323
particle-size: 1323
particle-size: 1323
particle-size: 1323
statement: this'.__S1.__run()
particle-size: 117
particle-size: 117
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 117
particle-size: 117
statement: r := this'.front()
particle-size: 117
particle-size: 117
statement: return this'.data[0]
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this'.popFront()
particle-size: 117
particle-size: 117
statement: this'.data = this'.data[1..this'.size()]
particle-size: 117
particle-size: 117
statement: return this'.data.length
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return r
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: this'.data = this'.data ~ [x]
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: return ()
particle-size: 117
particle-size: 117
particle-size: 117
particle-size: 117
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1323
particle-size: 1323
statement: return this'.data.length
particle-size: 1323
particle-size: 1323
particle-size: 1323
particle-size: 1323
statement: this'.__S2.__run()
particle-size: 126
particle-size: 126
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 41
particle-size: 41
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 48
particle-size: 48
statement: this'.data = this'.data[1..this'.size()]
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 119
particle-size: 119
statement: r := this'.front()
particle-size: 119
particle-size: 119
statement: return this'.data[0]
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return r
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.data = this'.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1364
particle-size: 1364
statement: return this'.data.length
particle-size: 1364
particle-size: 1364
particle-size: 1364
particle-size: 1364
statement: this'.__S3.__run()
particle-size: 325
particle-size: 325
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 325
particle-size: 325
statement: r := this'.front()
particle-size: 325
particle-size: 325
statement: return this'.data[0]
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: this'.popFront()
particle-size: 325
particle-size: 325
statement: this'.data = this'.data[1..this'.size()]
particle-size: 325
particle-size: 325
statement: return this'.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return ()
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return r
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: this'.data = this'.data ~ [x]
particle-size: 325
statement: return ()
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return ()
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return ()
particle-size: 2012
particle-size: 2012
particle-size: 2012
particle-size: 604
repetition: 21
statement: __d.__step()
particle-size: 604
particle-size: 604
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: return this'.data.length
particle-size: 604
particle-size: 604
particle-size: 604
particle-size: 604
statement: (action,node) := this'.scheduler()
particle-size: 602
particle-size: 602
statement: actions := ([]: (R × R)[])
particle-size: 602
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 602
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(0,i)]
particle-size: 447
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(1,i)]
particle-size: 13
loop-index: 1
particle-size: 602
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(0,i)]
particle-size: 262
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
loop-index: 2
particle-size: 602
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(0,i)]
particle-size: 23
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(1,i)]
particle-size: 66
loop-index: 3
particle-size: 602
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(0,i)]
particle-size: 80
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(1,i)]
particle-size: 119
loop-index: 4
particle-size: 602
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(0,i)]
particle-size: 89
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(1,i)]
particle-size: 93
loop-index: 5
particle-size: 602
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(0,i)]
particle-size: 284
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
statement: actions ~= [(1,i)]
particle-size: 245
statement: this'.num_actions += 1
particle-size: 602
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 602
particle-size: 602
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1721
particle-size: 1721
particle-size: 1721
particle-size: 1721
particle-size: 1721
particle-size: 1721
particle-size: 1721
particle-size: 1721
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 536
particle-size: 536
statement: return this'.data.length
particle-size: 536
particle-size: 536
particle-size: 536
particle-size: 536
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 536
particle-size: 536
statement: return this'.data.length
particle-size: 536
particle-size: 536
particle-size: 536
particle-size: 536
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 536
particle-size: 536
statement: return this'.data.length
particle-size: 536
particle-size: 536
particle-size: 536
particle-size: 536
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.data = this'.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.data = this'.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 536
particle-size: 536
statement: return this'.data.length
particle-size: 536
particle-size: 536
particle-size: 536
particle-size: 536
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 119
particle-size: 119
statement: r := this'.front()
particle-size: 119
particle-size: 119
statement: return this'.data[0]
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return r
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.data = this'.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 536
particle-size: 536
statement: return this'.data.length
particle-size: 536
particle-size: 536
particle-size: 536
particle-size: 536
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 93
particle-size: 93
statement: r := this'.front()
particle-size: 93
particle-size: 93
statement: return this'.data[0]
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.popFront()
particle-size: 93
particle-size: 93
statement: this'.data = this'.data[1..this'.size()]
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return r
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.data = this'.data ~ [x]
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 536
particle-size: 536
statement: return this'.data.length
particle-size: 536
particle-size: 536
particle-size: 536
particle-size: 536
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 245
particle-size: 245
statement: r := this'.front()
particle-size: 245
particle-size: 245
statement: return this'.data[0]
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
statement: this'.popFront()
particle-size: 245
particle-size: 245
statement: this'.data = this'.data[1..this'.size()]
particle-size: 245
particle-size: 245
statement: return this'.data.length
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
statement: return ()
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
statement: return r
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 245
particle-size: 245
particle-size: 245
statement: this'.data = this'.data ~ [x]
particle-size: 245
statement: return ()
particle-size: 245
particle-size: 245
particle-size: 245
particle-size: 245
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1185
particle-size: 1185
statement: return this'.data.length
particle-size: 1185
particle-size: 1185
particle-size: 1185
particle-size: 1185
statement: this'.__H0.__run()
particle-size: 447
particle-size: 447
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 447
particle-size: 447
statement: this.id = 0
particle-size: 447
statement: return this
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: this'.data = [x] ~ this'.data
particle-size: 447
statement: return ()
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 447
particle-size: 447
statement: this'.data = this'.data[1..this'.size()]
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: return ()
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: this'.Q_in.popFront()
particle-size: 447
particle-size: 447
statement: this'.data = this'.data[1..this'.size()]
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: return ()
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: return ()
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1185
particle-size: 1185
statement: return this'.data.length
particle-size: 1185
particle-size: 1185
particle-size: 1185
particle-size: 1185
statement: this'.__H1.__run()
particle-size: 262
particle-size: 262
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 262
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: this'.Q_in.popFront()
particle-size: 146
particle-size: 146
statement: this'.data = this'.data[1..this'.size()]
particle-size: 146
particle-size: 146
statement: return this'.data.length
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: return ()
particle-size: 146
particle-size: 146
particle-size: 146
particle-size: 146
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1069
particle-size: 1069
statement: return this'.data.length
particle-size: 1069
particle-size: 1069
particle-size: 1069
particle-size: 1069
statement: this'.__S0.__run()
particle-size: 23
particle-size: 23
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 13
particle-size: 13
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1082
particle-size: 1082
statement: return this'.data.length
particle-size: 1082
particle-size: 1082
particle-size: 1082
particle-size: 1082
statement: this'.__S1.__run()
particle-size: 80
particle-size: 80
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 80
particle-size: 80
statement: r := this'.front()
particle-size: 80
particle-size: 80
statement: return this'.data[0]
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.popFront()
particle-size: 80
particle-size: 80
statement: this'.data = this'.data[1..this'.size()]
particle-size: 80
particle-size: 80
statement: return this'.data.length
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return r
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: this'.data = this'.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1082
particle-size: 1082
statement: return this'.data.length
particle-size: 1082
particle-size: 1082
particle-size: 1082
particle-size: 1082
statement: this'.__S2.__run()
particle-size: 89
particle-size: 89
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 29
particle-size: 29
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 58
particle-size: 58
particle-size: 58
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 85
particle-size: 85
statement: r := this'.front()
particle-size: 85
particle-size: 85
statement: return this'.data[0]
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: this'.popFront()
particle-size: 85
particle-size: 85
statement: this'.data = this'.data[1..this'.size()]
particle-size: 85
particle-size: 85
statement: return this'.data.length
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return r
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: this'.data = this'.data ~ [x]
particle-size: 85
statement: return ()
particle-size: 85
particle-size: 85
particle-size: 85
particle-size: 85
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1111
particle-size: 1111
statement: return this'.data.length
particle-size: 1111
particle-size: 1111
particle-size: 1111
particle-size: 1111
statement: this'.__S3.__run()
particle-size: 284
particle-size: 284
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 284
particle-size: 284
statement: r := this'.front()
particle-size: 284
particle-size: 284
statement: return this'.data[0]
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
statement: this'.popFront()
particle-size: 284
particle-size: 284
statement: this'.data = this'.data[1..this'.size()]
particle-size: 284
particle-size: 284
statement: return this'.data.length
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
statement: return ()
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
statement: return r
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
statement: this'.data = this'.data ~ [x]
particle-size: 284
statement: return ()
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
statement: return ()
particle-size: 284
particle-size: 284
particle-size: 284
particle-size: 284
statement: return ()
particle-size: 1649
particle-size: 1649
particle-size: 1649
particle-size: 497
repetition: 22
statement: __d.__step()
particle-size: 497
particle-size: 497
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: (action,node) := this'.scheduler()
particle-size: 495
particle-size: 495
statement: actions := ([]: (R × R)[])
particle-size: 495
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 495
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(0,i)]
particle-size: 353
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 1
particle-size: 495
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(0,i)]
particle-size: 253
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
loop-index: 2
particle-size: 495
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(0,i)]
particle-size: 13
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(1,i)]
particle-size: 36
loop-index: 3
particle-size: 495
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(0,i)]
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(1,i)]
particle-size: 82
loop-index: 4
particle-size: 495
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(0,i)]
particle-size: 59
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(1,i)]
particle-size: 64
loop-index: 5
particle-size: 495
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(0,i)]
particle-size: 243
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 495
particle-size: 495
statement: return this'.data.length
particle-size: 495
particle-size: 495
particle-size: 495
statement: actions ~= [(1,i)]
particle-size: 209
statement: this'.num_actions += 1
particle-size: 495
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 495
particle-size: 495
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1367
particle-size: 1367
particle-size: 1367
particle-size: 1367
particle-size: 1367
particle-size: 1367
particle-size: 1367
particle-size: 1367
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 395
particle-size: 395
statement: return this'.data.length
particle-size: 395
particle-size: 395
particle-size: 395
particle-size: 395
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 395
particle-size: 395
statement: return this'.data.length
particle-size: 395
particle-size: 395
particle-size: 395
particle-size: 395
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 395
particle-size: 395
statement: return this'.data.length
particle-size: 395
particle-size: 395
particle-size: 395
particle-size: 395
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 36
particle-size: 36
statement: r := this'.front()
particle-size: 36
particle-size: 36
statement: return this'.data[0]
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: this'.popFront()
particle-size: 36
particle-size: 36
statement: this'.data = this'.data[1..this'.size()]
particle-size: 36
particle-size: 36
statement: return this'.data.length
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: return r
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
particle-size: 36
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 395
particle-size: 395
statement: return this'.data.length
particle-size: 395
particle-size: 395
particle-size: 395
particle-size: 395
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 82
particle-size: 82
statement: r := this'.front()
particle-size: 82
particle-size: 82
statement: return this'.data[0]
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return r
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.data = this'.data ~ [x]
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 395
particle-size: 395
statement: return this'.data.length
particle-size: 395
particle-size: 395
particle-size: 395
particle-size: 395
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 64
particle-size: 64
statement: r := this'.front()
particle-size: 64
particle-size: 64
statement: return this'.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.data = this'.data ~ [x]
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 395
particle-size: 395
statement: return this'.data.length
particle-size: 395
particle-size: 395
particle-size: 395
particle-size: 395
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 209
particle-size: 209
statement: r := this'.front()
particle-size: 209
particle-size: 209
statement: return this'.data[0]
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: this'.popFront()
particle-size: 209
particle-size: 209
statement: this'.data = this'.data[1..this'.size()]
particle-size: 209
particle-size: 209
statement: return this'.data.length
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: return ()
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: return r
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 209
particle-size: 209
particle-size: 209
statement: this'.data = this'.data ~ [x]
particle-size: 209
statement: return ()
particle-size: 209
particle-size: 209
particle-size: 209
particle-size: 209
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 972
particle-size: 972
statement: return this'.data.length
particle-size: 972
particle-size: 972
particle-size: 972
particle-size: 972
statement: this'.__H0.__run()
particle-size: 353
particle-size: 353
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 353
particle-size: 353
statement: this.id = 0
particle-size: 353
statement: return this
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
statement: this'.data = [x] ~ this'.data
particle-size: 353
statement: return ()
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 353
particle-size: 353
statement: this'.data = this'.data[1..this'.size()]
particle-size: 353
particle-size: 353
statement: return this'.data.length
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
statement: return ()
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
statement: this'.Q_in.popFront()
particle-size: 353
particle-size: 353
statement: this'.data = this'.data[1..this'.size()]
particle-size: 353
particle-size: 353
statement: return this'.data.length
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
statement: return ()
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
statement: return ()
particle-size: 353
particle-size: 353
particle-size: 353
particle-size: 353
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 972
particle-size: 972
statement: return this'.data.length
particle-size: 972
particle-size: 972
particle-size: 972
particle-size: 972
statement: this'.__H1.__run()
particle-size: 253
particle-size: 253
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 253
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: this'.Q_in.popFront()
particle-size: 136
particle-size: 136
statement: this'.data = this'.data[1..this'.size()]
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 855
particle-size: 855
statement: return this'.data.length
particle-size: 855
particle-size: 855
particle-size: 855
particle-size: 855
statement: this'.__S0.__run()
particle-size: 13
particle-size: 13
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 7
particle-size: 7
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 14
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 862
particle-size: 862
statement: return this'.data.length
particle-size: 862
particle-size: 862
particle-size: 862
particle-size: 862
statement: this'.__S1.__run()
particle-size: 51
particle-size: 51
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 51
particle-size: 51
statement: r := this'.front()
particle-size: 51
particle-size: 51
statement: return this'.data[0]
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.popFront()
particle-size: 51
particle-size: 51
statement: this'.data = this'.data[1..this'.size()]
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return r
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.data = this'.data ~ [x]
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: return ()
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 862
particle-size: 862
statement: return this'.data.length
particle-size: 862
particle-size: 862
particle-size: 862
particle-size: 862
statement: this'.__S2.__run()
particle-size: 59
particle-size: 59
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 21
particle-size: 21
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 42
particle-size: 42
particle-size: 42
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 58
particle-size: 58
statement: r := this'.front()
particle-size: 58
particle-size: 58
statement: return this'.data[0]
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.popFront()
particle-size: 58
particle-size: 58
statement: this'.data = this'.data[1..this'.size()]
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return r
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: this'.data = this'.data ~ [x]
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return ()
particle-size: 80
particle-size: 80
particle-size: 80
particle-size: 80
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 883
particle-size: 883
statement: return this'.data.length
particle-size: 883
particle-size: 883
particle-size: 883
particle-size: 883
statement: this'.__S3.__run()
particle-size: 243
particle-size: 243
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 243
particle-size: 243
statement: r := this'.front()
particle-size: 243
particle-size: 243
statement: return this'.data[0]
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: this'.popFront()
particle-size: 243
particle-size: 243
statement: this'.data = this'.data[1..this'.size()]
particle-size: 243
particle-size: 243
statement: return this'.data.length
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: return ()
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: return r
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: this'.data = this'.data ~ [x]
particle-size: 243
statement: return ()
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: return ()
particle-size: 243
particle-size: 243
particle-size: 243
particle-size: 243
statement: return ()
particle-size: 1280
particle-size: 1280
particle-size: 1280
particle-size: 383
repetition: 23
statement: __d.__step()
particle-size: 383
particle-size: 383
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: (action,node) := this'.scheduler()
particle-size: 380
particle-size: 380
statement: actions := ([]: (R × R)[])
particle-size: 380
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 380
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(0,i)]
particle-size: 253
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
loop-index: 1
particle-size: 380
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(0,i)]
particle-size: 209
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
loop-index: 2
particle-size: 380
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(1,i)]
particle-size: 20
loop-index: 3
particle-size: 380
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(0,i)]
particle-size: 28
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(1,i)]
particle-size: 53
loop-index: 4
particle-size: 380
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(0,i)]
particle-size: 34
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(1,i)]
particle-size: 43
loop-index: 5
particle-size: 380
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(0,i)]
particle-size: 181
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 380
particle-size: 380
statement: return this'.data.length
particle-size: 380
particle-size: 380
particle-size: 380
statement: actions ~= [(1,i)]
particle-size: 180
statement: this'.num_actions += 1
particle-size: 380
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 380
particle-size: 380
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1005
particle-size: 1005
particle-size: 1005
particle-size: 1005
particle-size: 1005
particle-size: 1005
particle-size: 1005
particle-size: 1005
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 53
particle-size: 53
statement: r := this'.front()
particle-size: 53
particle-size: 53
statement: return this'.data[0]
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.popFront()
particle-size: 53
particle-size: 53
statement: this'.data = this'.data[1..this'.size()]
particle-size: 53
particle-size: 53
statement: return this'.data.length
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: return r
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 53
particle-size: 53
particle-size: 53
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 53
particle-size: 53
particle-size: 53
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 43
particle-size: 43
statement: r := this'.front()
particle-size: 43
particle-size: 43
statement: return this'.data[0]
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.popFront()
particle-size: 43
particle-size: 43
statement: this'.data = this'.data[1..this'.size()]
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return r
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 43
particle-size: 43
particle-size: 43
statement: this'.data = this'.data ~ [x]
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 180
particle-size: 180
statement: r := this'.front()
particle-size: 180
particle-size: 180
statement: return this'.data[0]
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.popFront()
particle-size: 180
particle-size: 180
statement: this'.data = this'.data[1..this'.size()]
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: return r
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.data = this'.data ~ [x]
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 709
particle-size: 709
statement: return this'.data.length
particle-size: 709
particle-size: 709
particle-size: 709
particle-size: 709
statement: this'.__H0.__run()
particle-size: 253
particle-size: 253
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 253
particle-size: 253
statement: this.id = 0
particle-size: 253
statement: return this
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: this'.data = [x] ~ this'.data
particle-size: 253
statement: return ()
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 253
particle-size: 253
statement: this'.data = this'.data[1..this'.size()]
particle-size: 253
particle-size: 253
statement: return this'.data.length
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: return ()
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: this'.Q_in.popFront()
particle-size: 253
particle-size: 253
statement: this'.data = this'.data[1..this'.size()]
particle-size: 253
particle-size: 253
statement: return this'.data.length
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: return ()
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: return ()
particle-size: 253
particle-size: 253
particle-size: 253
particle-size: 253
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 709
particle-size: 709
statement: return this'.data.length
particle-size: 709
particle-size: 709
particle-size: 709
particle-size: 709
statement: this'.__H1.__run()
particle-size: 209
particle-size: 209
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 209
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: this'.Q_in.popFront()
particle-size: 108
particle-size: 108
statement: this'.data = this'.data[1..this'.size()]
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: return ()
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 608
particle-size: 608
statement: return this'.data.length
particle-size: 608
particle-size: 608
particle-size: 608
particle-size: 608
statement: this'.__S0.__run()
particle-size: 4
particle-size: 4
statement: if (this'.strategy == 4) {
    this'.strategy = uniformInt(1,2);
    if (this'.strategy == 2) {
        this'.strategy = (this'.strategy + flip((1 / 2)));
    }
}
statement: if (this'.strategy == 1) {
    if flip((1 / 2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    }
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy));
}
statement: if flip((1 / 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
particle-size: 2
particle-size: 2
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 4
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],this'.strategy))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 610
particle-size: 610
statement: return this'.data.length
particle-size: 610
particle-size: 610
particle-size: 610
particle-size: 610
statement: this'.__S1.__run()
particle-size: 28
particle-size: 28
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 28
particle-size: 28
statement: r := this'.front()
particle-size: 28
particle-size: 28
statement: return this'.data[0]
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.popFront()
particle-size: 28
particle-size: 28
statement: this'.data = this'.data[1..this'.size()]
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return r
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 610
particle-size: 610
statement: return this'.data.length
particle-size: 610
particle-size: 610
particle-size: 610
particle-size: 610
statement: this'.__S2.__run()
particle-size: 34
particle-size: 34
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 13
particle-size: 13
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 34
particle-size: 34
statement: r := this'.front()
particle-size: 34
particle-size: 34
statement: return this'.data[0]
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.popFront()
particle-size: 34
particle-size: 34
statement: this'.data = this'.data[1..this'.size()]
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return r
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.data = this'.data ~ [x]
particle-size: 34
statement: return ()
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 623
particle-size: 623
statement: return this'.data.length
particle-size: 623
particle-size: 623
particle-size: 623
particle-size: 623
statement: this'.__S3.__run()
particle-size: 181
particle-size: 181
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 181
particle-size: 181
statement: r := this'.front()
particle-size: 181
particle-size: 181
statement: return this'.data[0]
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.popFront()
particle-size: 181
particle-size: 181
statement: this'.data = this'.data[1..this'.size()]
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return r
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: this'.data = this'.data ~ [x]
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 922
particle-size: 922
particle-size: 922
particle-size: 271
repetition: 24
statement: __d.__step()
particle-size: 271
particle-size: 271
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: return this'.data.length
particle-size: 271
particle-size: 271
particle-size: 271
particle-size: 271
statement: (action,node) := this'.scheduler()
particle-size: 268
particle-size: 268
statement: actions := ([]: (R × R)[])
particle-size: 268
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: actions ~= [(0,i)]
particle-size: 164
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
loop-index: 1
particle-size: 268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: actions ~= [(0,i)]
particle-size: 175
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
loop-index: 2
particle-size: 268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 3
particle-size: 268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: actions ~= [(0,i)]
particle-size: 16
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: actions ~= [(1,i)]
particle-size: 28
loop-index: 4
particle-size: 268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: actions ~= [(0,i)]
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: actions ~= [(1,i)]
particle-size: 23
loop-index: 5
particle-size: 268
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: actions ~= [(0,i)]
particle-size: 118
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
statement: actions ~= [(1,i)]
particle-size: 114
statement: this'.num_actions += 1
particle-size: 268
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 268
particle-size: 268
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
particle-size: 664
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 28
particle-size: 28
statement: r := this'.front()
particle-size: 28
particle-size: 28
statement: return this'.data[0]
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.popFront()
particle-size: 28
particle-size: 28
statement: this'.data = this'.data[1..this'.size()]
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return r
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 23
particle-size: 23
statement: r := this'.front()
particle-size: 23
particle-size: 23
statement: return this'.data[0]
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.popFront()
particle-size: 23
particle-size: 23
statement: this'.data = this'.data[1..this'.size()]
particle-size: 23
particle-size: 23
statement: return this'.data.length
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: return r
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 23
particle-size: 23
particle-size: 23
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 23
particle-size: 23
particle-size: 23
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 171
particle-size: 171
statement: return this'.data.length
particle-size: 171
particle-size: 171
particle-size: 171
particle-size: 171
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 114
particle-size: 114
statement: r := this'.front()
particle-size: 114
particle-size: 114
statement: return this'.data[0]
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.popFront()
particle-size: 114
particle-size: 114
statement: this'.data = this'.data[1..this'.size()]
particle-size: 114
particle-size: 114
statement: return this'.data.length
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: return r
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 114
particle-size: 114
particle-size: 114
statement: this'.data = this'.data ~ [x]
particle-size: 114
statement: return ()
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 493
particle-size: 493
statement: return this'.data.length
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
statement: this'.__H0.__run()
particle-size: 164
particle-size: 164
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 164
particle-size: 164
statement: this.id = 0
particle-size: 164
statement: return this
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: this'.data = [x] ~ this'.data
particle-size: 164
statement: return ()
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 164
particle-size: 164
statement: this'.data = this'.data[1..this'.size()]
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return ()
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: this'.Q_in.popFront()
particle-size: 164
particle-size: 164
statement: this'.data = this'.data[1..this'.size()]
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return ()
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return ()
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 493
particle-size: 493
statement: return this'.data.length
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
statement: this'.__H1.__run()
particle-size: 175
particle-size: 175
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 175
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: this'.Q_in.popFront()
particle-size: 88
particle-size: 88
statement: this'.data = this'.data[1..this'.size()]
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return ()
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return ()
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: this'.__S1.__run()
particle-size: 16
particle-size: 16
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 406
particle-size: 406
statement: return this'.data.length
particle-size: 406
particle-size: 406
particle-size: 406
particle-size: 406
statement: this'.__S2.__run()
particle-size: 20
particle-size: 20
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 8
particle-size: 8
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 16
particle-size: 16
particle-size: 16
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 414
particle-size: 414
statement: return this'.data.length
particle-size: 414
particle-size: 414
particle-size: 414
particle-size: 414
statement: this'.__S3.__run()
particle-size: 118
particle-size: 118
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 118
particle-size: 118
statement: r := this'.front()
particle-size: 118
particle-size: 118
statement: return this'.data[0]
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: this'.popFront()
particle-size: 118
particle-size: 118
statement: this'.data = this'.data[1..this'.size()]
particle-size: 118
particle-size: 118
statement: return this'.data.length
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return r
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: this'.data = this'.data ~ [x]
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 588
particle-size: 588
particle-size: 588
particle-size: 178
repetition: 25
statement: __d.__step()
particle-size: 178
particle-size: 178
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: return this'.data.length
particle-size: 178
particle-size: 178
particle-size: 178
particle-size: 178
statement: (action,node) := this'.scheduler()
particle-size: 175
particle-size: 175
statement: actions := ([]: (R × R)[])
particle-size: 175
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 175
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
statement: actions ~= [(0,i)]
particle-size: 102
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
loop-index: 1
particle-size: 175
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
statement: actions ~= [(0,i)]
particle-size: 114
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
loop-index: 2
particle-size: 175
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
loop-index: 3
particle-size: 175
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
statement: actions ~= [(0,i)]
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
statement: actions ~= [(1,i)]
particle-size: 16
loop-index: 4
particle-size: 175
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
statement: actions ~= [(1,i)]
particle-size: 13
loop-index: 5
particle-size: 175
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
statement: actions ~= [(0,i)]
particle-size: 60
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 175
particle-size: 175
statement: return this'.data.length
particle-size: 175
particle-size: 175
particle-size: 175
statement: actions ~= [(1,i)]
particle-size: 77
statement: this'.num_actions += 1
particle-size: 175
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 175
particle-size: 175
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 16
particle-size: 16
statement: r := this'.front()
particle-size: 16
particle-size: 16
statement: return this'.data[0]
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.popFront()
particle-size: 16
particle-size: 16
statement: this'.data = this'.data[1..this'.size()]
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return r
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.data = this'.data ~ [x]
particle-size: 16
statement: return ()
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 77
particle-size: 77
statement: r := this'.front()
particle-size: 77
particle-size: 77
statement: return this'.data[0]
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.popFront()
particle-size: 77
particle-size: 77
statement: this'.data = this'.data[1..this'.size()]
particle-size: 77
particle-size: 77
statement: return this'.data.length
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: return r
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.data = this'.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 288
particle-size: 288
statement: return this'.data.length
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: this'.__H0.__run()
particle-size: 102
particle-size: 102
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 102
particle-size: 102
statement: this.id = 0
particle-size: 102
statement: return this
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.data = [x] ~ this'.data
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 102
particle-size: 102
statement: this'.data = this'.data[1..this'.size()]
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: this'.Q_in.popFront()
particle-size: 102
particle-size: 102
statement: this'.data = this'.data[1..this'.size()]
particle-size: 102
particle-size: 102
statement: return this'.data.length
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: return ()
particle-size: 102
particle-size: 102
particle-size: 102
particle-size: 102
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 288
particle-size: 288
statement: return this'.data.length
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: this'.__H1.__run()
particle-size: 114
particle-size: 114
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 114
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: this'.Q_in.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.__S1.__run()
particle-size: 5
particle-size: 5
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.__S2.__run()
particle-size: 7
particle-size: 7
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 3
particle-size: 3
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 231
particle-size: 231
statement: return this'.data.length
particle-size: 231
particle-size: 231
particle-size: 231
particle-size: 231
statement: this'.__S3.__run()
particle-size: 60
particle-size: 60
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 60
particle-size: 60
statement: r := this'.front()
particle-size: 60
particle-size: 60
statement: return this'.data[0]
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.popFront()
particle-size: 60
particle-size: 60
statement: this'.data = this'.data[1..this'.size()]
particle-size: 60
particle-size: 60
statement: return this'.data.length
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return r
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: this'.data = this'.data ~ [x]
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: return ()
particle-size: 340
particle-size: 340
particle-size: 340
particle-size: 106
repetition: 26
statement: __d.__step()
particle-size: 106
particle-size: 106
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: (action,node) := this'.scheduler()
particle-size: 103
particle-size: 103
statement: actions := ([]: (R × R)[])
particle-size: 103
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 55
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
loop-index: 1
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 77
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
loop-index: 2
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
loop-index: 3
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(1,i)]
particle-size: 5
loop-index: 4
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 5
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(0,i)]
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
statement: actions ~= [(1,i)]
particle-size: 47
statement: this'.num_actions += 1
particle-size: 103
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 103
particle-size: 103
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
particle-size: 220
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 5
particle-size: 5
statement: r := this'.front()
particle-size: 5
particle-size: 5
statement: return this'.data[0]
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.popFront()
particle-size: 5
particle-size: 5
statement: this'.data = this'.data[1..this'.size()]
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return r
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: this'.__H0.__run()
particle-size: 55
particle-size: 55
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 55
particle-size: 55
statement: this.id = 0
particle-size: 55
statement: return this
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.data = [x] ~ this'.data
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 55
particle-size: 55
statement: this'.data = this'.data[1..this'.size()]
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: this'.Q_in.popFront()
particle-size: 55
particle-size: 55
statement: this'.data = this'.data[1..this'.size()]
particle-size: 55
particle-size: 55
statement: return this'.data.length
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: return ()
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: this'.__H1.__run()
particle-size: 77
particle-size: 77
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 77
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe(0)
statement: this'.Q_in.popFront()
particle-size: 35
particle-size: 35
statement: this'.data = this'.data[1..this'.size()]
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return ()
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: this'.__S1.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 122
particle-size: 122
statement: return this'.data.length
particle-size: 122
particle-size: 122
particle-size: 122
particle-size: 122
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if (this'.failing == 2) {
    this'.failing = flip(1 / 1000);
}
statement: this'.failing = flip(1 / 1000)
particle-size: 1
particle-size: 1
statement: assert(0 <= p & p <= 1)
statement: return sampleFrom("(x;p)=>(1-p)·δ(0)[x]+p·δ(0)[1-x]",p): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.failing == 1) {
    this'.Q_in.popFront();
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 123
particle-size: 123
statement: return this'.data.length
particle-size: 123
particle-size: 123
particle-size: 123
particle-size: 123
statement: this'.__S3.__run()
particle-size: 29
particle-size: 29
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 29
particle-size: 29
statement: r := this'.front()
particle-size: 29
particle-size: 29
statement: return this'.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.popFront()
particle-size: 29
particle-size: 29
statement: this'.data = this'.data[1..this'.size()]
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.data = this'.data ~ [x]
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 182
particle-size: 182
particle-size: 182
particle-size: 58
repetition: 27
statement: __d.__step()
particle-size: 58
particle-size: 58
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: return this'.data.length
particle-size: 58
particle-size: 58
particle-size: 58
particle-size: 58
statement: (action,node) := this'.scheduler()
particle-size: 54
particle-size: 54
statement: actions := ([]: (R × R)[])
particle-size: 54
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
statement: actions ~= [(0,i)]
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
loop-index: 1
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
statement: actions ~= [(0,i)]
particle-size: 39
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
loop-index: 2
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
loop-index: 3
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 5
particle-size: 54
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
statement: actions ~= [(1,i)]
particle-size: 24
statement: this'.num_actions += 1
particle-size: 54
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 54
particle-size: 54
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
particle-size: 101
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.data = this'.data ~ [x]
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.__H0.__run()
particle-size: 27
particle-size: 27
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 27
particle-size: 27
statement: this.id = 0
particle-size: 27
statement: return this
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = [x] ~ this'.data
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.Q_in.popFront()
particle-size: 27
particle-size: 27
statement: this'.data = this'.data[1..this'.size()]
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.__H1.__run()
particle-size: 39
particle-size: 39
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 39
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe(0)
statement: this'.Q_in.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
particle-size: 51
statement: this'.__S3.__run()
particle-size: 9
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 31
repetition: 28
statement: __d.__step()
particle-size: 31
particle-size: 31
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: (action,node) := this'.scheduler()
particle-size: 27
particle-size: 27
statement: actions := ([]: (R × R)[])
particle-size: 27
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
loop-index: 1
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(0,i)]
particle-size: 24
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
loop-index: 2
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
loop-index: 3
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
loop-index: 4
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
loop-index: 5
particle-size: 27
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
statement: actions ~= [(1,i)]
particle-size: 6
statement: this'.num_actions += 1
particle-size: 27
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 27
particle-size: 27
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.__H0.__run()
particle-size: 12
particle-size: 12
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 12
particle-size: 12
statement: this.id = 0
particle-size: 12
statement: return this
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = [x] ~ this'.data
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.Q_in.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.__H1.__run()
particle-size: 24
particle-size: 24
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 24
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 1))
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe(0)
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.__S3.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 16
repetition: 29
statement: __d.__step()
particle-size: 16
particle-size: 16
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: (action,node) := this'.scheduler()
particle-size: 12
particle-size: 12
statement: actions := ([]: (R × R)[])
particle-size: 12
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 1
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(0,i)]
particle-size: 11
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 2
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 3
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 4
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
loop-index: 5
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
statement: actions ~= [(1,i)]
particle-size: 1
statement: this'.num_actions += 1
particle-size: 12
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 12
particle-size: 12
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: this.id = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_in.data[0][0].id = this'.pkt_count;
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.__H1.__run()
particle-size: 11
particle-size: 11
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 11
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe((this'.Q_in.data[0][0].id == 3))
statement: if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe(0)
statement: this'.Q_in.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 5
repetition: 30
statement: __d.__step()
particle-size: 5
particle-size: 5
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.num_actions += 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.num_arrived = (this'.num_arrived + 1)
particle-size: 1
statement: if (this'.num_arrived == 1) {
    observe((this'.Q_in.data[0][0].id == 1));
} else if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: if (this'.num_arrived == 2) {
    observe((this'.Q_in.data[0][0].id == 3));
} else if (this'.num_arrived == 3) {
    observe(0);
}
statement: if (this'.num_arrived == 3) {
    observe(0);
}
statement: observe(0)
particle-size: 0
particle-size: 0
particle-size: 0
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: observe(((if 1 == 1 {
    __d.__H1.num_arrived;
} else {
    assert(0);
}) == 2))
statement: assert(!(__d.__H0.Q_in.size() || __d.__H0.Q_out.size() || __d.__H1.Q_in.size() || __d.__H1.Q_out.size() || __d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size() || __d.__S3.Q_in.size() || __d.__S3.Q_out.size()))
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: q₁ := Expectation(((if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 1) != 0)
particle-size: 1
statement: q₂ := Expectation(((if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 2) != 0)
particle-size: 1
statement: q₃ := Expectation(((if 2 == 2 {
    __d.__S0.strategy;
} else {
    assert(0);
}) == 3) != 0)
particle-size: 1
statement: return (q₁,q₂,q₃)
particle-size: 1
E[q1_,q2_,q3_] = (1,0,0)

real	3m52.425s
user	3m51.216s
sys	0m1.036s
