statement: __d := __D'()
particle-size: 1
particle-size: 1
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'() , this.__S3 = __s3_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'() , this.__S2 = __s2_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'() , this.__S1 = __s1_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'() , this.__S0 = __s0_ty'()
statement: this.__H0 = __h0_ty'() , this.__H1 = __h1_ty'()
statement: this.__H0 = __h0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__H1 = __h1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.pkt_count = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S0 = __s0_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.route1 = 0
particle-size: 1
statement: this.route2 = 0
particle-size: 1
statement: this.route3 = 0
particle-size: 1
statement: this.shortest1 = 0
particle-size: 1
statement: this.shortest2 = 0
particle-size: 1
statement: this.shortest3 = 0
particle-size: 1
statement: this.nshortest = 0
particle-size: 1
statement: this.which = 0
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S1 = __s1_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S2 = __s2_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.__S3 = __s3_ty'()
particle-size: 1
particle-size: 1
statement: this.Q_in = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: this.Q_out = Queue'()
particle-size: 1
particle-size: 1
statement: this.data = ([]: (Packet × ℝ)[])
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.Q_in.pushBack((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: __d.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: repeat 40 {
    __d.__step();
}
repetition: 1
statement: __d.__step()
particle-size: 1
particle-size: 1
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (action,node) := this'.scheduler()
particle-size: 1
particle-size: 1
statement: actions := ([]: (R × R)[])
particle-size: 1
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 2
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 3
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 4
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
loop-index: 5
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
repetition: 2
statement: __d.__step()
particle-size: 2
particle-size: 2
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (action,node) := this'.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__H0.__run()
particle-size: 2
particle-size: 2
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 2
particle-size: 2
statement: return this
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = [x] ~ this'.data
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 1
statement: this'.route2 = 3
particle-size: 1
statement: this'.route3 = (2 + 1)
particle-size: 1
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 1
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 1
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 1
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 1
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 5
repetition: 3
statement: __d.__step()
particle-size: 5
particle-size: 5
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: (action,node) := this'.scheduler()
particle-size: 5
particle-size: 5
statement: actions := ([]: (R × R)[])
particle-size: 5
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: actions ~= [(0,i)]
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
loop-index: 2
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 3
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
loop-index: 4
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
loop-index: 5
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 5
particle-size: 5
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.__H0.__run()
particle-size: 5
particle-size: 5
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 5
particle-size: 5
statement: return this
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = [x] ~ this'.data
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 4
particle-size: 4
statement: return this
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = [x] ~ this'.data
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 1
statement: this'.route2 = 3
particle-size: 1
statement: this'.route3 = (2 + 1)
particle-size: 1
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 1
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 1
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 1
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 1
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 10
repetition: 4
statement: __d.__step()
particle-size: 10
particle-size: 10
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: (action,node) := this'.scheduler()
particle-size: 10
particle-size: 10
statement: actions := ([]: (R × R)[])
particle-size: 10
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 1
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
loop-index: 2
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 3
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
loop-index: 4
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
loop-index: 5
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 10
particle-size: 10
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.__H0.__run()
particle-size: 10
particle-size: 10
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 10
particle-size: 10
statement: return this
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = [x] ~ this'.data
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 7
particle-size: 7
statement: return this
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = [x] ~ this'.data
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 7
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 16
particle-size: 16
statement: return this'.data.length
particle-size: 16
particle-size: 16
particle-size: 16
particle-size: 16
statement: this'.__S0.__run()
particle-size: 3
particle-size: 3
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 3
statement: this'.route2 = 3
particle-size: 3
statement: this'.route3 = (2 + 1)
particle-size: 3
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 3
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 3
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 3
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 3
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 3
particle-size: 3
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 9
particle-size: 9
particle-size: 9
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.__S1.__run()
particle-size: 1
particle-size: 1
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.__S2.__run()
particle-size: 1
particle-size: 1
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.__S3.__run()
particle-size: 1
particle-size: 1
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 20
repetition: 5
statement: __d.__step()
particle-size: 20
particle-size: 20
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: (action,node) := this'.scheduler()
particle-size: 20
particle-size: 20
statement: actions := ([]: (R × R)[])
particle-size: 20
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(0,i)]
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(1,i)]
particle-size: 13
loop-index: 1
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
loop-index: 2
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(1,i)]
particle-size: 9
loop-index: 3
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 5
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
statement: actions ~= [(1,i)]
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 20
particle-size: 20
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
particle-size: 55
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.__H0.__run()
particle-size: 20
particle-size: 20
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = [x] ~ this'.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 9
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 9
particle-size: 9
statement: r := this'.front()
particle-size: 9
particle-size: 9
statement: return this'.data[0]
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return r
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 11
particle-size: 11
statement: this'.data = this'.data[1..this'.size()]
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.Q_in.popFront()
particle-size: 11
particle-size: 11
statement: this'.data = this'.data[1..this'.size()]
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 30
particle-size: 30
statement: return this'.data.length
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: this'.__S0.__run()
particle-size: 7
particle-size: 7
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 7
statement: this'.route2 = 3
particle-size: 7
statement: this'.route3 = (2 + 1)
particle-size: 7
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 7
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 7
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 7
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 7
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 7
particle-size: 7
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 21
particle-size: 21
particle-size: 21
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.__S1.__run()
particle-size: 1
particle-size: 1
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.__S2.__run()
particle-size: 1
particle-size: 1
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 44
particle-size: 44
statement: return this'.data.length
particle-size: 44
particle-size: 44
particle-size: 44
particle-size: 44
statement: this'.__S3.__run()
particle-size: 1
particle-size: 1
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 42
repetition: 6
statement: __d.__step()
particle-size: 42
particle-size: 42
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: (action,node) := this'.scheduler()
particle-size: 42
particle-size: 42
statement: actions := ([]: (R × R)[])
particle-size: 42
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(1,i)]
particle-size: 22
loop-index: 1
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
loop-index: 2
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 14
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(1,i)]
particle-size: 21
loop-index: 3
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 5
particle-size: 42
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
statement: actions ~= [(1,i)]
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 42
particle-size: 42
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
particle-size: 114
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 22
particle-size: 22
statement: r := this'.front()
particle-size: 22
particle-size: 22
statement: return this'.data[0]
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: this'.popFront()
particle-size: 22
particle-size: 22
statement: this'.data = this'.data[1..this'.size()]
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return r
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 22
particle-size: 22
particle-size: 22
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 22
particle-size: 22
statement: return this'.data.length
particle-size: 22
particle-size: 22
particle-size: 22
particle-size: 22
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 22
particle-size: 22
particle-size: 22
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 21
particle-size: 21
statement: r := this'.front()
particle-size: 21
particle-size: 21
statement: return this'.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.__H0.__run()
particle-size: 42
particle-size: 42
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 42
particle-size: 42
statement: return this
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.data = [x] ~ this'.data
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = [x] ~ this'.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.Q_in.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.__S0.__run()
particle-size: 14
particle-size: 14
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 14
statement: this'.route2 = 3
particle-size: 14
statement: this'.route3 = (2 + 1)
particle-size: 14
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 14
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 14
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 14
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 14
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 14
particle-size: 14
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 42
particle-size: 42
particle-size: 42
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 14
particle-size: 14
statement: r := this'.front()
particle-size: 14
particle-size: 14
statement: return this'.data[0]
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.popFront()
particle-size: 14
particle-size: 14
statement: this'.data = this'.data[1..this'.size()]
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return r
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.__S1.__run()
particle-size: 3
particle-size: 3
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.__S2.__run()
particle-size: 4
particle-size: 4
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.__S3.__run()
particle-size: 4
particle-size: 4
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 142
particle-size: 142
particle-size: 142
particle-size: 78
repetition: 7
statement: __d.__step()
particle-size: 78
particle-size: 78
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: (action,node) := this'.scheduler()
particle-size: 78
particle-size: 78
statement: actions := ([]: (R × R)[])
particle-size: 78
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 78
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(0,i)]
particle-size: 77
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(1,i)]
particle-size: 40
loop-index: 1
particle-size: 78
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
loop-index: 2
particle-size: 78
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(0,i)]
particle-size: 26
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(1,i)]
particle-size: 45
loop-index: 3
particle-size: 78
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 4
particle-size: 78
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(1,i)]
particle-size: 4
loop-index: 5
particle-size: 78
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
statement: actions ~= [(1,i)]
particle-size: 4
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 78
particle-size: 78
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
particle-size: 223
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 39
statement: return ()
particle-size: 39
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 45
particle-size: 45
statement: r := this'.front()
particle-size: 45
particle-size: 45
statement: return this'.data[0]
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: this'.popFront()
particle-size: 45
particle-size: 45
statement: this'.data = this'.data[1..this'.size()]
particle-size: 45
particle-size: 45
statement: return this'.data.length
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return ()
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: return r
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
particle-size: 45
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 15
particle-size: 15
particle-size: 15
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 3
particle-size: 3
particle-size: 3
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 127
particle-size: 127
statement: return this'.data.length
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.__H0.__run()
particle-size: 77
particle-size: 77
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 77
particle-size: 77
statement: return this
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: this'.data = [x] ~ this'.data
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = [x] ~ this'.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_in.popFront()
particle-size: 59
particle-size: 59
statement: this'.data = this'.data[1..this'.size()]
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: this'.Q_in.popFront()
particle-size: 59
particle-size: 59
statement: this'.data = this'.data[1..this'.size()]
particle-size: 59
particle-size: 59
statement: return this'.data.length
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 59
particle-size: 59
particle-size: 59
particle-size: 59
statement: return ()
particle-size: 77
particle-size: 77
particle-size: 77
particle-size: 77
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 127
particle-size: 127
statement: return this'.data.length
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 127
particle-size: 127
statement: return this'.data.length
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.__S0.__run()
particle-size: 26
particle-size: 26
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 26
statement: this'.route2 = 3
particle-size: 26
statement: this'.route3 = (2 + 1)
particle-size: 26
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 26
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 26
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 26
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 26
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 26
particle-size: 26
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 78
particle-size: 78
particle-size: 78
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: this'.__S1.__run()
particle-size: 7
particle-size: 7
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: this'.__S2.__run()
particle-size: 8
particle-size: 8
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: this'.__S3.__run()
particle-size: 8
particle-size: 8
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 275
particle-size: 275
particle-size: 275
particle-size: 139
repetition: 8
statement: __d.__step()
particle-size: 139
particle-size: 139
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
particle-size: 139
statement: (action,node) := this'.scheduler()
particle-size: 139
particle-size: 139
statement: actions := ([]: (R × R)[])
particle-size: 139
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(0,i)]
particle-size: 137
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(1,i)]
particle-size: 57
loop-index: 1
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(0,i)]
particle-size: 4
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
loop-index: 2
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(0,i)]
particle-size: 47
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(1,i)]
particle-size: 81
loop-index: 3
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(1,i)]
particle-size: 7
loop-index: 4
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(0,i)]
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(1,i)]
particle-size: 8
loop-index: 5
particle-size: 139
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(0,i)]
particle-size: 21
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 139
particle-size: 139
statement: return this'.data.length
particle-size: 139
particle-size: 139
particle-size: 139
statement: actions ~= [(1,i)]
particle-size: 8
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 139
particle-size: 139
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
particle-size: 407
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 57
particle-size: 57
particle-size: 57
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 57
particle-size: 57
particle-size: 57
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 81
particle-size: 81
statement: r := this'.front()
particle-size: 81
particle-size: 81
statement: return this'.data[0]
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.popFront()
particle-size: 81
particle-size: 81
statement: this'.data = this'.data[1..this'.size()]
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return r
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 27
particle-size: 27
particle-size: 27
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 27
particle-size: 27
statement: return this'.data.length
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 27
particle-size: 27
particle-size: 27
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 161
particle-size: 161
statement: return this'.data.length
particle-size: 161
particle-size: 161
particle-size: 161
particle-size: 161
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 8
particle-size: 8
statement: r := this'.front()
particle-size: 8
particle-size: 8
statement: return this'.data[0]
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return r
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 246
particle-size: 246
statement: return this'.data.length
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: this'.__H0.__run()
particle-size: 137
particle-size: 137
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 137
particle-size: 137
statement: return this
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.data = [x] ~ this'.data
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 26
particle-size: 26
statement: return this
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = [x] ~ this'.data
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 26
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.data = this'.data ~ [x]
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.Q_in.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.Q_in.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 246
particle-size: 246
statement: return this'.data.length
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: this'.__H1.__run()
particle-size: 4
particle-size: 4
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 4
statement: this'.Q_in.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 246
particle-size: 246
statement: return this'.data.length
particle-size: 246
particle-size: 246
particle-size: 246
particle-size: 246
statement: this'.__S0.__run()
particle-size: 47
particle-size: 47
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 47
statement: this'.route2 = 3
particle-size: 47
statement: this'.route3 = (2 + 1)
particle-size: 47
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 47
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 47
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 47
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 47
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 47
particle-size: 47
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 141
particle-size: 141
particle-size: 141
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 47
particle-size: 47
particle-size: 47
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 340
particle-size: 340
statement: return this'.data.length
particle-size: 340
particle-size: 340
particle-size: 340
particle-size: 340
statement: this'.__S1.__run()
particle-size: 17
particle-size: 17
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 340
particle-size: 340
statement: return this'.data.length
particle-size: 340
particle-size: 340
particle-size: 340
particle-size: 340
statement: this'.__S2.__run()
particle-size: 20
particle-size: 20
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 340
particle-size: 340
statement: return this'.data.length
particle-size: 340
particle-size: 340
particle-size: 340
particle-size: 340
statement: this'.__S3.__run()
particle-size: 21
particle-size: 21
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 21
particle-size: 21
statement: r := this'.front()
particle-size: 21
particle-size: 21
statement: return this'.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.data = this'.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 501
particle-size: 501
particle-size: 501
particle-size: 241
repetition: 9
statement: __d.__step()
particle-size: 241
particle-size: 241
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
particle-size: 241
statement: (action,node) := this'.scheduler()
particle-size: 241
particle-size: 241
statement: actions := ([]: (R × R)[])
particle-size: 241
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 241
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(0,i)]
particle-size: 233
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(1,i)]
particle-size: 81
loop-index: 1
particle-size: 241
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
loop-index: 2
particle-size: 241
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(0,i)]
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(1,i)]
particle-size: 144
loop-index: 3
particle-size: 241
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(0,i)]
particle-size: 33
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(1,i)]
particle-size: 17
loop-index: 4
particle-size: 241
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(0,i)]
particle-size: 40
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(1,i)]
particle-size: 20
loop-index: 5
particle-size: 241
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(0,i)]
particle-size: 41
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 241
particle-size: 241
statement: return this'.data.length
particle-size: 241
particle-size: 241
particle-size: 241
statement: actions ~= [(1,i)]
particle-size: 21
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 241
particle-size: 241
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 704
particle-size: 704
particle-size: 704
particle-size: 704
particle-size: 704
particle-size: 704
particle-size: 704
particle-size: 704
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 283
particle-size: 283
statement: return this'.data.length
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 81
particle-size: 81
statement: r := this'.front()
particle-size: 81
particle-size: 81
statement: return this'.data[0]
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: this'.popFront()
particle-size: 81
particle-size: 81
statement: this'.data = this'.data[1..this'.size()]
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return r
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 81
particle-size: 81
particle-size: 81
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 81
particle-size: 81
statement: return this'.data.length
particle-size: 81
particle-size: 81
particle-size: 81
particle-size: 81
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 80
statement: return ()
particle-size: 80
particle-size: 81
particle-size: 81
particle-size: 81
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 283
particle-size: 283
statement: return this'.data.length
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 283
particle-size: 283
statement: return this'.data.length
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 144
particle-size: 144
statement: r := this'.front()
particle-size: 144
particle-size: 144
statement: return this'.data[0]
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return r
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.data = this'.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.data = this'.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.data = this'.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 283
particle-size: 283
statement: return this'.data.length
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 17
particle-size: 17
statement: r := this'.front()
particle-size: 17
particle-size: 17
statement: return this'.data[0]
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return r
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 17
particle-size: 17
particle-size: 17
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = this'.data ~ [x]
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 283
particle-size: 283
statement: return this'.data.length
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 283
particle-size: 283
statement: return this'.data.length
particle-size: 283
particle-size: 283
particle-size: 283
particle-size: 283
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 21
particle-size: 21
statement: r := this'.front()
particle-size: 21
particle-size: 21
statement: return this'.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 21
particle-size: 21
particle-size: 21
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.data = this'.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 421
particle-size: 421
statement: return this'.data.length
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
statement: this'.__H0.__run()
particle-size: 233
particle-size: 233
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 233
particle-size: 233
statement: return this
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: this'.data = [x] ~ this'.data
particle-size: 233
statement: return ()
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 31
particle-size: 31
statement: return this
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = [x] ~ this'.data
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 31
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 31
particle-size: 31
statement: r := this'.front()
particle-size: 31
particle-size: 31
statement: return this'.data[0]
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return r
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.Q_in.popFront()
particle-size: 202
particle-size: 202
statement: this'.data = this'.data[1..this'.size()]
particle-size: 202
particle-size: 202
statement: return this'.data.length
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: this'.Q_in.popFront()
particle-size: 202
particle-size: 202
statement: this'.data = this'.data[1..this'.size()]
particle-size: 202
particle-size: 202
statement: return this'.data.length
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 202
particle-size: 202
particle-size: 202
particle-size: 202
statement: return ()
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 421
particle-size: 421
statement: return this'.data.length
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
statement: this'.__H1.__run()
particle-size: 8
particle-size: 8
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 8
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 421
particle-size: 421
statement: return this'.data.length
particle-size: 421
particle-size: 421
particle-size: 421
particle-size: 421
statement: this'.__S0.__run()
particle-size: 66
particle-size: 66
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 66
statement: this'.route2 = 3
particle-size: 66
statement: this'.route3 = (2 + 1)
particle-size: 66
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 66
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 66
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 66
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 66
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 66
particle-size: 66
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 198
particle-size: 198
particle-size: 198
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 66
particle-size: 66
particle-size: 66
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 66
particle-size: 66
statement: r := this'.front()
particle-size: 66
particle-size: 66
statement: return this'.data[0]
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: this'.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return r
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 198
particle-size: 198
particle-size: 198
particle-size: 198
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 553
particle-size: 553
statement: return this'.data.length
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
statement: this'.__S1.__run()
particle-size: 33
particle-size: 33
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 33
particle-size: 33
statement: r := this'.front()
particle-size: 33
particle-size: 33
statement: return this'.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.data = this'.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 553
particle-size: 553
statement: return this'.data.length
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
statement: this'.__S2.__run()
particle-size: 40
particle-size: 40
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 553
particle-size: 553
statement: return this'.data.length
particle-size: 553
particle-size: 553
particle-size: 553
particle-size: 553
statement: this'.__S3.__run()
particle-size: 41
particle-size: 41
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 836
particle-size: 836
particle-size: 836
particle-size: 396
repetition: 10
statement: __d.__step()
particle-size: 396
particle-size: 396
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: (action,node) := this'.scheduler()
particle-size: 396
particle-size: 396
statement: actions := ([]: (R × R)[])
particle-size: 396
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 396
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(0,i)]
particle-size: 383
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(1,i)]
particle-size: 105
loop-index: 1
particle-size: 396
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(0,i)]
particle-size: 21
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
loop-index: 2
particle-size: 396
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(0,i)]
particle-size: 93
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(1,i)]
particle-size: 228
loop-index: 3
particle-size: 396
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(0,i)]
particle-size: 71
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(1,i)]
particle-size: 33
loop-index: 4
particle-size: 396
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(0,i)]
particle-size: 87
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(1,i)]
particle-size: 40
loop-index: 5
particle-size: 396
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(0,i)]
particle-size: 90
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
statement: actions ~= [(1,i)]
particle-size: 41
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 396
particle-size: 396
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1192
particle-size: 1192
particle-size: 1192
particle-size: 1192
particle-size: 1192
particle-size: 1192
particle-size: 1192
particle-size: 1192
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 105
particle-size: 105
statement: r := this'.front()
particle-size: 105
particle-size: 105
statement: return this'.data[0]
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.popFront()
particle-size: 105
particle-size: 105
statement: this'.data = this'.data[1..this'.size()]
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return r
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 228
particle-size: 228
statement: r := this'.front()
particle-size: 228
particle-size: 228
statement: return this'.data[0]
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: this'.popFront()
particle-size: 228
particle-size: 228
statement: this'.data = this'.data[1..this'.size()]
particle-size: 228
particle-size: 228
statement: return this'.data.length
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: return r
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
particle-size: 228
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 76
particle-size: 76
particle-size: 76
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 76
particle-size: 76
particle-size: 76
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 76
particle-size: 76
particle-size: 76
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 76
particle-size: 76
statement: return this'.data.length
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: this'.data = this'.data ~ [x]
particle-size: 76
statement: return ()
particle-size: 76
particle-size: 76
particle-size: 76
particle-size: 76
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 33
particle-size: 33
statement: r := this'.front()
particle-size: 33
particle-size: 33
statement: return this'.data[0]
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return r
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 33
particle-size: 33
particle-size: 33
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.data = this'.data ~ [x]
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 41
particle-size: 41
particle-size: 41
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: this'.__H0.__run()
particle-size: 383
particle-size: 383
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 383
particle-size: 383
statement: return this
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: this'.data = [x] ~ this'.data
particle-size: 383
statement: return ()
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 40
particle-size: 40
statement: return this
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = [x] ~ this'.data
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 40
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.data = this'.data ~ [x]
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.Q_in.popFront()
particle-size: 343
particle-size: 343
statement: this'.data = this'.data[1..this'.size()]
particle-size: 343
particle-size: 343
statement: return this'.data.length
particle-size: 343
particle-size: 343
particle-size: 343
particle-size: 343
particle-size: 343
statement: return ()
particle-size: 343
particle-size: 343
particle-size: 343
particle-size: 343
statement: this'.Q_in.popFront()
particle-size: 343
particle-size: 343
statement: this'.data = this'.data[1..this'.size()]
particle-size: 343
particle-size: 343
statement: return this'.data.length
particle-size: 343
particle-size: 343
particle-size: 343
particle-size: 343
particle-size: 343
statement: return ()
particle-size: 343
particle-size: 343
particle-size: 343
particle-size: 343
statement: return ()
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: this'.__H1.__run()
particle-size: 21
particle-size: 21
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 21
statement: this'.Q_in.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 745
particle-size: 745
statement: return this'.data.length
particle-size: 745
particle-size: 745
particle-size: 745
particle-size: 745
statement: this'.__S0.__run()
particle-size: 93
particle-size: 93
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 93
statement: this'.route2 = 3
particle-size: 93
statement: this'.route3 = (2 + 1)
particle-size: 93
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 93
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 93
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 93
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 93
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 93
particle-size: 93
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 279
particle-size: 279
particle-size: 279
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 93
particle-size: 93
statement: r := this'.front()
particle-size: 93
particle-size: 93
statement: return this'.data[0]
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.popFront()
particle-size: 93
particle-size: 93
statement: this'.data = this'.data[1..this'.size()]
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return r
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 93
particle-size: 93
particle-size: 93
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 93
particle-size: 93
statement: r := this'.front()
particle-size: 93
particle-size: 93
statement: return this'.data[0]
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.popFront()
particle-size: 93
particle-size: 93
statement: this'.data = this'.data[1..this'.size()]
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return r
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 93
particle-size: 93
statement: r := this'.front()
particle-size: 93
particle-size: 93
statement: return this'.data[0]
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: this'.popFront()
particle-size: 93
particle-size: 93
statement: this'.data = this'.data[1..this'.size()]
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return r
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 93
particle-size: 93
statement: return this'.data.length
particle-size: 93
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 93
particle-size: 93
particle-size: 93
statement: return ()
particle-size: 279
particle-size: 279
particle-size: 279
particle-size: 279
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 931
particle-size: 931
statement: return this'.data.length
particle-size: 931
particle-size: 931
particle-size: 931
particle-size: 931
statement: this'.__S1.__run()
particle-size: 71
particle-size: 71
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 71
particle-size: 71
statement: r := this'.front()
particle-size: 71
particle-size: 71
statement: return this'.data[0]
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.popFront()
particle-size: 71
particle-size: 71
statement: this'.data = this'.data[1..this'.size()]
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return r
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.data = this'.data ~ [x]
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 931
particle-size: 931
statement: return this'.data.length
particle-size: 931
particle-size: 931
particle-size: 931
particle-size: 931
statement: this'.__S2.__run()
particle-size: 87
particle-size: 87
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 87
particle-size: 87
statement: r := this'.front()
particle-size: 87
particle-size: 87
statement: return this'.data[0]
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.popFront()
particle-size: 87
particle-size: 87
statement: this'.data = this'.data[1..this'.size()]
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return r
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.data = this'.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 931
particle-size: 931
statement: return this'.data.length
particle-size: 931
particle-size: 931
particle-size: 931
particle-size: 931
statement: this'.__S3.__run()
particle-size: 90
particle-size: 90
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 90
particle-size: 90
statement: r := this'.front()
particle-size: 90
particle-size: 90
statement: return this'.data[0]
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.popFront()
particle-size: 90
particle-size: 90
statement: this'.data = this'.data[1..this'.size()]
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return r
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 90
particle-size: 90
statement: return this'.data.length
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: this'.data = this'.data ~ [x]
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 90
particle-size: 90
particle-size: 90
particle-size: 90
statement: return ()
particle-size: 1378
particle-size: 1378
particle-size: 1378
particle-size: 597
repetition: 11
statement: __d.__step()
particle-size: 597
particle-size: 597
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
particle-size: 597
statement: (action,node) := this'.scheduler()
particle-size: 597
particle-size: 597
statement: actions := ([]: (R × R)[])
particle-size: 597
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 597
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(0,i)]
particle-size: 561
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(1,i)]
particle-size: 136
loop-index: 1
particle-size: 597
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(0,i)]
particle-size: 41
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
loop-index: 2
particle-size: 597
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(0,i)]
particle-size: 120
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(1,i)]
particle-size: 321
loop-index: 3
particle-size: 597
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(0,i)]
particle-size: 107
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(1,i)]
particle-size: 71
loop-index: 4
particle-size: 597
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(0,i)]
particle-size: 137
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(1,i)]
particle-size: 84
loop-index: 5
particle-size: 597
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(0,i)]
particle-size: 144
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 597
particle-size: 597
statement: return this'.data.length
particle-size: 597
particle-size: 597
particle-size: 597
statement: actions ~= [(1,i)]
particle-size: 87
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 597
particle-size: 597
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1809
particle-size: 1809
particle-size: 1809
particle-size: 1809
particle-size: 1809
particle-size: 1809
particle-size: 1809
particle-size: 1809
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 699
particle-size: 699
statement: return this'.data.length
particle-size: 699
particle-size: 699
particle-size: 699
particle-size: 699
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 136
particle-size: 136
statement: r := this'.front()
particle-size: 136
particle-size: 136
statement: return this'.data[0]
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this'.popFront()
particle-size: 136
particle-size: 136
statement: this'.data = this'.data[1..this'.size()]
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return r
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 136
particle-size: 136
particle-size: 136
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this'.data = this'.data ~ [x]
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 699
particle-size: 699
statement: return this'.data.length
particle-size: 699
particle-size: 699
particle-size: 699
particle-size: 699
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 699
particle-size: 699
statement: return this'.data.length
particle-size: 699
particle-size: 699
particle-size: 699
particle-size: 699
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 321
particle-size: 321
statement: r := this'.front()
particle-size: 321
particle-size: 321
statement: return this'.data[0]
particle-size: 321
particle-size: 321
particle-size: 321
particle-size: 321
particle-size: 321
statement: this'.popFront()
particle-size: 321
particle-size: 321
statement: this'.data = this'.data[1..this'.size()]
particle-size: 321
particle-size: 321
statement: return this'.data.length
particle-size: 321
particle-size: 321
particle-size: 321
particle-size: 321
particle-size: 321
statement: return ()
particle-size: 321
particle-size: 321
particle-size: 321
particle-size: 321
statement: return r
particle-size: 321
particle-size: 321
particle-size: 321
particle-size: 321
particle-size: 321
particle-size: 321
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 107
particle-size: 107
particle-size: 107
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 107
particle-size: 107
particle-size: 107
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 107
particle-size: 107
particle-size: 107
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 699
particle-size: 699
statement: return this'.data.length
particle-size: 699
particle-size: 699
particle-size: 699
particle-size: 699
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 71
particle-size: 71
statement: r := this'.front()
particle-size: 71
particle-size: 71
statement: return this'.data[0]
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.popFront()
particle-size: 71
particle-size: 71
statement: this'.data = this'.data[1..this'.size()]
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: return r
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 71
particle-size: 71
particle-size: 71
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 71
particle-size: 71
statement: return this'.data.length
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: this'.data = this'.data ~ [x]
particle-size: 71
statement: return ()
particle-size: 71
particle-size: 71
particle-size: 71
particle-size: 71
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 699
particle-size: 699
statement: return this'.data.length
particle-size: 699
particle-size: 699
particle-size: 699
particle-size: 699
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 84
particle-size: 84
particle-size: 84
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 699
particle-size: 699
statement: return this'.data.length
particle-size: 699
particle-size: 699
particle-size: 699
particle-size: 699
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 87
particle-size: 87
statement: r := this'.front()
particle-size: 87
particle-size: 87
statement: return this'.data[0]
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.popFront()
particle-size: 87
particle-size: 87
statement: this'.data = this'.data[1..this'.size()]
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return r
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 87
particle-size: 87
particle-size: 87
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: this'.data = this'.data ~ [x]
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1110
particle-size: 1110
statement: return this'.data.length
particle-size: 1110
particle-size: 1110
particle-size: 1110
particle-size: 1110
statement: this'.__H0.__run()
particle-size: 561
particle-size: 561
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 561
particle-size: 561
statement: return this
particle-size: 561
particle-size: 561
particle-size: 561
particle-size: 561
particle-size: 561
statement: this'.data = [x] ~ this'.data
particle-size: 561
statement: return ()
particle-size: 561
particle-size: 561
particle-size: 561
particle-size: 561
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 38
particle-size: 38
statement: return this
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = [x] ~ this'.data
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 38
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.Q_in.popFront()
particle-size: 523
particle-size: 523
statement: this'.data = this'.data[1..this'.size()]
particle-size: 523
particle-size: 523
statement: return this'.data.length
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
statement: return ()
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
statement: this'.Q_in.popFront()
particle-size: 523
particle-size: 523
statement: this'.data = this'.data[1..this'.size()]
particle-size: 523
particle-size: 523
statement: return this'.data.length
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
statement: return ()
particle-size: 523
particle-size: 523
particle-size: 523
particle-size: 523
statement: return ()
particle-size: 561
particle-size: 561
particle-size: 561
particle-size: 561
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1110
particle-size: 1110
statement: return this'.data.length
particle-size: 1110
particle-size: 1110
particle-size: 1110
particle-size: 1110
statement: this'.__H1.__run()
particle-size: 41
particle-size: 41
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 41
statement: this'.Q_in.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1110
particle-size: 1110
statement: return this'.data.length
particle-size: 1110
particle-size: 1110
particle-size: 1110
particle-size: 1110
statement: this'.__S0.__run()
particle-size: 120
particle-size: 120
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 120
statement: this'.route2 = 3
particle-size: 120
statement: this'.route3 = (2 + 1)
particle-size: 120
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 120
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 120
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 120
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 120
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 120
particle-size: 120
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 360
particle-size: 360
particle-size: 360
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 120
particle-size: 120
statement: r := this'.front()
particle-size: 120
particle-size: 120
statement: return this'.data[0]
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.popFront()
particle-size: 120
particle-size: 120
statement: this'.data = this'.data[1..this'.size()]
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return r
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 120
particle-size: 120
particle-size: 120
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 120
particle-size: 120
statement: r := this'.front()
particle-size: 120
particle-size: 120
statement: return this'.data[0]
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.popFront()
particle-size: 120
particle-size: 120
statement: this'.data = this'.data[1..this'.size()]
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return r
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 120
particle-size: 120
statement: r := this'.front()
particle-size: 120
particle-size: 120
statement: return this'.data[0]
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: this'.popFront()
particle-size: 120
particle-size: 120
statement: this'.data = this'.data[1..this'.size()]
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return r
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 120
particle-size: 120
statement: return this'.data.length
particle-size: 120
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 120
particle-size: 120
particle-size: 120
statement: return ()
particle-size: 360
particle-size: 360
particle-size: 360
particle-size: 360
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1350
particle-size: 1350
statement: return this'.data.length
particle-size: 1350
particle-size: 1350
particle-size: 1350
particle-size: 1350
statement: this'.__S1.__run()
particle-size: 107
particle-size: 107
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 107
particle-size: 107
statement: r := this'.front()
particle-size: 107
particle-size: 107
statement: return this'.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this'.popFront()
particle-size: 107
particle-size: 107
statement: this'.data = this'.data[1..this'.size()]
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this'.data = this'.data ~ [x]
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1350
particle-size: 1350
statement: return this'.data.length
particle-size: 1350
particle-size: 1350
particle-size: 1350
particle-size: 1350
statement: this'.__S2.__run()
particle-size: 137
particle-size: 137
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 137
particle-size: 137
statement: r := this'.front()
particle-size: 137
particle-size: 137
statement: return this'.data[0]
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.popFront()
particle-size: 137
particle-size: 137
statement: this'.data = this'.data[1..this'.size()]
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return r
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.data = this'.data ~ [x]
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1350
particle-size: 1350
statement: return this'.data.length
particle-size: 1350
particle-size: 1350
particle-size: 1350
particle-size: 1350
statement: this'.__S3.__run()
particle-size: 144
particle-size: 144
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 144
particle-size: 144
statement: r := this'.front()
particle-size: 144
particle-size: 144
statement: return this'.data[0]
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return r
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.data = this'.data ~ [x]
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 2049
particle-size: 2049
particle-size: 2049
particle-size: 824
repetition: 12
statement: __d.__step()
particle-size: 824
particle-size: 824
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
particle-size: 824
statement: (action,node) := this'.scheduler()
particle-size: 824
particle-size: 824
statement: actions := ([]: (R × R)[])
particle-size: 824
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 824
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(0,i)]
particle-size: 770
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(1,i)]
particle-size: 156
loop-index: 1
particle-size: 824
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(0,i)]
particle-size: 87
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
loop-index: 2
particle-size: 824
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(0,i)]
particle-size: 150
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(1,i)]
particle-size: 402
loop-index: 3
particle-size: 824
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(0,i)]
particle-size: 150
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(1,i)]
particle-size: 107
loop-index: 4
particle-size: 824
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(0,i)]
particle-size: 215
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(1,i)]
particle-size: 129
loop-index: 5
particle-size: 824
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(0,i)]
particle-size: 227
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 824
particle-size: 824
statement: return this'.data.length
particle-size: 824
particle-size: 824
particle-size: 824
statement: actions ~= [(1,i)]
particle-size: 136
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 824
particle-size: 824
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2529
particle-size: 2529
particle-size: 2529
particle-size: 2529
particle-size: 2529
particle-size: 2529
particle-size: 2529
particle-size: 2529
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 930
particle-size: 930
statement: return this'.data.length
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 156
particle-size: 156
statement: r := this'.front()
particle-size: 156
particle-size: 156
statement: return this'.data[0]
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this'.popFront()
particle-size: 156
particle-size: 156
statement: this'.data = this'.data[1..this'.size()]
particle-size: 156
particle-size: 156
statement: return this'.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: return r
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 156
particle-size: 156
particle-size: 156
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 156
particle-size: 156
statement: return this'.data.length
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: this'.data = this'.data ~ [x]
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 156
particle-size: 156
particle-size: 156
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 930
particle-size: 930
statement: return this'.data.length
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 930
particle-size: 930
statement: return this'.data.length
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 402
particle-size: 402
statement: r := this'.front()
particle-size: 402
particle-size: 402
statement: return this'.data[0]
particle-size: 402
particle-size: 402
particle-size: 402
particle-size: 402
particle-size: 402
statement: this'.popFront()
particle-size: 402
particle-size: 402
statement: this'.data = this'.data[1..this'.size()]
particle-size: 402
particle-size: 402
statement: return this'.data.length
particle-size: 402
particle-size: 402
particle-size: 402
particle-size: 402
particle-size: 402
statement: return ()
particle-size: 402
particle-size: 402
particle-size: 402
particle-size: 402
statement: return r
particle-size: 402
particle-size: 402
particle-size: 402
particle-size: 402
particle-size: 402
particle-size: 402
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 134
particle-size: 134
particle-size: 134
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 134
particle-size: 134
particle-size: 134
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 134
particle-size: 134
particle-size: 134
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 134
particle-size: 134
particle-size: 134
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 134
particle-size: 134
particle-size: 134
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 134
particle-size: 134
statement: return this'.data.length
particle-size: 134
particle-size: 134
particle-size: 134
particle-size: 134
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 133
statement: return ()
particle-size: 133
particle-size: 134
particle-size: 134
particle-size: 134
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 930
particle-size: 930
statement: return this'.data.length
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 107
particle-size: 107
statement: r := this'.front()
particle-size: 107
particle-size: 107
statement: return this'.data[0]
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this'.popFront()
particle-size: 107
particle-size: 107
statement: this'.data = this'.data[1..this'.size()]
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: return r
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 107
particle-size: 107
particle-size: 107
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 107
particle-size: 107
statement: return this'.data.length
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: this'.data = this'.data ~ [x]
particle-size: 107
statement: return ()
particle-size: 107
particle-size: 107
particle-size: 107
particle-size: 107
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 930
particle-size: 930
statement: return this'.data.length
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 129
particle-size: 129
statement: r := this'.front()
particle-size: 129
particle-size: 129
statement: return this'.data[0]
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.popFront()
particle-size: 129
particle-size: 129
statement: this'.data = this'.data[1..this'.size()]
particle-size: 129
particle-size: 129
statement: return this'.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: return r
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 129
particle-size: 129
particle-size: 129
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 129
particle-size: 129
statement: return this'.data.length
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: this'.data = this'.data ~ [x]
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 129
particle-size: 129
particle-size: 129
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 930
particle-size: 930
statement: return this'.data.length
particle-size: 930
particle-size: 930
particle-size: 930
particle-size: 930
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 136
particle-size: 136
statement: r := this'.front()
particle-size: 136
particle-size: 136
statement: return this'.data[0]
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this'.popFront()
particle-size: 136
particle-size: 136
statement: this'.data = this'.data[1..this'.size()]
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return r
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 136
particle-size: 136
particle-size: 136
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: this'.data = this'.data ~ [x]
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1599
particle-size: 1599
statement: return this'.data.length
particle-size: 1599
particle-size: 1599
particle-size: 1599
particle-size: 1599
statement: this'.__H0.__run()
particle-size: 770
particle-size: 770
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 770
particle-size: 770
statement: return this
particle-size: 770
particle-size: 770
particle-size: 770
particle-size: 770
particle-size: 770
statement: this'.data = [x] ~ this'.data
particle-size: 770
statement: return ()
particle-size: 770
particle-size: 770
particle-size: 770
particle-size: 770
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 41
particle-size: 41
statement: return this
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = [x] ~ this'.data
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 41
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 41
particle-size: 41
statement: r := this'.front()
particle-size: 41
particle-size: 41
statement: return this'.data[0]
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.popFront()
particle-size: 41
particle-size: 41
statement: this'.data = this'.data[1..this'.size()]
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: return r
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 41
particle-size: 41
statement: return this'.data.length
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.data = this'.data ~ [x]
particle-size: 41
statement: return ()
particle-size: 41
particle-size: 41
particle-size: 41
particle-size: 41
statement: this'.Q_in.popFront()
particle-size: 729
particle-size: 729
statement: this'.data = this'.data[1..this'.size()]
particle-size: 729
particle-size: 729
statement: return this'.data.length
particle-size: 729
particle-size: 729
particle-size: 729
particle-size: 729
particle-size: 729
statement: return ()
particle-size: 729
particle-size: 729
particle-size: 729
particle-size: 729
statement: this'.Q_in.popFront()
particle-size: 729
particle-size: 729
statement: this'.data = this'.data[1..this'.size()]
particle-size: 729
particle-size: 729
statement: return this'.data.length
particle-size: 729
particle-size: 729
particle-size: 729
particle-size: 729
particle-size: 729
statement: return ()
particle-size: 729
particle-size: 729
particle-size: 729
particle-size: 729
statement: return ()
particle-size: 770
particle-size: 770
particle-size: 770
particle-size: 770
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1599
particle-size: 1599
statement: return this'.data.length
particle-size: 1599
particle-size: 1599
particle-size: 1599
particle-size: 1599
statement: this'.__H1.__run()
particle-size: 87
particle-size: 87
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 87
statement: this'.Q_in.popFront()
particle-size: 87
particle-size: 87
statement: this'.data = this'.data[1..this'.size()]
particle-size: 87
particle-size: 87
statement: return this'.data.length
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1599
particle-size: 1599
statement: return this'.data.length
particle-size: 1599
particle-size: 1599
particle-size: 1599
particle-size: 1599
statement: this'.__S0.__run()
particle-size: 150
particle-size: 150
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 150
statement: this'.route2 = 3
particle-size: 150
statement: this'.route3 = (2 + 1)
particle-size: 150
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 150
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 150
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 150
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 150
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 150
particle-size: 150
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 450
particle-size: 450
particle-size: 450
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 150
particle-size: 150
statement: r := this'.front()
particle-size: 150
particle-size: 150
statement: return this'.data[0]
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: this'.popFront()
particle-size: 150
particle-size: 150
statement: this'.data = this'.data[1..this'.size()]
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return r
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 141
statement: return ()
particle-size: 141
particle-size: 150
particle-size: 150
particle-size: 150
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 150
particle-size: 150
statement: r := this'.front()
particle-size: 150
particle-size: 150
statement: return this'.data[0]
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: this'.popFront()
particle-size: 150
particle-size: 150
statement: this'.data = this'.data[1..this'.size()]
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return r
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 141
statement: return ()
particle-size: 141
particle-size: 150
particle-size: 150
particle-size: 150
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 150
particle-size: 150
statement: r := this'.front()
particle-size: 150
particle-size: 150
statement: return this'.data[0]
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: this'.popFront()
particle-size: 150
particle-size: 150
statement: this'.data = this'.data[1..this'.size()]
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return r
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 141
statement: return ()
particle-size: 141
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 450
particle-size: 450
particle-size: 450
particle-size: 450
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1899
particle-size: 1899
statement: return this'.data.length
particle-size: 1899
particle-size: 1899
particle-size: 1899
particle-size: 1899
statement: this'.__S1.__run()
particle-size: 150
particle-size: 150
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 150
particle-size: 150
statement: r := this'.front()
particle-size: 150
particle-size: 150
statement: return this'.data[0]
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: this'.popFront()
particle-size: 150
particle-size: 150
statement: this'.data = this'.data[1..this'.size()]
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return r
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: this'.data = this'.data ~ [x]
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1899
particle-size: 1899
statement: return this'.data.length
particle-size: 1899
particle-size: 1899
particle-size: 1899
particle-size: 1899
statement: this'.__S2.__run()
particle-size: 215
particle-size: 215
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 215
particle-size: 215
statement: r := this'.front()
particle-size: 215
particle-size: 215
statement: return this'.data[0]
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: this'.popFront()
particle-size: 215
particle-size: 215
statement: this'.data = this'.data[1..this'.size()]
particle-size: 215
particle-size: 215
statement: return this'.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: return ()
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: return r
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 215
particle-size: 215
statement: return this'.data.length
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: this'.data = this'.data ~ [x]
particle-size: 215
statement: return ()
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: return ()
particle-size: 215
particle-size: 215
particle-size: 215
particle-size: 215
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1899
particle-size: 1899
statement: return this'.data.length
particle-size: 1899
particle-size: 1899
particle-size: 1899
particle-size: 1899
statement: this'.__S3.__run()
particle-size: 227
particle-size: 227
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 227
particle-size: 227
statement: r := this'.front()
particle-size: 227
particle-size: 227
statement: return this'.data[0]
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: this'.popFront()
particle-size: 227
particle-size: 227
statement: this'.data = this'.data[1..this'.size()]
particle-size: 227
particle-size: 227
statement: return this'.data.length
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: return ()
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: return r
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 227
particle-size: 227
statement: return this'.data.length
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: this'.data = this'.data ~ [x]
particle-size: 227
statement: return ()
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: return ()
particle-size: 227
particle-size: 227
particle-size: 227
particle-size: 227
statement: return ()
particle-size: 2829
particle-size: 2829
particle-size: 2829
particle-size: 1083
repetition: 13
statement: __d.__step()
particle-size: 1083
particle-size: 1083
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: (action,node) := this'.scheduler()
particle-size: 1083
particle-size: 1083
statement: actions := ([]: (R × R)[])
particle-size: 1083
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1083
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(0,i)]
particle-size: 984
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(1,i)]
particle-size: 179
loop-index: 1
particle-size: 1083
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(0,i)]
particle-size: 136
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
loop-index: 2
particle-size: 1083
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(0,i)]
particle-size: 169
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(1,i)]
particle-size: 486
loop-index: 3
particle-size: 1083
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(0,i)]
particle-size: 193
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(1,i)]
particle-size: 151
loop-index: 4
particle-size: 1083
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(0,i)]
particle-size: 290
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(1,i)]
particle-size: 201
loop-index: 5
particle-size: 1083
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(0,i)]
particle-size: 311
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1083
particle-size: 1083
statement: return this'.data.length
particle-size: 1083
particle-size: 1083
particle-size: 1083
statement: actions ~= [(1,i)]
particle-size: 213
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1083
particle-size: 1083
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 3313
particle-size: 3313
particle-size: 3313
particle-size: 3313
particle-size: 3313
particle-size: 3313
particle-size: 3313
particle-size: 3313
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1230
particle-size: 1230
statement: return this'.data.length
particle-size: 1230
particle-size: 1230
particle-size: 1230
particle-size: 1230
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 179
particle-size: 179
statement: r := this'.front()
particle-size: 179
particle-size: 179
statement: return this'.data[0]
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: this'.popFront()
particle-size: 179
particle-size: 179
statement: this'.data = this'.data[1..this'.size()]
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: return ()
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: return r
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 179
particle-size: 179
particle-size: 179
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 179
particle-size: 179
statement: return this'.data.length
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: this'.data = this'.data ~ [x]
particle-size: 179
statement: return ()
particle-size: 179
particle-size: 179
particle-size: 179
particle-size: 179
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1230
particle-size: 1230
statement: return this'.data.length
particle-size: 1230
particle-size: 1230
particle-size: 1230
particle-size: 1230
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1230
particle-size: 1230
statement: return this'.data.length
particle-size: 1230
particle-size: 1230
particle-size: 1230
particle-size: 1230
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 486
particle-size: 486
statement: r := this'.front()
particle-size: 486
particle-size: 486
statement: return this'.data[0]
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: this'.popFront()
particle-size: 486
particle-size: 486
statement: this'.data = this'.data[1..this'.size()]
particle-size: 486
particle-size: 486
statement: return this'.data.length
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: return ()
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: return r
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
particle-size: 486
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 162
particle-size: 162
particle-size: 162
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 161
statement: return ()
particle-size: 161
particle-size: 162
particle-size: 162
particle-size: 162
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 162
particle-size: 162
particle-size: 162
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 162
particle-size: 162
particle-size: 162
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 162
particle-size: 162
particle-size: 162
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 162
particle-size: 162
statement: return this'.data.length
particle-size: 162
particle-size: 162
particle-size: 162
particle-size: 162
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 162
particle-size: 162
particle-size: 162
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1230
particle-size: 1230
statement: return this'.data.length
particle-size: 1230
particle-size: 1230
particle-size: 1230
particle-size: 1230
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 151
particle-size: 151
statement: r := this'.front()
particle-size: 151
particle-size: 151
statement: return this'.data[0]
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: this'.popFront()
particle-size: 151
particle-size: 151
statement: this'.data = this'.data[1..this'.size()]
particle-size: 151
particle-size: 151
statement: return this'.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return ()
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return r
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 151
particle-size: 151
particle-size: 151
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 151
particle-size: 151
statement: return this'.data.length
particle-size: 151
particle-size: 151
particle-size: 151
particle-size: 151
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 151
particle-size: 151
particle-size: 151
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1230
particle-size: 1230
statement: return this'.data.length
particle-size: 1230
particle-size: 1230
particle-size: 1230
particle-size: 1230
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 201
particle-size: 201
statement: r := this'.front()
particle-size: 201
particle-size: 201
statement: return this'.data[0]
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: this'.popFront()
particle-size: 201
particle-size: 201
statement: this'.data = this'.data[1..this'.size()]
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: return ()
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: return r
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 201
particle-size: 201
particle-size: 201
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 201
particle-size: 201
statement: return this'.data.length
particle-size: 201
particle-size: 201
particle-size: 201
particle-size: 201
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 199
statement: return ()
particle-size: 199
particle-size: 201
particle-size: 201
particle-size: 201
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1230
particle-size: 1230
statement: return this'.data.length
particle-size: 1230
particle-size: 1230
particle-size: 1230
particle-size: 1230
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 213
particle-size: 213
statement: r := this'.front()
particle-size: 213
particle-size: 213
statement: return this'.data[0]
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: this'.popFront()
particle-size: 213
particle-size: 213
statement: this'.data = this'.data[1..this'.size()]
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return ()
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return r
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 213
particle-size: 213
particle-size: 213
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: this'.data = this'.data ~ [x]
particle-size: 213
statement: return ()
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2083
particle-size: 2083
statement: return this'.data.length
particle-size: 2083
particle-size: 2083
particle-size: 2083
particle-size: 2083
statement: this'.__H0.__run()
particle-size: 984
particle-size: 984
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 984
particle-size: 984
statement: return this
particle-size: 984
particle-size: 984
particle-size: 984
particle-size: 984
particle-size: 984
statement: this'.data = [x] ~ this'.data
particle-size: 984
statement: return ()
particle-size: 984
particle-size: 984
particle-size: 984
particle-size: 984
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 32
particle-size: 32
statement: return this
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = [x] ~ this'.data
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 32
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.Q_in.popFront()
particle-size: 952
particle-size: 952
statement: this'.data = this'.data[1..this'.size()]
particle-size: 952
particle-size: 952
statement: return this'.data.length
particle-size: 952
particle-size: 952
particle-size: 952
particle-size: 952
particle-size: 952
statement: return ()
particle-size: 952
particle-size: 952
particle-size: 952
particle-size: 952
statement: this'.Q_in.popFront()
particle-size: 952
particle-size: 952
statement: this'.data = this'.data[1..this'.size()]
particle-size: 952
particle-size: 952
statement: return this'.data.length
particle-size: 952
particle-size: 952
particle-size: 952
particle-size: 952
particle-size: 952
statement: return ()
particle-size: 952
particle-size: 952
particle-size: 952
particle-size: 952
statement: return ()
particle-size: 984
particle-size: 984
particle-size: 984
particle-size: 984
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2083
particle-size: 2083
statement: return this'.data.length
particle-size: 2083
particle-size: 2083
particle-size: 2083
particle-size: 2083
statement: this'.__H1.__run()
particle-size: 136
particle-size: 136
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 136
statement: this'.Q_in.popFront()
particle-size: 136
particle-size: 136
statement: this'.data = this'.data[1..this'.size()]
particle-size: 136
particle-size: 136
statement: return this'.data.length
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: return ()
particle-size: 136
particle-size: 136
particle-size: 136
particle-size: 136
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2083
particle-size: 2083
statement: return this'.data.length
particle-size: 2083
particle-size: 2083
particle-size: 2083
particle-size: 2083
statement: this'.__S0.__run()
particle-size: 169
particle-size: 169
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 169
statement: this'.route2 = 3
particle-size: 169
statement: this'.route3 = (2 + 1)
particle-size: 169
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 169
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 169
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 169
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 169
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 169
particle-size: 169
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 507
particle-size: 507
particle-size: 507
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 169
particle-size: 169
statement: r := this'.front()
particle-size: 169
particle-size: 169
statement: return this'.data[0]
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this'.popFront()
particle-size: 169
particle-size: 169
statement: this'.data = this'.data[1..this'.size()]
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return r
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this'.data = this'.data ~ [x]
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 169
particle-size: 169
statement: r := this'.front()
particle-size: 169
particle-size: 169
statement: return this'.data[0]
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this'.popFront()
particle-size: 169
particle-size: 169
statement: this'.data = this'.data[1..this'.size()]
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return r
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this'.data = this'.data ~ [x]
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 169
particle-size: 169
statement: r := this'.front()
particle-size: 169
particle-size: 169
statement: return this'.data[0]
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this'.popFront()
particle-size: 169
particle-size: 169
statement: this'.data = this'.data[1..this'.size()]
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return r
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 169
particle-size: 169
statement: return this'.data.length
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: this'.data = this'.data ~ [x]
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 169
particle-size: 169
particle-size: 169
statement: return ()
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2421
particle-size: 2421
statement: return this'.data.length
particle-size: 2421
particle-size: 2421
particle-size: 2421
particle-size: 2421
statement: this'.__S1.__run()
particle-size: 193
particle-size: 193
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 193
particle-size: 193
statement: r := this'.front()
particle-size: 193
particle-size: 193
statement: return this'.data[0]
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.popFront()
particle-size: 193
particle-size: 193
statement: this'.data = this'.data[1..this'.size()]
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return r
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.data = this'.data ~ [x]
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2421
particle-size: 2421
statement: return this'.data.length
particle-size: 2421
particle-size: 2421
particle-size: 2421
particle-size: 2421
statement: this'.__S2.__run()
particle-size: 290
particle-size: 290
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 290
particle-size: 290
statement: r := this'.front()
particle-size: 290
particle-size: 290
statement: return this'.data[0]
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: this'.popFront()
particle-size: 290
particle-size: 290
statement: this'.data = this'.data[1..this'.size()]
particle-size: 290
particle-size: 290
statement: return this'.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: return ()
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: return r
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 290
particle-size: 290
statement: return this'.data.length
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: this'.data = this'.data ~ [x]
particle-size: 290
statement: return ()
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: return ()
particle-size: 290
particle-size: 290
particle-size: 290
particle-size: 290
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2421
particle-size: 2421
statement: return this'.data.length
particle-size: 2421
particle-size: 2421
particle-size: 2421
particle-size: 2421
statement: this'.__S3.__run()
particle-size: 311
particle-size: 311
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 311
particle-size: 311
statement: r := this'.front()
particle-size: 311
particle-size: 311
statement: return this'.data[0]
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: this'.popFront()
particle-size: 311
particle-size: 311
statement: this'.data = this'.data[1..this'.size()]
particle-size: 311
particle-size: 311
statement: return this'.data.length
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: return ()
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: return r
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 311
particle-size: 311
statement: return this'.data.length
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: this'.data = this'.data ~ [x]
particle-size: 311
statement: return ()
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: return ()
particle-size: 311
particle-size: 311
particle-size: 311
particle-size: 311
statement: return ()
particle-size: 3651
particle-size: 3651
particle-size: 3651
particle-size: 1329
repetition: 14
statement: __d.__step()
particle-size: 1329
particle-size: 1329
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: (action,node) := this'.scheduler()
particle-size: 1329
particle-size: 1329
statement: actions := ([]: (R × R)[])
particle-size: 1329
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1329
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(0,i)]
particle-size: 1175
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(1,i)]
particle-size: 184
loop-index: 1
particle-size: 1329
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(0,i)]
particle-size: 213
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
loop-index: 2
particle-size: 1329
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(0,i)]
particle-size: 190
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(1,i)]
particle-size: 528
loop-index: 3
particle-size: 1329
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(0,i)]
particle-size: 238
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(1,i)]
particle-size: 194
loop-index: 4
particle-size: 1329
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(0,i)]
particle-size: 373
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(1,i)]
particle-size: 268
loop-index: 5
particle-size: 1329
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(0,i)]
particle-size: 420
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1329
particle-size: 1329
statement: return this'.data.length
particle-size: 1329
particle-size: 1329
particle-size: 1329
statement: actions ~= [(1,i)]
particle-size: 288
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1329
particle-size: 1329
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4071
particle-size: 4071
particle-size: 4071
particle-size: 4071
particle-size: 4071
particle-size: 4071
particle-size: 4071
particle-size: 4071
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1462
particle-size: 1462
statement: return this'.data.length
particle-size: 1462
particle-size: 1462
particle-size: 1462
particle-size: 1462
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 184
particle-size: 184
statement: r := this'.front()
particle-size: 184
particle-size: 184
statement: return this'.data[0]
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: this'.popFront()
particle-size: 184
particle-size: 184
statement: this'.data = this'.data[1..this'.size()]
particle-size: 184
particle-size: 184
statement: return this'.data.length
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return r
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 184
particle-size: 184
particle-size: 184
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 184
particle-size: 184
statement: return this'.data.length
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: this'.data = this'.data ~ [x]
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1462
particle-size: 1462
statement: return this'.data.length
particle-size: 1462
particle-size: 1462
particle-size: 1462
particle-size: 1462
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1462
particle-size: 1462
statement: return this'.data.length
particle-size: 1462
particle-size: 1462
particle-size: 1462
particle-size: 1462
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 528
particle-size: 528
statement: r := this'.front()
particle-size: 528
particle-size: 528
statement: return this'.data[0]
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 528
statement: this'.popFront()
particle-size: 528
particle-size: 528
statement: this'.data = this'.data[1..this'.size()]
particle-size: 528
particle-size: 528
statement: return this'.data.length
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 528
statement: return ()
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 528
statement: return r
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 528
particle-size: 528
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 176
particle-size: 176
particle-size: 176
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 176
particle-size: 176
statement: return this'.data.length
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 175
statement: return ()
particle-size: 175
particle-size: 176
particle-size: 176
particle-size: 176
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 176
particle-size: 176
particle-size: 176
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 176
particle-size: 176
statement: return this'.data.length
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 173
statement: return ()
particle-size: 173
particle-size: 176
particle-size: 176
particle-size: 176
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 176
particle-size: 176
particle-size: 176
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 176
particle-size: 176
statement: return this'.data.length
particle-size: 176
particle-size: 176
particle-size: 176
particle-size: 176
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 173
statement: return ()
particle-size: 173
particle-size: 176
particle-size: 176
particle-size: 176
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1462
particle-size: 1462
statement: return this'.data.length
particle-size: 1462
particle-size: 1462
particle-size: 1462
particle-size: 1462
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 194
particle-size: 194
statement: r := this'.front()
particle-size: 194
particle-size: 194
statement: return this'.data[0]
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: this'.popFront()
particle-size: 194
particle-size: 194
statement: this'.data = this'.data[1..this'.size()]
particle-size: 194
particle-size: 194
statement: return this'.data.length
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: return ()
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: return r
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 194
particle-size: 194
particle-size: 194
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 194
particle-size: 194
statement: return this'.data.length
particle-size: 194
particle-size: 194
particle-size: 194
particle-size: 194
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 192
statement: return ()
particle-size: 192
particle-size: 194
particle-size: 194
particle-size: 194
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1462
particle-size: 1462
statement: return this'.data.length
particle-size: 1462
particle-size: 1462
particle-size: 1462
particle-size: 1462
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 268
particle-size: 268
statement: r := this'.front()
particle-size: 268
particle-size: 268
statement: return this'.data[0]
particle-size: 268
particle-size: 268
particle-size: 268
particle-size: 268
particle-size: 268
statement: this'.popFront()
particle-size: 268
particle-size: 268
statement: this'.data = this'.data[1..this'.size()]
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
particle-size: 268
particle-size: 268
statement: return ()
particle-size: 268
particle-size: 268
particle-size: 268
particle-size: 268
statement: return r
particle-size: 268
particle-size: 268
particle-size: 268
particle-size: 268
particle-size: 268
particle-size: 268
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 268
particle-size: 268
particle-size: 268
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 268
particle-size: 268
statement: return this'.data.length
particle-size: 268
particle-size: 268
particle-size: 268
particle-size: 268
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 266
statement: return ()
particle-size: 266
particle-size: 268
particle-size: 268
particle-size: 268
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1462
particle-size: 1462
statement: return this'.data.length
particle-size: 1462
particle-size: 1462
particle-size: 1462
particle-size: 1462
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 288
particle-size: 288
statement: r := this'.front()
particle-size: 288
particle-size: 288
statement: return this'.data[0]
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: this'.popFront()
particle-size: 288
particle-size: 288
statement: this'.data = this'.data[1..this'.size()]
particle-size: 288
particle-size: 288
statement: return this'.data.length
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: return ()
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: return r
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 288
particle-size: 288
particle-size: 288
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 288
particle-size: 288
statement: return this'.data.length
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: this'.data = this'.data ~ [x]
particle-size: 288
statement: return ()
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2609
particle-size: 2609
statement: return this'.data.length
particle-size: 2609
particle-size: 2609
particle-size: 2609
particle-size: 2609
statement: this'.__H0.__run()
particle-size: 1175
particle-size: 1175
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1175
particle-size: 1175
statement: return this
particle-size: 1175
particle-size: 1175
particle-size: 1175
particle-size: 1175
particle-size: 1175
statement: this'.data = [x] ~ this'.data
particle-size: 1175
statement: return ()
particle-size: 1175
particle-size: 1175
particle-size: 1175
particle-size: 1175
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 31
particle-size: 31
statement: return this
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = [x] ~ this'.data
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 31
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 31
particle-size: 31
statement: r := this'.front()
particle-size: 31
particle-size: 31
statement: return this'.data[0]
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.popFront()
particle-size: 31
particle-size: 31
statement: this'.data = this'.data[1..this'.size()]
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: return r
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 31
particle-size: 31
statement: return this'.data.length
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.data = this'.data ~ [x]
particle-size: 31
statement: return ()
particle-size: 31
particle-size: 31
particle-size: 31
particle-size: 31
statement: this'.Q_in.popFront()
particle-size: 1144
particle-size: 1144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1144
particle-size: 1144
statement: return this'.data.length
particle-size: 1144
particle-size: 1144
particle-size: 1144
particle-size: 1144
particle-size: 1144
statement: return ()
particle-size: 1144
particle-size: 1144
particle-size: 1144
particle-size: 1144
statement: this'.Q_in.popFront()
particle-size: 1144
particle-size: 1144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1144
particle-size: 1144
statement: return this'.data.length
particle-size: 1144
particle-size: 1144
particle-size: 1144
particle-size: 1144
particle-size: 1144
statement: return ()
particle-size: 1144
particle-size: 1144
particle-size: 1144
particle-size: 1144
statement: return ()
particle-size: 1175
particle-size: 1175
particle-size: 1175
particle-size: 1175
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2609
particle-size: 2609
statement: return this'.data.length
particle-size: 2609
particle-size: 2609
particle-size: 2609
particle-size: 2609
statement: this'.__H1.__run()
particle-size: 213
particle-size: 213
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 213
statement: this'.Q_in.popFront()
particle-size: 213
particle-size: 213
statement: this'.data = this'.data[1..this'.size()]
particle-size: 213
particle-size: 213
statement: return this'.data.length
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return ()
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: return ()
particle-size: 213
particle-size: 213
particle-size: 213
particle-size: 213
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2609
particle-size: 2609
statement: return this'.data.length
particle-size: 2609
particle-size: 2609
particle-size: 2609
particle-size: 2609
statement: this'.__S0.__run()
particle-size: 190
particle-size: 190
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 190
statement: this'.route2 = 3
particle-size: 190
statement: this'.route3 = (2 + 1)
particle-size: 190
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 190
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 190
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 190
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 190
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 190
particle-size: 190
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 570
particle-size: 570
particle-size: 570
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 190
particle-size: 190
statement: r := this'.front()
particle-size: 190
particle-size: 190
statement: return this'.data[0]
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.popFront()
particle-size: 190
particle-size: 190
statement: this'.data = this'.data[1..this'.size()]
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return r
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.data = this'.data ~ [x]
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 190
particle-size: 190
statement: r := this'.front()
particle-size: 190
particle-size: 190
statement: return this'.data[0]
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.popFront()
particle-size: 190
particle-size: 190
statement: this'.data = this'.data[1..this'.size()]
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return r
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.data = this'.data ~ [x]
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 190
particle-size: 190
statement: r := this'.front()
particle-size: 190
particle-size: 190
statement: return this'.data[0]
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.popFront()
particle-size: 190
particle-size: 190
statement: this'.data = this'.data[1..this'.size()]
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return r
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.data = this'.data ~ [x]
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return ()
particle-size: 570
particle-size: 570
particle-size: 570
particle-size: 570
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2989
particle-size: 2989
statement: return this'.data.length
particle-size: 2989
particle-size: 2989
particle-size: 2989
particle-size: 2989
statement: this'.__S1.__run()
particle-size: 238
particle-size: 238
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 238
particle-size: 238
statement: r := this'.front()
particle-size: 238
particle-size: 238
statement: return this'.data[0]
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: this'.popFront()
particle-size: 238
particle-size: 238
statement: this'.data = this'.data[1..this'.size()]
particle-size: 238
particle-size: 238
statement: return this'.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return r
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 238
particle-size: 238
statement: return this'.data.length
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 237
statement: return ()
particle-size: 237
particle-size: 238
particle-size: 238
particle-size: 238
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 238
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2989
particle-size: 2989
statement: return this'.data.length
particle-size: 2989
particle-size: 2989
particle-size: 2989
particle-size: 2989
statement: this'.__S2.__run()
particle-size: 373
particle-size: 373
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 373
particle-size: 373
statement: r := this'.front()
particle-size: 373
particle-size: 373
statement: return this'.data[0]
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: this'.popFront()
particle-size: 373
particle-size: 373
statement: this'.data = this'.data[1..this'.size()]
particle-size: 373
particle-size: 373
statement: return this'.data.length
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: return ()
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: return r
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 373
particle-size: 373
statement: return this'.data.length
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 372
statement: return ()
particle-size: 372
particle-size: 373
particle-size: 373
particle-size: 373
statement: return ()
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2989
particle-size: 2989
statement: return this'.data.length
particle-size: 2989
particle-size: 2989
particle-size: 2989
particle-size: 2989
statement: this'.__S3.__run()
particle-size: 420
particle-size: 420
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 420
particle-size: 420
statement: r := this'.front()
particle-size: 420
particle-size: 420
statement: return this'.data[0]
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: this'.popFront()
particle-size: 420
particle-size: 420
statement: this'.data = this'.data[1..this'.size()]
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return ()
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return r
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 420
particle-size: 420
statement: return this'.data.length
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 419
statement: return ()
particle-size: 419
particle-size: 420
particle-size: 420
particle-size: 420
statement: return ()
particle-size: 420
particle-size: 420
particle-size: 420
particle-size: 420
statement: return ()
particle-size: 4451
particle-size: 4451
particle-size: 4451
particle-size: 1543
repetition: 15
statement: __d.__step()
particle-size: 1543
particle-size: 1543
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: (action,node) := this'.scheduler()
particle-size: 1543
particle-size: 1543
statement: actions := ([]: (R × R)[])
particle-size: 1543
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(0,i)]
particle-size: 1327
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(1,i)]
particle-size: 184
loop-index: 1
particle-size: 1543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(0,i)]
particle-size: 288
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
loop-index: 2
particle-size: 1543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(0,i)]
particle-size: 193
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(1,i)]
particle-size: 543
loop-index: 3
particle-size: 1543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(0,i)]
particle-size: 257
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(1,i)]
particle-size: 239
loop-index: 4
particle-size: 1543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(0,i)]
particle-size: 432
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(1,i)]
particle-size: 336
loop-index: 5
particle-size: 1543
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(0,i)]
particle-size: 500
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1543
particle-size: 1543
statement: return this'.data.length
particle-size: 1543
particle-size: 1543
particle-size: 1543
statement: actions ~= [(1,i)]
particle-size: 382
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1543
particle-size: 1543
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4681
particle-size: 4681
particle-size: 4681
particle-size: 4681
particle-size: 4681
particle-size: 4681
particle-size: 4681
particle-size: 4681
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 184
particle-size: 184
statement: r := this'.front()
particle-size: 184
particle-size: 184
statement: return this'.data[0]
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: this'.popFront()
particle-size: 184
particle-size: 184
statement: this'.data = this'.data[1..this'.size()]
particle-size: 184
particle-size: 184
statement: return this'.data.length
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: return r
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 184
particle-size: 184
particle-size: 184
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 184
particle-size: 184
statement: return this'.data.length
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: this'.data = this'.data ~ [x]
particle-size: 184
statement: return ()
particle-size: 184
particle-size: 184
particle-size: 184
particle-size: 184
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 543
particle-size: 543
statement: r := this'.front()
particle-size: 543
particle-size: 543
statement: return this'.data[0]
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: this'.popFront()
particle-size: 543
particle-size: 543
statement: this'.data = this'.data[1..this'.size()]
particle-size: 543
particle-size: 543
statement: return this'.data.length
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return ()
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: return r
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
particle-size: 543
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 181
particle-size: 181
particle-size: 181
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 180
statement: return ()
particle-size: 180
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 181
particle-size: 181
particle-size: 181
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 175
statement: return ()
particle-size: 175
particle-size: 181
particle-size: 181
particle-size: 181
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 181
particle-size: 181
particle-size: 181
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
particle-size: 181
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 177
statement: return ()
particle-size: 177
particle-size: 181
particle-size: 181
particle-size: 181
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 239
particle-size: 239
statement: r := this'.front()
particle-size: 239
particle-size: 239
statement: return this'.data[0]
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: this'.popFront()
particle-size: 239
particle-size: 239
statement: this'.data = this'.data[1..this'.size()]
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return ()
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return r
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 239
particle-size: 239
particle-size: 239
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 239
particle-size: 239
statement: return this'.data.length
particle-size: 239
particle-size: 239
particle-size: 239
particle-size: 239
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 233
statement: return ()
particle-size: 233
particle-size: 239
particle-size: 239
particle-size: 239
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 336
particle-size: 336
statement: r := this'.front()
particle-size: 336
particle-size: 336
statement: return this'.data[0]
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
statement: this'.popFront()
particle-size: 336
particle-size: 336
statement: this'.data = this'.data[1..this'.size()]
particle-size: 336
particle-size: 336
statement: return this'.data.length
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
statement: return ()
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
statement: return r
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 336
particle-size: 336
particle-size: 336
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 336
particle-size: 336
statement: return this'.data.length
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
statement: return ()
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 328
statement: return ()
particle-size: 328
particle-size: 336
particle-size: 336
particle-size: 336
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 382
particle-size: 382
statement: r := this'.front()
particle-size: 382
particle-size: 382
statement: return this'.data[0]
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: this'.popFront()
particle-size: 382
particle-size: 382
statement: this'.data = this'.data[1..this'.size()]
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: return ()
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: return r
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 382
particle-size: 382
particle-size: 382
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 382
particle-size: 382
statement: return this'.data.length
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: this'.data = this'.data ~ [x]
particle-size: 382
statement: return ()
particle-size: 382
particle-size: 382
particle-size: 382
particle-size: 382
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2997
particle-size: 2997
statement: return this'.data.length
particle-size: 2997
particle-size: 2997
particle-size: 2997
particle-size: 2997
statement: this'.__H0.__run()
particle-size: 1327
particle-size: 1327
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1327
particle-size: 1327
statement: return this
particle-size: 1327
particle-size: 1327
particle-size: 1327
particle-size: 1327
particle-size: 1327
statement: this'.data = [x] ~ this'.data
particle-size: 1327
statement: return ()
particle-size: 1327
particle-size: 1327
particle-size: 1327
particle-size: 1327
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 20
particle-size: 20
statement: return this
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = [x] ~ this'.data
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_in.popFront()
particle-size: 1307
particle-size: 1307
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1307
particle-size: 1307
statement: return this'.data.length
particle-size: 1307
particle-size: 1307
particle-size: 1307
particle-size: 1307
particle-size: 1307
statement: return ()
particle-size: 1307
particle-size: 1307
particle-size: 1307
particle-size: 1307
statement: this'.Q_in.popFront()
particle-size: 1307
particle-size: 1307
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1307
particle-size: 1307
statement: return this'.data.length
particle-size: 1307
particle-size: 1307
particle-size: 1307
particle-size: 1307
particle-size: 1307
statement: return ()
particle-size: 1307
particle-size: 1307
particle-size: 1307
particle-size: 1307
statement: return ()
particle-size: 1327
particle-size: 1327
particle-size: 1327
particle-size: 1327
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2997
particle-size: 2997
statement: return this'.data.length
particle-size: 2997
particle-size: 2997
particle-size: 2997
particle-size: 2997
statement: this'.__H1.__run()
particle-size: 288
particle-size: 288
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 288
statement: this'.Q_in.popFront()
particle-size: 288
particle-size: 288
statement: this'.data = this'.data[1..this'.size()]
particle-size: 288
particle-size: 288
statement: return this'.data.length
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: return ()
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: return ()
particle-size: 288
particle-size: 288
particle-size: 288
particle-size: 288
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2997
particle-size: 2997
statement: return this'.data.length
particle-size: 2997
particle-size: 2997
particle-size: 2997
particle-size: 2997
statement: this'.__S0.__run()
particle-size: 193
particle-size: 193
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 193
statement: this'.route2 = 3
particle-size: 193
statement: this'.route3 = (2 + 1)
particle-size: 193
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 193
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 193
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 193
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 193
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 193
particle-size: 193
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 579
particle-size: 579
particle-size: 579
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 193
particle-size: 193
statement: r := this'.front()
particle-size: 193
particle-size: 193
statement: return this'.data[0]
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.popFront()
particle-size: 193
particle-size: 193
statement: this'.data = this'.data[1..this'.size()]
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return r
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.data = this'.data ~ [x]
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 193
particle-size: 193
statement: r := this'.front()
particle-size: 193
particle-size: 193
statement: return this'.data[0]
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.popFront()
particle-size: 193
particle-size: 193
statement: this'.data = this'.data[1..this'.size()]
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return r
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.data = this'.data ~ [x]
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 193
particle-size: 193
statement: r := this'.front()
particle-size: 193
particle-size: 193
statement: return this'.data[0]
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.popFront()
particle-size: 193
particle-size: 193
statement: this'.data = this'.data[1..this'.size()]
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return r
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 193
particle-size: 193
statement: return this'.data.length
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: this'.data = this'.data ~ [x]
particle-size: 193
statement: return ()
particle-size: 193
particle-size: 193
particle-size: 193
particle-size: 193
statement: return ()
particle-size: 579
particle-size: 579
particle-size: 579
particle-size: 579
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3383
particle-size: 3383
statement: return this'.data.length
particle-size: 3383
particle-size: 3383
particle-size: 3383
particle-size: 3383
statement: this'.__S1.__run()
particle-size: 257
particle-size: 257
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 257
particle-size: 257
statement: r := this'.front()
particle-size: 257
particle-size: 257
statement: return this'.data[0]
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: this'.popFront()
particle-size: 257
particle-size: 257
statement: this'.data = this'.data[1..this'.size()]
particle-size: 257
particle-size: 257
statement: return this'.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return r
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 257
particle-size: 257
statement: return this'.data.length
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 256
statement: return ()
particle-size: 256
particle-size: 257
particle-size: 257
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 257
particle-size: 257
particle-size: 257
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3383
particle-size: 3383
statement: return this'.data.length
particle-size: 3383
particle-size: 3383
particle-size: 3383
particle-size: 3383
statement: this'.__S2.__run()
particle-size: 432
particle-size: 432
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 432
particle-size: 432
statement: r := this'.front()
particle-size: 432
particle-size: 432
statement: return this'.data[0]
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: this'.popFront()
particle-size: 432
particle-size: 432
statement: this'.data = this'.data[1..this'.size()]
particle-size: 432
particle-size: 432
statement: return this'.data.length
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: return ()
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: return r
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 432
particle-size: 432
statement: return this'.data.length
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 431
statement: return ()
particle-size: 431
particle-size: 432
particle-size: 432
particle-size: 432
statement: return ()
particle-size: 432
particle-size: 432
particle-size: 432
particle-size: 432
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3383
particle-size: 3383
statement: return this'.data.length
particle-size: 3383
particle-size: 3383
particle-size: 3383
particle-size: 3383
statement: this'.__S3.__run()
particle-size: 500
particle-size: 500
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 500
particle-size: 500
statement: r := this'.front()
particle-size: 500
particle-size: 500
statement: return this'.data[0]
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: this'.popFront()
particle-size: 500
particle-size: 500
statement: this'.data = this'.data[1..this'.size()]
particle-size: 500
particle-size: 500
statement: return this'.data.length
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: return ()
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: return r
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 500
particle-size: 500
statement: return this'.data.length
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 499
statement: return ()
particle-size: 499
particle-size: 500
particle-size: 500
particle-size: 500
statement: return ()
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: return ()
particle-size: 5067
particle-size: 5067
particle-size: 5067
particle-size: 1694
repetition: 16
statement: __d.__step()
particle-size: 1694
particle-size: 1694
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: (action,node) := this'.scheduler()
particle-size: 1694
particle-size: 1694
statement: actions := ([]: (R × R)[])
particle-size: 1694
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1694
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(0,i)]
particle-size: 1434
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(1,i)]
particle-size: 163
loop-index: 1
particle-size: 1694
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(0,i)]
particle-size: 383
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
loop-index: 2
particle-size: 1694
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(0,i)]
particle-size: 190
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(1,i)]
particle-size: 516
loop-index: 3
particle-size: 1694
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(0,i)]
particle-size: 277
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(1,i)]
particle-size: 259
loop-index: 4
particle-size: 1694
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(0,i)]
particle-size: 496
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(1,i)]
particle-size: 373
loop-index: 5
particle-size: 1694
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(0,i)]
particle-size: 582
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1694
particle-size: 1694
statement: return this'.data.length
particle-size: 1694
particle-size: 1694
particle-size: 1694
statement: actions ~= [(1,i)]
particle-size: 439
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1694
particle-size: 1694
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 5112
particle-size: 5112
particle-size: 5112
particle-size: 5112
particle-size: 5112
particle-size: 5112
particle-size: 5112
particle-size: 5112
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1750
particle-size: 1750
statement: return this'.data.length
particle-size: 1750
particle-size: 1750
particle-size: 1750
particle-size: 1750
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 163
particle-size: 163
statement: r := this'.front()
particle-size: 163
particle-size: 163
statement: return this'.data[0]
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: this'.popFront()
particle-size: 163
particle-size: 163
statement: this'.data = this'.data[1..this'.size()]
particle-size: 163
particle-size: 163
statement: return this'.data.length
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return ()
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return r
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 163
particle-size: 163
particle-size: 163
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 163
particle-size: 163
statement: return this'.data.length
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: this'.data = this'.data ~ [x]
particle-size: 163
statement: return ()
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1750
particle-size: 1750
statement: return this'.data.length
particle-size: 1750
particle-size: 1750
particle-size: 1750
particle-size: 1750
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1750
particle-size: 1750
statement: return this'.data.length
particle-size: 1750
particle-size: 1750
particle-size: 1750
particle-size: 1750
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 516
particle-size: 516
statement: r := this'.front()
particle-size: 516
particle-size: 516
statement: return this'.data[0]
particle-size: 516
particle-size: 516
particle-size: 516
particle-size: 516
particle-size: 516
statement: this'.popFront()
particle-size: 516
particle-size: 516
statement: this'.data = this'.data[1..this'.size()]
particle-size: 516
particle-size: 516
statement: return this'.data.length
particle-size: 516
particle-size: 516
particle-size: 516
particle-size: 516
particle-size: 516
statement: return ()
particle-size: 516
particle-size: 516
particle-size: 516
particle-size: 516
statement: return r
particle-size: 516
particle-size: 516
particle-size: 516
particle-size: 516
particle-size: 516
particle-size: 516
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 172
particle-size: 172
particle-size: 172
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: this'.data = this'.data ~ [x]
particle-size: 172
statement: return ()
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 172
particle-size: 172
particle-size: 172
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: return ()
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 172
particle-size: 172
particle-size: 172
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 172
particle-size: 172
particle-size: 172
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 172
particle-size: 172
statement: return this'.data.length
particle-size: 172
particle-size: 172
particle-size: 172
particle-size: 172
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 169
statement: return ()
particle-size: 169
particle-size: 172
particle-size: 172
particle-size: 172
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1750
particle-size: 1750
statement: return this'.data.length
particle-size: 1750
particle-size: 1750
particle-size: 1750
particle-size: 1750
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 259
particle-size: 259
statement: r := this'.front()
particle-size: 259
particle-size: 259
statement: return this'.data[0]
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: this'.popFront()
particle-size: 259
particle-size: 259
statement: this'.data = this'.data[1..this'.size()]
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: return ()
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: return r
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 259
particle-size: 259
particle-size: 259
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 253
statement: return ()
particle-size: 253
particle-size: 259
particle-size: 259
particle-size: 259
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1750
particle-size: 1750
statement: return this'.data.length
particle-size: 1750
particle-size: 1750
particle-size: 1750
particle-size: 1750
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 373
particle-size: 373
statement: r := this'.front()
particle-size: 373
particle-size: 373
statement: return this'.data[0]
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: this'.popFront()
particle-size: 373
particle-size: 373
statement: this'.data = this'.data[1..this'.size()]
particle-size: 373
particle-size: 373
statement: return this'.data.length
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: return ()
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: return r
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 373
particle-size: 373
particle-size: 373
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 373
particle-size: 373
statement: return this'.data.length
particle-size: 373
particle-size: 373
particle-size: 373
particle-size: 373
statement: return ()
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 365
statement: return ()
particle-size: 365
particle-size: 373
particle-size: 373
particle-size: 373
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1750
particle-size: 1750
statement: return this'.data.length
particle-size: 1750
particle-size: 1750
particle-size: 1750
particle-size: 1750
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 439
particle-size: 439
statement: r := this'.front()
particle-size: 439
particle-size: 439
statement: return this'.data[0]
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
statement: this'.popFront()
particle-size: 439
particle-size: 439
statement: this'.data = this'.data[1..this'.size()]
particle-size: 439
particle-size: 439
statement: return this'.data.length
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
statement: return ()
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
statement: return r
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 439
particle-size: 439
particle-size: 439
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 439
particle-size: 439
statement: return this'.data.length
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
statement: this'.data = this'.data ~ [x]
particle-size: 439
statement: return ()
particle-size: 439
particle-size: 439
particle-size: 439
particle-size: 439
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3362
particle-size: 3362
statement: return this'.data.length
particle-size: 3362
particle-size: 3362
particle-size: 3362
particle-size: 3362
statement: this'.__H0.__run()
particle-size: 1434
particle-size: 1434
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1434
particle-size: 1434
statement: return this
particle-size: 1434
particle-size: 1434
particle-size: 1434
particle-size: 1434
particle-size: 1434
statement: this'.data = [x] ~ this'.data
particle-size: 1434
statement: return ()
particle-size: 1434
particle-size: 1434
particle-size: 1434
particle-size: 1434
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 18
particle-size: 18
statement: return this
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = [x] ~ this'.data
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 18
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 18
particle-size: 18
statement: r := this'.front()
particle-size: 18
particle-size: 18
statement: return this'.data[0]
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.popFront()
particle-size: 18
particle-size: 18
statement: this'.data = this'.data[1..this'.size()]
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: return r
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.data = this'.data ~ [x]
particle-size: 18
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.Q_in.popFront()
particle-size: 1416
particle-size: 1416
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1416
particle-size: 1416
statement: return this'.data.length
particle-size: 1416
particle-size: 1416
particle-size: 1416
particle-size: 1416
particle-size: 1416
statement: return ()
particle-size: 1416
particle-size: 1416
particle-size: 1416
particle-size: 1416
statement: this'.Q_in.popFront()
particle-size: 1416
particle-size: 1416
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1416
particle-size: 1416
statement: return this'.data.length
particle-size: 1416
particle-size: 1416
particle-size: 1416
particle-size: 1416
particle-size: 1416
statement: return ()
particle-size: 1416
particle-size: 1416
particle-size: 1416
particle-size: 1416
statement: return ()
particle-size: 1434
particle-size: 1434
particle-size: 1434
particle-size: 1434
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3362
particle-size: 3362
statement: return this'.data.length
particle-size: 3362
particle-size: 3362
particle-size: 3362
particle-size: 3362
statement: this'.__H1.__run()
particle-size: 383
particle-size: 383
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 383
statement: this'.Q_in.popFront()
particle-size: 383
particle-size: 383
statement: this'.data = this'.data[1..this'.size()]
particle-size: 383
particle-size: 383
statement: return this'.data.length
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return ()
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: return ()
particle-size: 383
particle-size: 383
particle-size: 383
particle-size: 383
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3362
particle-size: 3362
statement: return this'.data.length
particle-size: 3362
particle-size: 3362
particle-size: 3362
particle-size: 3362
statement: this'.__S0.__run()
particle-size: 190
particle-size: 190
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 190
statement: this'.route2 = 3
particle-size: 190
statement: this'.route3 = (2 + 1)
particle-size: 190
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 190
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 190
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 190
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 190
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 190
particle-size: 190
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 570
particle-size: 570
particle-size: 570
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 190
particle-size: 190
statement: r := this'.front()
particle-size: 190
particle-size: 190
statement: return this'.data[0]
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.popFront()
particle-size: 190
particle-size: 190
statement: this'.data = this'.data[1..this'.size()]
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return r
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.data = this'.data ~ [x]
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 190
particle-size: 190
statement: r := this'.front()
particle-size: 190
particle-size: 190
statement: return this'.data[0]
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.popFront()
particle-size: 190
particle-size: 190
statement: this'.data = this'.data[1..this'.size()]
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return r
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.data = this'.data ~ [x]
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 190
particle-size: 190
statement: r := this'.front()
particle-size: 190
particle-size: 190
statement: return this'.data[0]
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.popFront()
particle-size: 190
particle-size: 190
statement: this'.data = this'.data[1..this'.size()]
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return r
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 190
particle-size: 190
statement: return this'.data.length
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: this'.data = this'.data ~ [x]
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 190
particle-size: 190
particle-size: 190
statement: return ()
particle-size: 570
particle-size: 570
particle-size: 570
particle-size: 570
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3742
particle-size: 3742
statement: return this'.data.length
particle-size: 3742
particle-size: 3742
particle-size: 3742
particle-size: 3742
statement: this'.__S1.__run()
particle-size: 277
particle-size: 277
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 277
particle-size: 277
statement: r := this'.front()
particle-size: 277
particle-size: 277
statement: return this'.data[0]
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: this'.popFront()
particle-size: 277
particle-size: 277
statement: this'.data = this'.data[1..this'.size()]
particle-size: 277
particle-size: 277
statement: return this'.data.length
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: return ()
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: return r
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 277
particle-size: 277
statement: return this'.data.length
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 276
statement: return ()
particle-size: 276
particle-size: 277
particle-size: 277
particle-size: 277
statement: return ()
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3742
particle-size: 3742
statement: return this'.data.length
particle-size: 3742
particle-size: 3742
particle-size: 3742
particle-size: 3742
statement: this'.__S2.__run()
particle-size: 496
particle-size: 496
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 496
particle-size: 496
statement: r := this'.front()
particle-size: 496
particle-size: 496
statement: return this'.data[0]
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: this'.popFront()
particle-size: 496
particle-size: 496
statement: this'.data = this'.data[1..this'.size()]
particle-size: 496
particle-size: 496
statement: return this'.data.length
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: return ()
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: return r
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 496
particle-size: 496
statement: return this'.data.length
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 492
statement: return ()
particle-size: 492
particle-size: 496
particle-size: 496
particle-size: 496
statement: return ()
particle-size: 496
particle-size: 496
particle-size: 496
particle-size: 496
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3742
particle-size: 3742
statement: return this'.data.length
particle-size: 3742
particle-size: 3742
particle-size: 3742
particle-size: 3742
statement: this'.__S3.__run()
particle-size: 582
particle-size: 582
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 582
particle-size: 582
statement: r := this'.front()
particle-size: 582
particle-size: 582
statement: return this'.data[0]
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
statement: this'.popFront()
particle-size: 582
particle-size: 582
statement: this'.data = this'.data[1..this'.size()]
particle-size: 582
particle-size: 582
statement: return this'.data.length
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
statement: return ()
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
statement: return r
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 582
particle-size: 582
statement: return this'.data.length
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 578
statement: return ()
particle-size: 578
particle-size: 582
particle-size: 582
particle-size: 582
statement: return ()
particle-size: 582
particle-size: 582
particle-size: 582
particle-size: 582
statement: return ()
particle-size: 5492
particle-size: 5492
particle-size: 5492
particle-size: 1779
repetition: 17
statement: __d.__step()
particle-size: 1779
particle-size: 1779
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: (action,node) := this'.scheduler()
particle-size: 1779
particle-size: 1779
statement: actions := ([]: (R × R)[])
particle-size: 1779
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1779
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(0,i)]
particle-size: 1457
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(1,i)]
particle-size: 143
loop-index: 1
particle-size: 1779
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(0,i)]
particle-size: 440
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
loop-index: 2
particle-size: 1779
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(0,i)]
particle-size: 167
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(1,i)]
particle-size: 477
loop-index: 3
particle-size: 1779
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(0,i)]
particle-size: 274
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(1,i)]
particle-size: 280
loop-index: 4
particle-size: 1779
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(0,i)]
particle-size: 515
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(1,i)]
particle-size: 410
loop-index: 5
particle-size: 1779
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(0,i)]
particle-size: 619
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1779
particle-size: 1779
statement: return this'.data.length
particle-size: 1779
particle-size: 1779
particle-size: 1779
statement: actions ~= [(1,i)]
particle-size: 498
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1779
particle-size: 1779
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 5280
particle-size: 5280
particle-size: 5280
particle-size: 5280
particle-size: 5280
particle-size: 5280
particle-size: 5280
particle-size: 5280
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1808
particle-size: 1808
statement: return this'.data.length
particle-size: 1808
particle-size: 1808
particle-size: 1808
particle-size: 1808
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 143
particle-size: 143
statement: r := this'.front()
particle-size: 143
particle-size: 143
statement: return this'.data[0]
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this'.popFront()
particle-size: 143
particle-size: 143
statement: this'.data = this'.data[1..this'.size()]
particle-size: 143
particle-size: 143
statement: return this'.data.length
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: return ()
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: return r
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 143
particle-size: 143
particle-size: 143
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 143
particle-size: 143
statement: return this'.data.length
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: this'.data = this'.data ~ [x]
particle-size: 143
statement: return ()
particle-size: 143
particle-size: 143
particle-size: 143
particle-size: 143
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1808
particle-size: 1808
statement: return this'.data.length
particle-size: 1808
particle-size: 1808
particle-size: 1808
particle-size: 1808
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1808
particle-size: 1808
statement: return this'.data.length
particle-size: 1808
particle-size: 1808
particle-size: 1808
particle-size: 1808
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 477
particle-size: 477
statement: r := this'.front()
particle-size: 477
particle-size: 477
statement: return this'.data[0]
particle-size: 477
particle-size: 477
particle-size: 477
particle-size: 477
particle-size: 477
statement: this'.popFront()
particle-size: 477
particle-size: 477
statement: this'.data = this'.data[1..this'.size()]
particle-size: 477
particle-size: 477
statement: return this'.data.length
particle-size: 477
particle-size: 477
particle-size: 477
particle-size: 477
particle-size: 477
statement: return ()
particle-size: 477
particle-size: 477
particle-size: 477
particle-size: 477
statement: return r
particle-size: 477
particle-size: 477
particle-size: 477
particle-size: 477
particle-size: 477
particle-size: 477
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 159
particle-size: 159
particle-size: 159
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 159
particle-size: 159
statement: return this'.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: this'.data = this'.data ~ [x]
particle-size: 159
statement: return ()
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 159
particle-size: 159
particle-size: 159
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 159
particle-size: 159
statement: return this'.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 153
statement: return ()
particle-size: 153
particle-size: 159
particle-size: 159
particle-size: 159
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 159
particle-size: 159
particle-size: 159
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 159
particle-size: 159
statement: return this'.data.length
particle-size: 159
particle-size: 159
particle-size: 159
particle-size: 159
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 156
statement: return ()
particle-size: 156
particle-size: 159
particle-size: 159
particle-size: 159
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1808
particle-size: 1808
statement: return this'.data.length
particle-size: 1808
particle-size: 1808
particle-size: 1808
particle-size: 1808
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 280
particle-size: 280
statement: r := this'.front()
particle-size: 280
particle-size: 280
statement: return this'.data[0]
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: this'.popFront()
particle-size: 280
particle-size: 280
statement: this'.data = this'.data[1..this'.size()]
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return ()
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return r
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 280
particle-size: 280
particle-size: 280
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 280
particle-size: 280
statement: return this'.data.length
particle-size: 280
particle-size: 280
particle-size: 280
particle-size: 280
statement: return ()
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 273
statement: return ()
particle-size: 273
particle-size: 280
particle-size: 280
particle-size: 280
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1808
particle-size: 1808
statement: return this'.data.length
particle-size: 1808
particle-size: 1808
particle-size: 1808
particle-size: 1808
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 410
particle-size: 410
statement: r := this'.front()
particle-size: 410
particle-size: 410
statement: return this'.data[0]
particle-size: 410
particle-size: 410
particle-size: 410
particle-size: 410
particle-size: 410
statement: this'.popFront()
particle-size: 410
particle-size: 410
statement: this'.data = this'.data[1..this'.size()]
particle-size: 410
particle-size: 410
statement: return this'.data.length
particle-size: 410
particle-size: 410
particle-size: 410
particle-size: 410
particle-size: 410
statement: return ()
particle-size: 410
particle-size: 410
particle-size: 410
particle-size: 410
statement: return r
particle-size: 410
particle-size: 410
particle-size: 410
particle-size: 410
particle-size: 410
particle-size: 410
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 410
particle-size: 410
particle-size: 410
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 410
particle-size: 410
statement: return this'.data.length
particle-size: 410
particle-size: 410
particle-size: 410
particle-size: 410
statement: return ()
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 395
statement: return ()
particle-size: 395
particle-size: 410
particle-size: 410
particle-size: 410
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1808
particle-size: 1808
statement: return this'.data.length
particle-size: 1808
particle-size: 1808
particle-size: 1808
particle-size: 1808
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 498
particle-size: 498
statement: r := this'.front()
particle-size: 498
particle-size: 498
statement: return this'.data[0]
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
statement: this'.popFront()
particle-size: 498
particle-size: 498
statement: this'.data = this'.data[1..this'.size()]
particle-size: 498
particle-size: 498
statement: return this'.data.length
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
statement: return ()
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
statement: return r
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 498
particle-size: 498
particle-size: 498
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 498
particle-size: 498
statement: return this'.data.length
particle-size: 498
particle-size: 498
particle-size: 498
particle-size: 498
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 497
statement: return ()
particle-size: 497
particle-size: 498
particle-size: 498
particle-size: 498
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3472
particle-size: 3472
statement: return this'.data.length
particle-size: 3472
particle-size: 3472
particle-size: 3472
particle-size: 3472
statement: this'.__H0.__run()
particle-size: 1457
particle-size: 1457
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1457
particle-size: 1457
statement: return this
particle-size: 1457
particle-size: 1457
particle-size: 1457
particle-size: 1457
particle-size: 1457
statement: this'.data = [x] ~ this'.data
particle-size: 1457
statement: return ()
particle-size: 1457
particle-size: 1457
particle-size: 1457
particle-size: 1457
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 10
particle-size: 10
statement: return this
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = [x] ~ this'.data
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.Q_in.popFront()
particle-size: 1447
particle-size: 1447
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1447
particle-size: 1447
statement: return this'.data.length
particle-size: 1447
particle-size: 1447
particle-size: 1447
particle-size: 1447
particle-size: 1447
statement: return ()
particle-size: 1447
particle-size: 1447
particle-size: 1447
particle-size: 1447
statement: this'.Q_in.popFront()
particle-size: 1447
particle-size: 1447
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1447
particle-size: 1447
statement: return this'.data.length
particle-size: 1447
particle-size: 1447
particle-size: 1447
particle-size: 1447
particle-size: 1447
statement: return ()
particle-size: 1447
particle-size: 1447
particle-size: 1447
particle-size: 1447
statement: return ()
particle-size: 1457
particle-size: 1457
particle-size: 1457
particle-size: 1457
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3472
particle-size: 3472
statement: return this'.data.length
particle-size: 3472
particle-size: 3472
particle-size: 3472
particle-size: 3472
statement: this'.__H1.__run()
particle-size: 440
particle-size: 440
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 440
statement: this'.Q_in.popFront()
particle-size: 440
particle-size: 440
statement: this'.data = this'.data[1..this'.size()]
particle-size: 440
particle-size: 440
statement: return this'.data.length
particle-size: 440
particle-size: 440
particle-size: 440
particle-size: 440
particle-size: 440
statement: return ()
particle-size: 440
particle-size: 440
particle-size: 440
particle-size: 440
statement: return ()
particle-size: 440
particle-size: 440
particle-size: 440
particle-size: 440
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3472
particle-size: 3472
statement: return this'.data.length
particle-size: 3472
particle-size: 3472
particle-size: 3472
particle-size: 3472
statement: this'.__S0.__run()
particle-size: 167
particle-size: 167
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 167
statement: this'.route2 = 3
particle-size: 167
statement: this'.route3 = (2 + 1)
particle-size: 167
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 167
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 167
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 167
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 167
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 167
particle-size: 167
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 501
particle-size: 501
particle-size: 501
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 167
particle-size: 167
statement: r := this'.front()
particle-size: 167
particle-size: 167
statement: return this'.data[0]
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.popFront()
particle-size: 167
particle-size: 167
statement: this'.data = this'.data[1..this'.size()]
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return r
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.data = this'.data ~ [x]
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 167
particle-size: 167
statement: r := this'.front()
particle-size: 167
particle-size: 167
statement: return this'.data[0]
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.popFront()
particle-size: 167
particle-size: 167
statement: this'.data = this'.data[1..this'.size()]
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return r
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.data = this'.data ~ [x]
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 167
particle-size: 167
statement: r := this'.front()
particle-size: 167
particle-size: 167
statement: return this'.data[0]
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.popFront()
particle-size: 167
particle-size: 167
statement: this'.data = this'.data[1..this'.size()]
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return r
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 167
particle-size: 167
statement: return this'.data.length
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: this'.data = this'.data ~ [x]
particle-size: 167
statement: return ()
particle-size: 167
particle-size: 167
particle-size: 167
particle-size: 167
statement: return ()
particle-size: 501
particle-size: 501
particle-size: 501
particle-size: 501
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3806
particle-size: 3806
statement: return this'.data.length
particle-size: 3806
particle-size: 3806
particle-size: 3806
particle-size: 3806
statement: this'.__S1.__run()
particle-size: 274
particle-size: 274
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 274
particle-size: 274
statement: r := this'.front()
particle-size: 274
particle-size: 274
statement: return this'.data[0]
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: this'.popFront()
particle-size: 274
particle-size: 274
statement: this'.data = this'.data[1..this'.size()]
particle-size: 274
particle-size: 274
statement: return this'.data.length
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return r
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 274
particle-size: 274
statement: return this'.data.length
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 273
statement: return ()
particle-size: 273
particle-size: 274
particle-size: 274
particle-size: 274
statement: return ()
particle-size: 274
particle-size: 274
particle-size: 274
particle-size: 274
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3806
particle-size: 3806
statement: return this'.data.length
particle-size: 3806
particle-size: 3806
particle-size: 3806
particle-size: 3806
statement: this'.__S2.__run()
particle-size: 515
particle-size: 515
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 515
particle-size: 515
statement: r := this'.front()
particle-size: 515
particle-size: 515
statement: return this'.data[0]
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: this'.popFront()
particle-size: 515
particle-size: 515
statement: this'.data = this'.data[1..this'.size()]
particle-size: 515
particle-size: 515
statement: return this'.data.length
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: return ()
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: return r
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 515
particle-size: 515
statement: return this'.data.length
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 511
statement: return ()
particle-size: 511
particle-size: 515
particle-size: 515
particle-size: 515
statement: return ()
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3806
particle-size: 3806
statement: return this'.data.length
particle-size: 3806
particle-size: 3806
particle-size: 3806
particle-size: 3806
statement: this'.__S3.__run()
particle-size: 619
particle-size: 619
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 619
particle-size: 619
statement: r := this'.front()
particle-size: 619
particle-size: 619
statement: return this'.data[0]
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: this'.popFront()
particle-size: 619
particle-size: 619
statement: this'.data = this'.data[1..this'.size()]
particle-size: 619
particle-size: 619
statement: return this'.data.length
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: return ()
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: return r
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 619
particle-size: 619
statement: return this'.data.length
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 615
statement: return ()
particle-size: 615
particle-size: 619
particle-size: 619
particle-size: 619
statement: return ()
particle-size: 619
particle-size: 619
particle-size: 619
particle-size: 619
statement: return ()
particle-size: 5614
particle-size: 5614
particle-size: 5614
particle-size: 1766
repetition: 18
statement: __d.__step()
particle-size: 1766
particle-size: 1766
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: (action,node) := this'.scheduler()
particle-size: 1766
particle-size: 1766
statement: actions := ([]: (R × R)[])
particle-size: 1766
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1766
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(0,i)]
particle-size: 1420
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(1,i)]
particle-size: 111
loop-index: 1
particle-size: 1766
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(0,i)]
particle-size: 500
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
loop-index: 2
particle-size: 1766
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(0,i)]
particle-size: 145
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(1,i)]
particle-size: 390
loop-index: 3
particle-size: 1766
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(0,i)]
particle-size: 263
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(1,i)]
particle-size: 277
loop-index: 4
particle-size: 1766
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(0,i)]
particle-size: 527
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(1,i)]
particle-size: 404
loop-index: 5
particle-size: 1766
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(0,i)]
particle-size: 647
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1766
particle-size: 1766
statement: return this'.data.length
particle-size: 1766
particle-size: 1766
particle-size: 1766
statement: actions ~= [(1,i)]
particle-size: 507
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1766
particle-size: 1766
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 5191
particle-size: 5191
particle-size: 5191
particle-size: 5191
particle-size: 5191
particle-size: 5191
particle-size: 5191
particle-size: 5191
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1689
particle-size: 1689
statement: return this'.data.length
particle-size: 1689
particle-size: 1689
particle-size: 1689
particle-size: 1689
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 111
particle-size: 111
statement: r := this'.front()
particle-size: 111
particle-size: 111
statement: return this'.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 111
particle-size: 111
particle-size: 111
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.data = this'.data ~ [x]
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1689
particle-size: 1689
statement: return this'.data.length
particle-size: 1689
particle-size: 1689
particle-size: 1689
particle-size: 1689
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1689
particle-size: 1689
statement: return this'.data.length
particle-size: 1689
particle-size: 1689
particle-size: 1689
particle-size: 1689
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 390
particle-size: 390
statement: r := this'.front()
particle-size: 390
particle-size: 390
statement: return this'.data[0]
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
statement: this'.popFront()
particle-size: 390
particle-size: 390
statement: this'.data = this'.data[1..this'.size()]
particle-size: 390
particle-size: 390
statement: return this'.data.length
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
statement: return ()
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
statement: return r
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
particle-size: 390
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 130
particle-size: 130
particle-size: 130
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: this'.data = this'.data ~ [x]
particle-size: 130
statement: return ()
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 130
particle-size: 130
particle-size: 130
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 126
statement: return ()
particle-size: 126
particle-size: 130
particle-size: 130
particle-size: 130
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 130
particle-size: 130
particle-size: 130
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 129
statement: return ()
particle-size: 129
particle-size: 130
particle-size: 130
particle-size: 130
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1689
particle-size: 1689
statement: return this'.data.length
particle-size: 1689
particle-size: 1689
particle-size: 1689
particle-size: 1689
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 277
particle-size: 277
statement: r := this'.front()
particle-size: 277
particle-size: 277
statement: return this'.data[0]
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: this'.popFront()
particle-size: 277
particle-size: 277
statement: this'.data = this'.data[1..this'.size()]
particle-size: 277
particle-size: 277
statement: return this'.data.length
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: return ()
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: return r
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 277
particle-size: 277
particle-size: 277
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 277
particle-size: 277
statement: return this'.data.length
particle-size: 277
particle-size: 277
particle-size: 277
particle-size: 277
statement: return ()
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 272
statement: return ()
particle-size: 272
particle-size: 277
particle-size: 277
particle-size: 277
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1689
particle-size: 1689
statement: return this'.data.length
particle-size: 1689
particle-size: 1689
particle-size: 1689
particle-size: 1689
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 404
particle-size: 404
statement: r := this'.front()
particle-size: 404
particle-size: 404
statement: return this'.data[0]
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: this'.popFront()
particle-size: 404
particle-size: 404
statement: this'.data = this'.data[1..this'.size()]
particle-size: 404
particle-size: 404
statement: return this'.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return ()
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return r
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 404
particle-size: 404
particle-size: 404
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 404
particle-size: 404
statement: return this'.data.length
particle-size: 404
particle-size: 404
particle-size: 404
particle-size: 404
statement: return ()
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 391
statement: return ()
particle-size: 391
particle-size: 404
particle-size: 404
particle-size: 404
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1689
particle-size: 1689
statement: return this'.data.length
particle-size: 1689
particle-size: 1689
particle-size: 1689
particle-size: 1689
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 507
particle-size: 507
statement: r := this'.front()
particle-size: 507
particle-size: 507
statement: return this'.data[0]
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: this'.popFront()
particle-size: 507
particle-size: 507
statement: this'.data = this'.data[1..this'.size()]
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return ()
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return r
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 507
particle-size: 507
particle-size: 507
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 507
particle-size: 507
statement: return this'.data.length
particle-size: 507
particle-size: 507
particle-size: 507
particle-size: 507
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 506
statement: return ()
particle-size: 506
particle-size: 507
particle-size: 507
particle-size: 507
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3502
particle-size: 3502
statement: return this'.data.length
particle-size: 3502
particle-size: 3502
particle-size: 3502
particle-size: 3502
statement: this'.__H0.__run()
particle-size: 1420
particle-size: 1420
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1420
particle-size: 1420
statement: return this
particle-size: 1420
particle-size: 1420
particle-size: 1420
particle-size: 1420
particle-size: 1420
statement: this'.data = [x] ~ this'.data
particle-size: 1420
statement: return ()
particle-size: 1420
particle-size: 1420
particle-size: 1420
particle-size: 1420
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 10
particle-size: 10
statement: return this
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = [x] ~ this'.data
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.Q_in.popFront()
particle-size: 1410
particle-size: 1410
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1410
particle-size: 1410
statement: return this'.data.length
particle-size: 1410
particle-size: 1410
particle-size: 1410
particle-size: 1410
particle-size: 1410
statement: return ()
particle-size: 1410
particle-size: 1410
particle-size: 1410
particle-size: 1410
statement: this'.Q_in.popFront()
particle-size: 1410
particle-size: 1410
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1410
particle-size: 1410
statement: return this'.data.length
particle-size: 1410
particle-size: 1410
particle-size: 1410
particle-size: 1410
particle-size: 1410
statement: return ()
particle-size: 1410
particle-size: 1410
particle-size: 1410
particle-size: 1410
statement: return ()
particle-size: 1420
particle-size: 1420
particle-size: 1420
particle-size: 1420
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3502
particle-size: 3502
statement: return this'.data.length
particle-size: 3502
particle-size: 3502
particle-size: 3502
particle-size: 3502
statement: this'.__H1.__run()
particle-size: 500
particle-size: 500
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 500
statement: this'.Q_in.popFront()
particle-size: 500
particle-size: 500
statement: this'.data = this'.data[1..this'.size()]
particle-size: 500
particle-size: 500
statement: return this'.data.length
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: return ()
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: return ()
particle-size: 500
particle-size: 500
particle-size: 500
particle-size: 500
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3502
particle-size: 3502
statement: return this'.data.length
particle-size: 3502
particle-size: 3502
particle-size: 3502
particle-size: 3502
statement: this'.__S0.__run()
particle-size: 145
particle-size: 145
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 145
statement: this'.route2 = 3
particle-size: 145
statement: this'.route3 = (2 + 1)
particle-size: 145
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 145
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 145
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 145
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 145
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 145
particle-size: 145
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 435
particle-size: 435
particle-size: 435
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 145
particle-size: 145
statement: r := this'.front()
particle-size: 145
particle-size: 145
statement: return this'.data[0]
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.popFront()
particle-size: 145
particle-size: 145
statement: this'.data = this'.data[1..this'.size()]
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return r
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.data = this'.data ~ [x]
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 145
particle-size: 145
statement: r := this'.front()
particle-size: 145
particle-size: 145
statement: return this'.data[0]
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.popFront()
particle-size: 145
particle-size: 145
statement: this'.data = this'.data[1..this'.size()]
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return r
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.data = this'.data ~ [x]
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 145
particle-size: 145
statement: r := this'.front()
particle-size: 145
particle-size: 145
statement: return this'.data[0]
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.popFront()
particle-size: 145
particle-size: 145
statement: this'.data = this'.data[1..this'.size()]
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return r
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 145
particle-size: 145
statement: return this'.data.length
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: this'.data = this'.data ~ [x]
particle-size: 145
statement: return ()
particle-size: 145
particle-size: 145
particle-size: 145
particle-size: 145
statement: return ()
particle-size: 435
particle-size: 435
particle-size: 435
particle-size: 435
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3792
particle-size: 3792
statement: return this'.data.length
particle-size: 3792
particle-size: 3792
particle-size: 3792
particle-size: 3792
statement: this'.__S1.__run()
particle-size: 263
particle-size: 263
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 263
particle-size: 263
statement: r := this'.front()
particle-size: 263
particle-size: 263
statement: return this'.data[0]
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: this'.popFront()
particle-size: 263
particle-size: 263
statement: this'.data = this'.data[1..this'.size()]
particle-size: 263
particle-size: 263
statement: return this'.data.length
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: return ()
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: return r
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 263
particle-size: 263
statement: return this'.data.length
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 262
statement: return ()
particle-size: 262
particle-size: 263
particle-size: 263
particle-size: 263
statement: return ()
particle-size: 263
particle-size: 263
particle-size: 263
particle-size: 263
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3792
particle-size: 3792
statement: return this'.data.length
particle-size: 3792
particle-size: 3792
particle-size: 3792
particle-size: 3792
statement: this'.__S2.__run()
particle-size: 527
particle-size: 527
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 527
particle-size: 527
statement: r := this'.front()
particle-size: 527
particle-size: 527
statement: return this'.data[0]
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: this'.popFront()
particle-size: 527
particle-size: 527
statement: this'.data = this'.data[1..this'.size()]
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return ()
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return r
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 527
particle-size: 527
statement: return this'.data.length
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: return ()
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 520
statement: return ()
particle-size: 520
particle-size: 527
particle-size: 527
particle-size: 527
statement: return ()
particle-size: 527
particle-size: 527
particle-size: 527
particle-size: 527
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3792
particle-size: 3792
statement: return this'.data.length
particle-size: 3792
particle-size: 3792
particle-size: 3792
particle-size: 3792
statement: this'.__S3.__run()
particle-size: 647
particle-size: 647
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 647
particle-size: 647
statement: r := this'.front()
particle-size: 647
particle-size: 647
statement: return this'.data[0]
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: this'.popFront()
particle-size: 647
particle-size: 647
statement: this'.data = this'.data[1..this'.size()]
particle-size: 647
particle-size: 647
statement: return this'.data.length
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: return ()
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: return r
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 647
particle-size: 647
statement: return this'.data.length
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: return ()
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 639
statement: return ()
particle-size: 639
particle-size: 647
particle-size: 647
particle-size: 647
statement: return ()
particle-size: 647
particle-size: 647
particle-size: 647
particle-size: 647
statement: return ()
particle-size: 5481
particle-size: 5481
particle-size: 5481
particle-size: 1685
repetition: 19
statement: __d.__step()
particle-size: 1685
particle-size: 1685
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: return this'.data.length
particle-size: 1685
particle-size: 1685
particle-size: 1685
particle-size: 1685
statement: (action,node) := this'.scheduler()
particle-size: 1684
particle-size: 1684
statement: actions := ([]: (R × R)[])
particle-size: 1684
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1684
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(0,i)]
particle-size: 1306
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(1,i)]
particle-size: 89
loop-index: 1
particle-size: 1684
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(0,i)]
particle-size: 509
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
loop-index: 2
particle-size: 1684
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(0,i)]
particle-size: 112
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(1,i)]
particle-size: 315
loop-index: 3
particle-size: 1684
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(0,i)]
particle-size: 224
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(1,i)]
particle-size: 267
loop-index: 4
particle-size: 1684
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(0,i)]
particle-size: 493
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(1,i)]
particle-size: 393
loop-index: 5
particle-size: 1684
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(0,i)]
particle-size: 615
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: actions ~= [(1,i)]
particle-size: 512
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1684
particle-size: 1684
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4835
particle-size: 4835
particle-size: 4835
particle-size: 4835
particle-size: 4835
particle-size: 4835
particle-size: 4835
particle-size: 4835
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1576
particle-size: 1576
statement: return this'.data.length
particle-size: 1576
particle-size: 1576
particle-size: 1576
particle-size: 1576
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 89
particle-size: 89
statement: r := this'.front()
particle-size: 89
particle-size: 89
statement: return this'.data[0]
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.popFront()
particle-size: 89
particle-size: 89
statement: this'.data = this'.data[1..this'.size()]
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return r
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 89
particle-size: 89
particle-size: 89
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1576
particle-size: 1576
statement: return this'.data.length
particle-size: 1576
particle-size: 1576
particle-size: 1576
particle-size: 1576
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1576
particle-size: 1576
statement: return this'.data.length
particle-size: 1576
particle-size: 1576
particle-size: 1576
particle-size: 1576
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 315
particle-size: 315
statement: r := this'.front()
particle-size: 315
particle-size: 315
statement: return this'.data[0]
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: this'.popFront()
particle-size: 315
particle-size: 315
statement: this'.data = this'.data[1..this'.size()]
particle-size: 315
particle-size: 315
statement: return this'.data.length
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: return ()
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: return r
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: this'.data = this'.data ~ [x]
particle-size: 105
statement: return ()
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 100
statement: return ()
particle-size: 100
particle-size: 105
particle-size: 105
particle-size: 105
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 105
particle-size: 105
particle-size: 105
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 105
particle-size: 105
statement: return this'.data.length
particle-size: 105
particle-size: 105
particle-size: 105
particle-size: 105
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 104
statement: return ()
particle-size: 104
particle-size: 105
particle-size: 105
particle-size: 105
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1576
particle-size: 1576
statement: return this'.data.length
particle-size: 1576
particle-size: 1576
particle-size: 1576
particle-size: 1576
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 267
particle-size: 267
statement: r := this'.front()
particle-size: 267
particle-size: 267
statement: return this'.data[0]
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: this'.popFront()
particle-size: 267
particle-size: 267
statement: this'.data = this'.data[1..this'.size()]
particle-size: 267
particle-size: 267
statement: return this'.data.length
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return ()
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return r
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 267
particle-size: 267
particle-size: 267
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 267
particle-size: 267
statement: return this'.data.length
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return ()
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 262
statement: return ()
particle-size: 262
particle-size: 267
particle-size: 267
particle-size: 267
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1576
particle-size: 1576
statement: return this'.data.length
particle-size: 1576
particle-size: 1576
particle-size: 1576
particle-size: 1576
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 393
particle-size: 393
statement: r := this'.front()
particle-size: 393
particle-size: 393
statement: return this'.data[0]
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
statement: this'.popFront()
particle-size: 393
particle-size: 393
statement: this'.data = this'.data[1..this'.size()]
particle-size: 393
particle-size: 393
statement: return this'.data.length
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
statement: return ()
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
statement: return r
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 393
particle-size: 393
particle-size: 393
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 393
particle-size: 393
statement: return this'.data.length
particle-size: 393
particle-size: 393
particle-size: 393
particle-size: 393
statement: return ()
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 374
statement: return ()
particle-size: 374
particle-size: 393
particle-size: 393
particle-size: 393
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1576
particle-size: 1576
statement: return this'.data.length
particle-size: 1576
particle-size: 1576
particle-size: 1576
particle-size: 1576
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 512
particle-size: 512
statement: r := this'.front()
particle-size: 512
particle-size: 512
statement: return this'.data[0]
particle-size: 512
particle-size: 512
particle-size: 512
particle-size: 512
particle-size: 512
statement: this'.popFront()
particle-size: 512
particle-size: 512
statement: this'.data = this'.data[1..this'.size()]
particle-size: 512
particle-size: 512
statement: return this'.data.length
particle-size: 512
particle-size: 512
particle-size: 512
particle-size: 512
particle-size: 512
statement: return ()
particle-size: 512
particle-size: 512
particle-size: 512
particle-size: 512
statement: return r
particle-size: 512
particle-size: 512
particle-size: 512
particle-size: 512
particle-size: 512
particle-size: 512
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 512
particle-size: 512
particle-size: 512
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 512
particle-size: 512
statement: return this'.data.length
particle-size: 512
particle-size: 512
particle-size: 512
particle-size: 512
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 509
statement: return ()
particle-size: 509
particle-size: 512
particle-size: 512
particle-size: 512
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 3259
particle-size: 3259
statement: return this'.data.length
particle-size: 3259
particle-size: 3259
particle-size: 3259
particle-size: 3259
statement: this'.__H0.__run()
particle-size: 1306
particle-size: 1306
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1306
particle-size: 1306
statement: return this
particle-size: 1306
particle-size: 1306
particle-size: 1306
particle-size: 1306
particle-size: 1306
statement: this'.data = [x] ~ this'.data
particle-size: 1306
statement: return ()
particle-size: 1306
particle-size: 1306
particle-size: 1306
particle-size: 1306
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 4
particle-size: 4
statement: return this
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = [x] ~ this'.data
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.Q_in.popFront()
particle-size: 1302
particle-size: 1302
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1302
particle-size: 1302
statement: return this'.data.length
particle-size: 1302
particle-size: 1302
particle-size: 1302
particle-size: 1302
particle-size: 1302
statement: return ()
particle-size: 1302
particle-size: 1302
particle-size: 1302
particle-size: 1302
statement: this'.Q_in.popFront()
particle-size: 1302
particle-size: 1302
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1302
particle-size: 1302
statement: return this'.data.length
particle-size: 1302
particle-size: 1302
particle-size: 1302
particle-size: 1302
particle-size: 1302
statement: return ()
particle-size: 1302
particle-size: 1302
particle-size: 1302
particle-size: 1302
statement: return ()
particle-size: 1306
particle-size: 1306
particle-size: 1306
particle-size: 1306
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 3259
particle-size: 3259
statement: return this'.data.length
particle-size: 3259
particle-size: 3259
particle-size: 3259
particle-size: 3259
statement: this'.__H1.__run()
particle-size: 509
particle-size: 509
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 509
statement: this'.Q_in.popFront()
particle-size: 509
particle-size: 509
statement: this'.data = this'.data[1..this'.size()]
particle-size: 509
particle-size: 509
statement: return this'.data.length
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
statement: return ()
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
statement: return ()
particle-size: 509
particle-size: 509
particle-size: 509
particle-size: 509
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 3259
particle-size: 3259
statement: return this'.data.length
particle-size: 3259
particle-size: 3259
particle-size: 3259
particle-size: 3259
statement: this'.__S0.__run()
particle-size: 112
particle-size: 112
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 112
statement: this'.route2 = 3
particle-size: 112
statement: this'.route3 = (2 + 1)
particle-size: 112
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 112
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 112
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 112
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 112
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 112
particle-size: 112
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 336
particle-size: 336
particle-size: 336
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 112
particle-size: 112
statement: r := this'.front()
particle-size: 112
particle-size: 112
statement: return this'.data[0]
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.popFront()
particle-size: 112
particle-size: 112
statement: this'.data = this'.data[1..this'.size()]
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return r
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.data = this'.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 112
particle-size: 112
statement: r := this'.front()
particle-size: 112
particle-size: 112
statement: return this'.data[0]
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.popFront()
particle-size: 112
particle-size: 112
statement: this'.data = this'.data[1..this'.size()]
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return r
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.data = this'.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 112
particle-size: 112
statement: r := this'.front()
particle-size: 112
particle-size: 112
statement: return this'.data[0]
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.popFront()
particle-size: 112
particle-size: 112
statement: this'.data = this'.data[1..this'.size()]
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return r
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 112
particle-size: 112
statement: return this'.data.length
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: this'.data = this'.data ~ [x]
particle-size: 112
statement: return ()
particle-size: 112
particle-size: 112
particle-size: 112
particle-size: 112
statement: return ()
particle-size: 336
particle-size: 336
particle-size: 336
particle-size: 336
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3483
particle-size: 3483
statement: return this'.data.length
particle-size: 3483
particle-size: 3483
particle-size: 3483
particle-size: 3483
statement: this'.__S1.__run()
particle-size: 224
particle-size: 224
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 224
particle-size: 224
statement: r := this'.front()
particle-size: 224
particle-size: 224
statement: return this'.data[0]
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: this'.popFront()
particle-size: 224
particle-size: 224
statement: this'.data = this'.data[1..this'.size()]
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return ()
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return r
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 224
particle-size: 224
statement: return this'.data.length
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: this'.data = this'.data ~ [x]
particle-size: 224
statement: return ()
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: return ()
particle-size: 224
particle-size: 224
particle-size: 224
particle-size: 224
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3483
particle-size: 3483
statement: return this'.data.length
particle-size: 3483
particle-size: 3483
particle-size: 3483
particle-size: 3483
statement: this'.__S2.__run()
particle-size: 493
particle-size: 493
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 493
particle-size: 493
statement: r := this'.front()
particle-size: 493
particle-size: 493
statement: return this'.data[0]
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
statement: this'.popFront()
particle-size: 493
particle-size: 493
statement: this'.data = this'.data[1..this'.size()]
particle-size: 493
particle-size: 493
statement: return this'.data.length
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
statement: return ()
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
statement: return r
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 493
particle-size: 493
statement: return this'.data.length
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 487
statement: return ()
particle-size: 487
particle-size: 493
particle-size: 493
particle-size: 493
statement: return ()
particle-size: 493
particle-size: 493
particle-size: 493
particle-size: 493
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3483
particle-size: 3483
statement: return this'.data.length
particle-size: 3483
particle-size: 3483
particle-size: 3483
particle-size: 3483
statement: this'.__S3.__run()
particle-size: 615
particle-size: 615
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 615
particle-size: 615
statement: r := this'.front()
particle-size: 615
particle-size: 615
statement: return this'.data[0]
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
statement: this'.popFront()
particle-size: 615
particle-size: 615
statement: this'.data = this'.data[1..this'.size()]
particle-size: 615
particle-size: 615
statement: return this'.data.length
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
statement: return ()
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
statement: return r
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 615
particle-size: 615
statement: return this'.data.length
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
statement: return ()
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 608
statement: return ()
particle-size: 608
particle-size: 615
particle-size: 615
particle-size: 615
statement: return ()
particle-size: 615
particle-size: 615
particle-size: 615
particle-size: 615
statement: return ()
particle-size: 5060
particle-size: 5060
particle-size: 5060
particle-size: 1528
repetition: 20
statement: __d.__step()
particle-size: 1528
particle-size: 1528
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: return this'.data.length
particle-size: 1528
particle-size: 1528
particle-size: 1528
particle-size: 1528
statement: (action,node) := this'.scheduler()
particle-size: 1527
particle-size: 1527
statement: actions := ([]: (R × R)[])
particle-size: 1527
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(0,i)]
particle-size: 1159
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(1,i)]
particle-size: 62
loop-index: 1
particle-size: 1527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(0,i)]
particle-size: 515
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
loop-index: 2
particle-size: 1527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(0,i)]
particle-size: 89
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(1,i)]
particle-size: 225
loop-index: 3
particle-size: 1527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(0,i)]
particle-size: 186
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(1,i)]
particle-size: 229
loop-index: 4
particle-size: 1527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(0,i)]
particle-size: 447
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(1,i)]
particle-size: 354
loop-index: 5
particle-size: 1527
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(0,i)]
particle-size: 572
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1527
particle-size: 1527
statement: return this'.data.length
particle-size: 1527
particle-size: 1527
particle-size: 1527
statement: actions ~= [(1,i)]
particle-size: 468
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1527
particle-size: 1527
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 4306
particle-size: 4306
particle-size: 4306
particle-size: 4306
particle-size: 4306
particle-size: 4306
particle-size: 4306
particle-size: 4306
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1338
particle-size: 1338
statement: return this'.data.length
particle-size: 1338
particle-size: 1338
particle-size: 1338
particle-size: 1338
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.data = this'.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1338
particle-size: 1338
statement: return this'.data.length
particle-size: 1338
particle-size: 1338
particle-size: 1338
particle-size: 1338
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1338
particle-size: 1338
statement: return this'.data.length
particle-size: 1338
particle-size: 1338
particle-size: 1338
particle-size: 1338
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 225
particle-size: 225
statement: r := this'.front()
particle-size: 225
particle-size: 225
statement: return this'.data[0]
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: this'.popFront()
particle-size: 225
particle-size: 225
statement: this'.data = this'.data[1..this'.size()]
particle-size: 225
particle-size: 225
statement: return this'.data.length
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: return ()
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: return r
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
particle-size: 225
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 75
particle-size: 75
particle-size: 75
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.data = this'.data ~ [x]
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 75
particle-size: 75
particle-size: 75
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 73
statement: return ()
particle-size: 73
particle-size: 75
particle-size: 75
particle-size: 75
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 75
particle-size: 75
particle-size: 75
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 75
particle-size: 75
statement: return this'.data.length
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: this'.data = this'.data ~ [x]
particle-size: 75
statement: return ()
particle-size: 75
particle-size: 75
particle-size: 75
particle-size: 75
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1338
particle-size: 1338
statement: return this'.data.length
particle-size: 1338
particle-size: 1338
particle-size: 1338
particle-size: 1338
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 229
particle-size: 229
statement: r := this'.front()
particle-size: 229
particle-size: 229
statement: return this'.data[0]
particle-size: 229
particle-size: 229
particle-size: 229
particle-size: 229
particle-size: 229
statement: this'.popFront()
particle-size: 229
particle-size: 229
statement: this'.data = this'.data[1..this'.size()]
particle-size: 229
particle-size: 229
statement: return this'.data.length
particle-size: 229
particle-size: 229
particle-size: 229
particle-size: 229
particle-size: 229
statement: return ()
particle-size: 229
particle-size: 229
particle-size: 229
particle-size: 229
statement: return r
particle-size: 229
particle-size: 229
particle-size: 229
particle-size: 229
particle-size: 229
particle-size: 229
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 229
particle-size: 229
particle-size: 229
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 229
particle-size: 229
statement: return this'.data.length
particle-size: 229
particle-size: 229
particle-size: 229
particle-size: 229
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 228
statement: return ()
particle-size: 228
particle-size: 229
particle-size: 229
particle-size: 229
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1338
particle-size: 1338
statement: return this'.data.length
particle-size: 1338
particle-size: 1338
particle-size: 1338
particle-size: 1338
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 354
particle-size: 354
statement: r := this'.front()
particle-size: 354
particle-size: 354
statement: return this'.data[0]
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: this'.popFront()
particle-size: 354
particle-size: 354
statement: this'.data = this'.data[1..this'.size()]
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return ()
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return r
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 354
particle-size: 354
particle-size: 354
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 354
particle-size: 354
statement: return this'.data.length
particle-size: 354
particle-size: 354
particle-size: 354
particle-size: 354
statement: return ()
particle-size: 13
statement: this'.data = this'.data ~ [x]
particle-size: 341
statement: return ()
particle-size: 341
particle-size: 354
particle-size: 354
particle-size: 354
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1338
particle-size: 1338
statement: return this'.data.length
particle-size: 1338
particle-size: 1338
particle-size: 1338
particle-size: 1338
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 468
particle-size: 468
statement: r := this'.front()
particle-size: 468
particle-size: 468
statement: return this'.data[0]
particle-size: 468
particle-size: 468
particle-size: 468
particle-size: 468
particle-size: 468
statement: this'.popFront()
particle-size: 468
particle-size: 468
statement: this'.data = this'.data[1..this'.size()]
particle-size: 468
particle-size: 468
statement: return this'.data.length
particle-size: 468
particle-size: 468
particle-size: 468
particle-size: 468
particle-size: 468
statement: return ()
particle-size: 468
particle-size: 468
particle-size: 468
particle-size: 468
statement: return r
particle-size: 468
particle-size: 468
particle-size: 468
particle-size: 468
particle-size: 468
particle-size: 468
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 468
particle-size: 468
particle-size: 468
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 468
particle-size: 468
statement: return this'.data.length
particle-size: 468
particle-size: 468
particle-size: 468
particle-size: 468
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 465
statement: return ()
particle-size: 465
particle-size: 468
particle-size: 468
particle-size: 468
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2968
particle-size: 2968
statement: return this'.data.length
particle-size: 2968
particle-size: 2968
particle-size: 2968
particle-size: 2968
statement: this'.__H0.__run()
particle-size: 1159
particle-size: 1159
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1159
particle-size: 1159
statement: return this
particle-size: 1159
particle-size: 1159
particle-size: 1159
particle-size: 1159
particle-size: 1159
statement: this'.data = [x] ~ this'.data
particle-size: 1159
statement: return ()
particle-size: 1159
particle-size: 1159
particle-size: 1159
particle-size: 1159
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 4
particle-size: 4
statement: return this
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = [x] ~ this'.data
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 4
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 4
particle-size: 4
statement: r := this'.front()
particle-size: 4
particle-size: 4
statement: return this'.data[0]
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.popFront()
particle-size: 4
particle-size: 4
statement: this'.data = this'.data[1..this'.size()]
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: return r
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 4
particle-size: 4
statement: return this'.data.length
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 4
statement: return ()
particle-size: 4
particle-size: 4
particle-size: 4
particle-size: 4
statement: this'.Q_in.popFront()
particle-size: 1155
particle-size: 1155
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1155
particle-size: 1155
statement: return this'.data.length
particle-size: 1155
particle-size: 1155
particle-size: 1155
particle-size: 1155
particle-size: 1155
statement: return ()
particle-size: 1155
particle-size: 1155
particle-size: 1155
particle-size: 1155
statement: this'.Q_in.popFront()
particle-size: 1155
particle-size: 1155
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1155
particle-size: 1155
statement: return this'.data.length
particle-size: 1155
particle-size: 1155
particle-size: 1155
particle-size: 1155
particle-size: 1155
statement: return ()
particle-size: 1155
particle-size: 1155
particle-size: 1155
particle-size: 1155
statement: return ()
particle-size: 1159
particle-size: 1159
particle-size: 1159
particle-size: 1159
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2968
particle-size: 2968
statement: return this'.data.length
particle-size: 2968
particle-size: 2968
particle-size: 2968
particle-size: 2968
statement: this'.__H1.__run()
particle-size: 515
particle-size: 515
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 515
statement: this'.Q_in.popFront()
particle-size: 515
particle-size: 515
statement: this'.data = this'.data[1..this'.size()]
particle-size: 515
particle-size: 515
statement: return this'.data.length
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: return ()
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: return ()
particle-size: 515
particle-size: 515
particle-size: 515
particle-size: 515
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2968
particle-size: 2968
statement: return this'.data.length
particle-size: 2968
particle-size: 2968
particle-size: 2968
particle-size: 2968
statement: this'.__S0.__run()
particle-size: 89
particle-size: 89
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 89
statement: this'.route2 = 3
particle-size: 89
statement: this'.route3 = (2 + 1)
particle-size: 89
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 89
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 89
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 89
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 89
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 89
particle-size: 89
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 267
particle-size: 267
particle-size: 267
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 89
particle-size: 89
statement: r := this'.front()
particle-size: 89
particle-size: 89
statement: return this'.data[0]
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.popFront()
particle-size: 89
particle-size: 89
statement: this'.data = this'.data[1..this'.size()]
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return r
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 89
particle-size: 89
statement: r := this'.front()
particle-size: 89
particle-size: 89
statement: return this'.data[0]
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.popFront()
particle-size: 89
particle-size: 89
statement: this'.data = this'.data[1..this'.size()]
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return r
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 89
particle-size: 89
statement: r := this'.front()
particle-size: 89
particle-size: 89
statement: return this'.data[0]
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.popFront()
particle-size: 89
particle-size: 89
statement: this'.data = this'.data[1..this'.size()]
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return r
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.data = this'.data ~ [x]
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 3146
particle-size: 3146
statement: return this'.data.length
particle-size: 3146
particle-size: 3146
particle-size: 3146
particle-size: 3146
statement: this'.__S1.__run()
particle-size: 186
particle-size: 186
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 186
particle-size: 186
statement: r := this'.front()
particle-size: 186
particle-size: 186
statement: return this'.data[0]
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: this'.popFront()
particle-size: 186
particle-size: 186
statement: this'.data = this'.data[1..this'.size()]
particle-size: 186
particle-size: 186
statement: return this'.data.length
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: return ()
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: return r
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 186
particle-size: 186
statement: return this'.data.length
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: this'.data = this'.data ~ [x]
particle-size: 186
statement: return ()
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: return ()
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 3146
particle-size: 3146
statement: return this'.data.length
particle-size: 3146
particle-size: 3146
particle-size: 3146
particle-size: 3146
statement: this'.__S2.__run()
particle-size: 447
particle-size: 447
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 447
particle-size: 447
statement: r := this'.front()
particle-size: 447
particle-size: 447
statement: return this'.data[0]
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: this'.popFront()
particle-size: 447
particle-size: 447
statement: this'.data = this'.data[1..this'.size()]
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: return ()
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: return r
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 447
particle-size: 447
statement: return this'.data.length
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: return ()
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 440
statement: return ()
particle-size: 440
particle-size: 447
particle-size: 447
particle-size: 447
statement: return ()
particle-size: 447
particle-size: 447
particle-size: 447
particle-size: 447
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 3146
particle-size: 3146
statement: return this'.data.length
particle-size: 3146
particle-size: 3146
particle-size: 3146
particle-size: 3146
statement: this'.__S3.__run()
particle-size: 572
particle-size: 572
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 572
particle-size: 572
statement: r := this'.front()
particle-size: 572
particle-size: 572
statement: return this'.data[0]
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
statement: this'.popFront()
particle-size: 572
particle-size: 572
statement: this'.data = this'.data[1..this'.size()]
particle-size: 572
particle-size: 572
statement: return this'.data.length
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
statement: return ()
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
statement: return r
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 572
particle-size: 572
statement: return this'.data.length
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
statement: return ()
particle-size: 11
statement: this'.data = this'.data ~ [x]
particle-size: 561
statement: return ()
particle-size: 561
particle-size: 572
particle-size: 572
particle-size: 572
statement: return ()
particle-size: 572
particle-size: 572
particle-size: 572
particle-size: 572
statement: return ()
particle-size: 4485
particle-size: 4485
particle-size: 4485
particle-size: 1345
repetition: 21
statement: __d.__step()
particle-size: 1345
particle-size: 1345
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: return this'.data.length
particle-size: 1345
particle-size: 1345
particle-size: 1345
particle-size: 1345
statement: (action,node) := this'.scheduler()
particle-size: 1342
particle-size: 1342
statement: actions := ([]: (R × R)[])
particle-size: 1342
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1342
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(0,i)]
particle-size: 992
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(1,i)]
particle-size: 46
loop-index: 1
particle-size: 1342
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(0,i)]
particle-size: 470
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
loop-index: 2
particle-size: 1342
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(0,i)]
particle-size: 62
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(1,i)]
particle-size: 168
loop-index: 3
particle-size: 1342
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(0,i)]
particle-size: 137
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(1,i)]
particle-size: 191
loop-index: 4
particle-size: 1342
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(0,i)]
particle-size: 364
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(1,i)]
particle-size: 318
loop-index: 5
particle-size: 1342
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(0,i)]
particle-size: 497
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1342
particle-size: 1342
statement: return this'.data.length
particle-size: 1342
particle-size: 1342
particle-size: 1342
statement: actions ~= [(1,i)]
particle-size: 433
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1342
particle-size: 1342
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 3678
particle-size: 3678
particle-size: 3678
particle-size: 3678
particle-size: 3678
particle-size: 3678
particle-size: 3678
particle-size: 3678
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1156
particle-size: 1156
statement: return this'.data.length
particle-size: 1156
particle-size: 1156
particle-size: 1156
particle-size: 1156
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 46
particle-size: 46
particle-size: 46
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1156
particle-size: 1156
statement: return this'.data.length
particle-size: 1156
particle-size: 1156
particle-size: 1156
particle-size: 1156
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1156
particle-size: 1156
statement: return this'.data.length
particle-size: 1156
particle-size: 1156
particle-size: 1156
particle-size: 1156
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 168
particle-size: 168
statement: r := this'.front()
particle-size: 168
particle-size: 168
statement: return this'.data[0]
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: this'.popFront()
particle-size: 168
particle-size: 168
statement: this'.data = this'.data[1..this'.size()]
particle-size: 168
particle-size: 168
statement: return this'.data.length
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: return ()
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: return r
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
particle-size: 168
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.data = this'.data ~ [x]
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: return ()
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 56
particle-size: 56
particle-size: 56
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 56
particle-size: 56
particle-size: 56
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 56
particle-size: 56
statement: return this'.data.length
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: this'.data = this'.data ~ [x]
particle-size: 56
statement: return ()
particle-size: 56
particle-size: 56
particle-size: 56
particle-size: 56
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1156
particle-size: 1156
statement: return this'.data.length
particle-size: 1156
particle-size: 1156
particle-size: 1156
particle-size: 1156
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 191
particle-size: 191
statement: r := this'.front()
particle-size: 191
particle-size: 191
statement: return this'.data[0]
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: this'.popFront()
particle-size: 191
particle-size: 191
statement: this'.data = this'.data[1..this'.size()]
particle-size: 191
particle-size: 191
statement: return this'.data.length
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: return ()
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: return r
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 191
particle-size: 191
particle-size: 191
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 191
particle-size: 191
statement: return this'.data.length
particle-size: 191
particle-size: 191
particle-size: 191
particle-size: 191
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 191
particle-size: 191
particle-size: 191
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1156
particle-size: 1156
statement: return this'.data.length
particle-size: 1156
particle-size: 1156
particle-size: 1156
particle-size: 1156
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 318
particle-size: 318
statement: r := this'.front()
particle-size: 318
particle-size: 318
statement: return this'.data[0]
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: this'.popFront()
particle-size: 318
particle-size: 318
statement: this'.data = this'.data[1..this'.size()]
particle-size: 318
particle-size: 318
statement: return this'.data.length
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: return ()
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: return r
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 318
particle-size: 318
particle-size: 318
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 318
particle-size: 318
statement: return this'.data.length
particle-size: 318
particle-size: 318
particle-size: 318
particle-size: 318
statement: return ()
particle-size: 15
statement: this'.data = this'.data ~ [x]
particle-size: 303
statement: return ()
particle-size: 303
particle-size: 318
particle-size: 318
particle-size: 318
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1156
particle-size: 1156
statement: return this'.data.length
particle-size: 1156
particle-size: 1156
particle-size: 1156
particle-size: 1156
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 433
particle-size: 433
statement: r := this'.front()
particle-size: 433
particle-size: 433
statement: return this'.data[0]
particle-size: 433
particle-size: 433
particle-size: 433
particle-size: 433
particle-size: 433
statement: this'.popFront()
particle-size: 433
particle-size: 433
statement: this'.data = this'.data[1..this'.size()]
particle-size: 433
particle-size: 433
statement: return this'.data.length
particle-size: 433
particle-size: 433
particle-size: 433
particle-size: 433
particle-size: 433
statement: return ()
particle-size: 433
particle-size: 433
particle-size: 433
particle-size: 433
statement: return r
particle-size: 433
particle-size: 433
particle-size: 433
particle-size: 433
particle-size: 433
particle-size: 433
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 433
particle-size: 433
particle-size: 433
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 433
particle-size: 433
statement: return this'.data.length
particle-size: 433
particle-size: 433
particle-size: 433
particle-size: 433
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 427
statement: return ()
particle-size: 427
particle-size: 433
particle-size: 433
particle-size: 433
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2522
particle-size: 2522
statement: return this'.data.length
particle-size: 2522
particle-size: 2522
particle-size: 2522
particle-size: 2522
statement: this'.__H0.__run()
particle-size: 992
particle-size: 992
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 992
particle-size: 992
statement: return this
particle-size: 992
particle-size: 992
particle-size: 992
particle-size: 992
particle-size: 992
statement: this'.data = [x] ~ this'.data
particle-size: 992
statement: return ()
particle-size: 992
particle-size: 992
particle-size: 992
particle-size: 992
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 991
particle-size: 991
statement: this'.data = this'.data[1..this'.size()]
particle-size: 991
particle-size: 991
statement: return this'.data.length
particle-size: 991
particle-size: 991
particle-size: 991
particle-size: 991
particle-size: 991
statement: return ()
particle-size: 991
particle-size: 991
particle-size: 991
particle-size: 991
statement: this'.Q_in.popFront()
particle-size: 991
particle-size: 991
statement: this'.data = this'.data[1..this'.size()]
particle-size: 991
particle-size: 991
statement: return this'.data.length
particle-size: 991
particle-size: 991
particle-size: 991
particle-size: 991
particle-size: 991
statement: return ()
particle-size: 991
particle-size: 991
particle-size: 991
particle-size: 991
statement: return ()
particle-size: 992
particle-size: 992
particle-size: 992
particle-size: 992
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2522
particle-size: 2522
statement: return this'.data.length
particle-size: 2522
particle-size: 2522
particle-size: 2522
particle-size: 2522
statement: this'.__H1.__run()
particle-size: 470
particle-size: 470
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 470
statement: this'.Q_in.popFront()
particle-size: 470
particle-size: 470
statement: this'.data = this'.data[1..this'.size()]
particle-size: 470
particle-size: 470
statement: return this'.data.length
particle-size: 470
particle-size: 470
particle-size: 470
particle-size: 470
particle-size: 470
statement: return ()
particle-size: 470
particle-size: 470
particle-size: 470
particle-size: 470
statement: return ()
particle-size: 470
particle-size: 470
particle-size: 470
particle-size: 470
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2522
particle-size: 2522
statement: return this'.data.length
particle-size: 2522
particle-size: 2522
particle-size: 2522
particle-size: 2522
statement: this'.__S0.__run()
particle-size: 62
particle-size: 62
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 62
statement: this'.route2 = 3
particle-size: 62
statement: this'.route3 = (2 + 1)
particle-size: 62
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 62
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 62
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 62
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 62
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 62
particle-size: 62
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 186
particle-size: 186
particle-size: 186
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.data = this'.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.data = this'.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 62
particle-size: 62
statement: r := this'.front()
particle-size: 62
particle-size: 62
statement: return this'.data[0]
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.popFront()
particle-size: 62
particle-size: 62
statement: this'.data = this'.data[1..this'.size()]
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return r
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 62
particle-size: 62
statement: return this'.data.length
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: this'.data = this'.data ~ [x]
particle-size: 62
statement: return ()
particle-size: 62
particle-size: 62
particle-size: 62
particle-size: 62
statement: return ()
particle-size: 186
particle-size: 186
particle-size: 186
particle-size: 186
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2646
particle-size: 2646
statement: return this'.data.length
particle-size: 2646
particle-size: 2646
particle-size: 2646
particle-size: 2646
statement: this'.__S1.__run()
particle-size: 137
particle-size: 137
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 137
particle-size: 137
statement: r := this'.front()
particle-size: 137
particle-size: 137
statement: return this'.data[0]
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.popFront()
particle-size: 137
particle-size: 137
statement: this'.data = this'.data[1..this'.size()]
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return r
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: this'.data = this'.data ~ [x]
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2646
particle-size: 2646
statement: return this'.data.length
particle-size: 2646
particle-size: 2646
particle-size: 2646
particle-size: 2646
statement: this'.__S2.__run()
particle-size: 364
particle-size: 364
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 364
particle-size: 364
statement: r := this'.front()
particle-size: 364
particle-size: 364
statement: return this'.data[0]
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: this'.popFront()
particle-size: 364
particle-size: 364
statement: this'.data = this'.data[1..this'.size()]
particle-size: 364
particle-size: 364
statement: return this'.data.length
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: return ()
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: return r
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 364
particle-size: 364
statement: return this'.data.length
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 360
statement: return ()
particle-size: 360
particle-size: 364
particle-size: 364
particle-size: 364
statement: return ()
particle-size: 364
particle-size: 364
particle-size: 364
particle-size: 364
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2646
particle-size: 2646
statement: return this'.data.length
particle-size: 2646
particle-size: 2646
particle-size: 2646
particle-size: 2646
statement: this'.__S3.__run()
particle-size: 497
particle-size: 497
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 497
particle-size: 497
statement: r := this'.front()
particle-size: 497
particle-size: 497
statement: return this'.data[0]
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: this'.popFront()
particle-size: 497
particle-size: 497
statement: this'.data = this'.data[1..this'.size()]
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return ()
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return r
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 497
particle-size: 497
statement: return this'.data.length
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return ()
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 489
statement: return ()
particle-size: 489
particle-size: 497
particle-size: 497
particle-size: 497
statement: return ()
particle-size: 497
particle-size: 497
particle-size: 497
particle-size: 497
statement: return ()
particle-size: 3805
particle-size: 3805
particle-size: 3805
particle-size: 1136
repetition: 22
statement: __d.__step()
particle-size: 1136
particle-size: 1136
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: return this'.data.length
particle-size: 1136
particle-size: 1136
particle-size: 1136
particle-size: 1136
statement: (action,node) := this'.scheduler()
particle-size: 1133
particle-size: 1133
statement: actions := ([]: (R × R)[])
particle-size: 1133
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 1133
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(0,i)]
particle-size: 826
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(1,i)]
particle-size: 29
loop-index: 1
particle-size: 1133
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(0,i)]
particle-size: 435
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
loop-index: 2
particle-size: 1133
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(0,i)]
particle-size: 46
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(1,i)]
particle-size: 111
loop-index: 3
particle-size: 1133
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(0,i)]
particle-size: 103
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(1,i)]
particle-size: 141
loop-index: 4
particle-size: 1133
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(0,i)]
particle-size: 291
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(1,i)]
particle-size: 259
loop-index: 5
particle-size: 1133
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(0,i)]
particle-size: 428
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 1133
particle-size: 1133
statement: return this'.data.length
particle-size: 1133
particle-size: 1133
particle-size: 1133
statement: actions ~= [(1,i)]
particle-size: 370
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 1133
particle-size: 1133
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 3039
particle-size: 3039
particle-size: 3039
particle-size: 3039
particle-size: 3039
particle-size: 3039
particle-size: 3039
particle-size: 3039
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 910
particle-size: 910
statement: return this'.data.length
particle-size: 910
particle-size: 910
particle-size: 910
particle-size: 910
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 29
particle-size: 29
statement: r := this'.front()
particle-size: 29
particle-size: 29
statement: return this'.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.popFront()
particle-size: 29
particle-size: 29
statement: this'.data = this'.data[1..this'.size()]
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 29
particle-size: 29
particle-size: 29
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.data = this'.data ~ [x]
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 910
particle-size: 910
statement: return this'.data.length
particle-size: 910
particle-size: 910
particle-size: 910
particle-size: 910
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 910
particle-size: 910
statement: return this'.data.length
particle-size: 910
particle-size: 910
particle-size: 910
particle-size: 910
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 111
particle-size: 111
statement: r := this'.front()
particle-size: 111
particle-size: 111
statement: return this'.data[0]
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: this'.popFront()
particle-size: 111
particle-size: 111
statement: this'.data = this'.data[1..this'.size()]
particle-size: 111
particle-size: 111
statement: return this'.data.length
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return ()
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: return r
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
particle-size: 111
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 37
particle-size: 37
particle-size: 37
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 37
particle-size: 37
particle-size: 37
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 36
statement: return ()
particle-size: 36
particle-size: 37
particle-size: 37
particle-size: 37
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 37
particle-size: 37
particle-size: 37
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 37
particle-size: 37
statement: return this'.data.length
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 37
particle-size: 37
particle-size: 37
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 910
particle-size: 910
statement: return this'.data.length
particle-size: 910
particle-size: 910
particle-size: 910
particle-size: 910
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 141
particle-size: 141
statement: r := this'.front()
particle-size: 141
particle-size: 141
statement: return this'.data[0]
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: this'.popFront()
particle-size: 141
particle-size: 141
statement: this'.data = this'.data[1..this'.size()]
particle-size: 141
particle-size: 141
statement: return this'.data.length
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: return ()
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: return r
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 141
particle-size: 141
particle-size: 141
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 141
particle-size: 141
statement: return this'.data.length
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: this'.data = this'.data ~ [x]
particle-size: 141
statement: return ()
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 910
particle-size: 910
statement: return this'.data.length
particle-size: 910
particle-size: 910
particle-size: 910
particle-size: 910
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 259
particle-size: 259
statement: r := this'.front()
particle-size: 259
particle-size: 259
statement: return this'.data[0]
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: this'.popFront()
particle-size: 259
particle-size: 259
statement: this'.data = this'.data[1..this'.size()]
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: return ()
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: return r
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 259
particle-size: 259
particle-size: 259
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 259
particle-size: 259
statement: return this'.data.length
particle-size: 259
particle-size: 259
particle-size: 259
particle-size: 259
statement: return ()
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 251
statement: return ()
particle-size: 251
particle-size: 259
particle-size: 259
particle-size: 259
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 910
particle-size: 910
statement: return this'.data.length
particle-size: 910
particle-size: 910
particle-size: 910
particle-size: 910
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 370
particle-size: 370
statement: r := this'.front()
particle-size: 370
particle-size: 370
statement: return this'.data[0]
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: this'.popFront()
particle-size: 370
particle-size: 370
statement: this'.data = this'.data[1..this'.size()]
particle-size: 370
particle-size: 370
statement: return this'.data.length
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: return ()
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: return r
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 370
particle-size: 370
particle-size: 370
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 370
particle-size: 370
statement: return this'.data.length
particle-size: 370
particle-size: 370
particle-size: 370
particle-size: 370
statement: return ()
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 365
statement: return ()
particle-size: 365
particle-size: 370
particle-size: 370
particle-size: 370
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2129
particle-size: 2129
statement: return this'.data.length
particle-size: 2129
particle-size: 2129
particle-size: 2129
particle-size: 2129
statement: this'.__H0.__run()
particle-size: 826
particle-size: 826
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 826
particle-size: 826
statement: return this
particle-size: 826
particle-size: 826
particle-size: 826
particle-size: 826
particle-size: 826
statement: this'.data = [x] ~ this'.data
particle-size: 826
statement: return ()
particle-size: 826
particle-size: 826
particle-size: 826
particle-size: 826
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 825
particle-size: 825
statement: this'.data = this'.data[1..this'.size()]
particle-size: 825
particle-size: 825
statement: return this'.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return ()
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: this'.Q_in.popFront()
particle-size: 825
particle-size: 825
statement: this'.data = this'.data[1..this'.size()]
particle-size: 825
particle-size: 825
statement: return this'.data.length
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return ()
particle-size: 825
particle-size: 825
particle-size: 825
particle-size: 825
statement: return ()
particle-size: 826
particle-size: 826
particle-size: 826
particle-size: 826
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2129
particle-size: 2129
statement: return this'.data.length
particle-size: 2129
particle-size: 2129
particle-size: 2129
particle-size: 2129
statement: this'.__H1.__run()
particle-size: 435
particle-size: 435
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 435
statement: this'.Q_in.popFront()
particle-size: 435
particle-size: 435
statement: this'.data = this'.data[1..this'.size()]
particle-size: 435
particle-size: 435
statement: return this'.data.length
particle-size: 435
particle-size: 435
particle-size: 435
particle-size: 435
particle-size: 435
statement: return ()
particle-size: 435
particle-size: 435
particle-size: 435
particle-size: 435
statement: return ()
particle-size: 435
particle-size: 435
particle-size: 435
particle-size: 435
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2129
particle-size: 2129
statement: return this'.data.length
particle-size: 2129
particle-size: 2129
particle-size: 2129
particle-size: 2129
statement: this'.__S0.__run()
particle-size: 46
particle-size: 46
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 46
statement: this'.route2 = 3
particle-size: 46
statement: this'.route3 = (2 + 1)
particle-size: 46
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 46
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 46
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 46
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 46
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 46
particle-size: 46
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 138
particle-size: 138
particle-size: 138
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 46
particle-size: 46
statement: r := this'.front()
particle-size: 46
particle-size: 46
statement: return this'.data[0]
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.popFront()
particle-size: 46
particle-size: 46
statement: this'.data = this'.data[1..this'.size()]
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return r
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 46
particle-size: 46
statement: return this'.data.length
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: this'.data = this'.data ~ [x]
particle-size: 46
statement: return ()
particle-size: 46
particle-size: 46
particle-size: 46
particle-size: 46
statement: return ()
particle-size: 138
particle-size: 138
particle-size: 138
particle-size: 138
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2221
particle-size: 2221
statement: return this'.data.length
particle-size: 2221
particle-size: 2221
particle-size: 2221
particle-size: 2221
statement: this'.__S1.__run()
particle-size: 103
particle-size: 103
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 103
particle-size: 103
statement: r := this'.front()
particle-size: 103
particle-size: 103
statement: return this'.data[0]
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.popFront()
particle-size: 103
particle-size: 103
statement: this'.data = this'.data[1..this'.size()]
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return r
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 103
particle-size: 103
statement: return this'.data.length
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: this'.data = this'.data ~ [x]
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: return ()
particle-size: 103
particle-size: 103
particle-size: 103
particle-size: 103
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2221
particle-size: 2221
statement: return this'.data.length
particle-size: 2221
particle-size: 2221
particle-size: 2221
particle-size: 2221
statement: this'.__S2.__run()
particle-size: 291
particle-size: 291
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 291
particle-size: 291
statement: r := this'.front()
particle-size: 291
particle-size: 291
statement: return this'.data[0]
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
statement: this'.popFront()
particle-size: 291
particle-size: 291
statement: this'.data = this'.data[1..this'.size()]
particle-size: 291
particle-size: 291
statement: return this'.data.length
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
statement: return ()
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
statement: return r
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 291
particle-size: 291
statement: return this'.data.length
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
statement: return ()
particle-size: 4
statement: this'.data = this'.data ~ [x]
particle-size: 287
statement: return ()
particle-size: 287
particle-size: 291
particle-size: 291
particle-size: 291
statement: return ()
particle-size: 291
particle-size: 291
particle-size: 291
particle-size: 291
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2221
particle-size: 2221
statement: return this'.data.length
particle-size: 2221
particle-size: 2221
particle-size: 2221
particle-size: 2221
statement: this'.__S3.__run()
particle-size: 428
particle-size: 428
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 428
particle-size: 428
statement: r := this'.front()
particle-size: 428
particle-size: 428
statement: return this'.data[0]
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: this'.popFront()
particle-size: 428
particle-size: 428
statement: this'.data = this'.data[1..this'.size()]
particle-size: 428
particle-size: 428
statement: return this'.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: return ()
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: return r
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 428
particle-size: 428
statement: return this'.data.length
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: return ()
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 416
statement: return ()
particle-size: 416
particle-size: 428
particle-size: 428
particle-size: 428
statement: return ()
particle-size: 428
particle-size: 428
particle-size: 428
particle-size: 428
statement: return ()
particle-size: 3134
particle-size: 3134
particle-size: 3134
particle-size: 943
repetition: 23
statement: __d.__step()
particle-size: 943
particle-size: 943
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: return this'.data.length
particle-size: 943
particle-size: 943
particle-size: 943
particle-size: 943
statement: (action,node) := this'.scheduler()
particle-size: 940
particle-size: 940
statement: actions := ([]: (R × R)[])
particle-size: 940
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 940
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(0,i)]
particle-size: 672
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(1,i)]
particle-size: 20
loop-index: 1
particle-size: 940
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(0,i)]
particle-size: 371
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
loop-index: 2
particle-size: 940
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(0,i)]
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(1,i)]
particle-size: 84
loop-index: 3
particle-size: 940
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(0,i)]
particle-size: 67
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(1,i)]
particle-size: 106
loop-index: 4
particle-size: 940
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(0,i)]
particle-size: 207
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(1,i)]
particle-size: 212
loop-index: 5
particle-size: 940
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(0,i)]
particle-size: 338
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 940
particle-size: 940
statement: return this'.data.length
particle-size: 940
particle-size: 940
particle-size: 940
statement: actions ~= [(1,i)]
particle-size: 325
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 940
particle-size: 940
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2431
particle-size: 2431
particle-size: 2431
particle-size: 2431
particle-size: 2431
particle-size: 2431
particle-size: 2431
particle-size: 2431
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 747
particle-size: 747
statement: return this'.data.length
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 747
particle-size: 747
statement: return this'.data.length
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 747
particle-size: 747
statement: return this'.data.length
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 84
particle-size: 84
statement: r := this'.front()
particle-size: 84
particle-size: 84
statement: return this'.data[0]
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: this'.popFront()
particle-size: 84
particle-size: 84
statement: this'.data = this'.data[1..this'.size()]
particle-size: 84
particle-size: 84
statement: return this'.data.length
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: return r
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
particle-size: 84
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 28
particle-size: 28
particle-size: 28
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 28
particle-size: 28
particle-size: 28
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 27
statement: return ()
particle-size: 27
particle-size: 28
particle-size: 28
particle-size: 28
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 28
particle-size: 28
particle-size: 28
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: this'.data = this'.data ~ [x]
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 747
particle-size: 747
statement: return this'.data.length
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 106
particle-size: 106
statement: r := this'.front()
particle-size: 106
particle-size: 106
statement: return this'.data[0]
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.popFront()
particle-size: 106
particle-size: 106
statement: this'.data = this'.data[1..this'.size()]
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: return r
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 106
particle-size: 106
particle-size: 106
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 106
particle-size: 106
statement: return this'.data.length
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: this'.data = this'.data ~ [x]
particle-size: 106
statement: return ()
particle-size: 106
particle-size: 106
particle-size: 106
particle-size: 106
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 747
particle-size: 747
statement: return this'.data.length
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 212
particle-size: 212
statement: r := this'.front()
particle-size: 212
particle-size: 212
statement: return this'.data[0]
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
statement: this'.popFront()
particle-size: 212
particle-size: 212
statement: this'.data = this'.data[1..this'.size()]
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
statement: return ()
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
statement: return r
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 212
particle-size: 212
particle-size: 212
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 212
particle-size: 212
statement: return this'.data.length
particle-size: 212
particle-size: 212
particle-size: 212
particle-size: 212
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 203
statement: return ()
particle-size: 203
particle-size: 212
particle-size: 212
particle-size: 212
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 747
particle-size: 747
statement: return this'.data.length
particle-size: 747
particle-size: 747
particle-size: 747
particle-size: 747
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 325
particle-size: 325
statement: r := this'.front()
particle-size: 325
particle-size: 325
statement: return this'.data[0]
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: this'.popFront()
particle-size: 325
particle-size: 325
statement: this'.data = this'.data[1..this'.size()]
particle-size: 325
particle-size: 325
statement: return this'.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return ()
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return r
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 325
particle-size: 325
particle-size: 325
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 325
particle-size: 325
statement: return this'.data.length
particle-size: 325
particle-size: 325
particle-size: 325
particle-size: 325
statement: return ()
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 317
statement: return ()
particle-size: 317
particle-size: 325
particle-size: 325
particle-size: 325
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: this'.__H0.__run()
particle-size: 672
particle-size: 672
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 672
particle-size: 672
statement: return this
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
statement: this'.data = [x] ~ this'.data
particle-size: 672
statement: return ()
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 672
particle-size: 672
statement: this'.data = this'.data[1..this'.size()]
particle-size: 672
particle-size: 672
statement: return this'.data.length
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
statement: return ()
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
statement: this'.Q_in.popFront()
particle-size: 672
particle-size: 672
statement: this'.data = this'.data[1..this'.size()]
particle-size: 672
particle-size: 672
statement: return this'.data.length
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
statement: return ()
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
statement: return ()
particle-size: 672
particle-size: 672
particle-size: 672
particle-size: 672
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: this'.__H1.__run()
particle-size: 371
particle-size: 371
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 371
statement: this'.Q_in.popFront()
particle-size: 371
particle-size: 371
statement: this'.data = this'.data[1..this'.size()]
particle-size: 371
particle-size: 371
statement: return this'.data.length
particle-size: 371
particle-size: 371
particle-size: 371
particle-size: 371
particle-size: 371
statement: return ()
particle-size: 371
particle-size: 371
particle-size: 371
particle-size: 371
statement: return ()
particle-size: 371
particle-size: 371
particle-size: 371
particle-size: 371
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1684
particle-size: 1684
statement: return this'.data.length
particle-size: 1684
particle-size: 1684
particle-size: 1684
particle-size: 1684
statement: this'.__S0.__run()
particle-size: 29
particle-size: 29
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 29
statement: this'.route2 = 3
particle-size: 29
statement: this'.route3 = (2 + 1)
particle-size: 29
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 29
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 29
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 29
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 29
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 29
particle-size: 29
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 87
particle-size: 87
particle-size: 87
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 29
particle-size: 29
statement: r := this'.front()
particle-size: 29
particle-size: 29
statement: return this'.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.popFront()
particle-size: 29
particle-size: 29
statement: this'.data = this'.data[1..this'.size()]
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.data = this'.data ~ [x]
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 29
particle-size: 29
statement: r := this'.front()
particle-size: 29
particle-size: 29
statement: return this'.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.popFront()
particle-size: 29
particle-size: 29
statement: this'.data = this'.data[1..this'.size()]
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.data = this'.data ~ [x]
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 29
particle-size: 29
statement: r := this'.front()
particle-size: 29
particle-size: 29
statement: return this'.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.popFront()
particle-size: 29
particle-size: 29
statement: this'.data = this'.data[1..this'.size()]
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.data = this'.data ~ [x]
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 87
particle-size: 87
particle-size: 87
particle-size: 87
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1742
particle-size: 1742
statement: return this'.data.length
particle-size: 1742
particle-size: 1742
particle-size: 1742
particle-size: 1742
statement: this'.__S1.__run()
particle-size: 67
particle-size: 67
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 67
particle-size: 67
statement: r := this'.front()
particle-size: 67
particle-size: 67
statement: return this'.data[0]
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.popFront()
particle-size: 67
particle-size: 67
statement: this'.data = this'.data[1..this'.size()]
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return r
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 67
particle-size: 67
statement: return this'.data.length
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: this'.data = this'.data ~ [x]
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: return ()
particle-size: 67
particle-size: 67
particle-size: 67
particle-size: 67
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1742
particle-size: 1742
statement: return this'.data.length
particle-size: 1742
particle-size: 1742
particle-size: 1742
particle-size: 1742
statement: this'.__S2.__run()
particle-size: 207
particle-size: 207
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 207
particle-size: 207
statement: r := this'.front()
particle-size: 207
particle-size: 207
statement: return this'.data[0]
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: this'.popFront()
particle-size: 207
particle-size: 207
statement: this'.data = this'.data[1..this'.size()]
particle-size: 207
particle-size: 207
statement: return this'.data.length
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: return ()
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: return r
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 207
particle-size: 207
statement: return this'.data.length
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 206
statement: return ()
particle-size: 206
particle-size: 207
particle-size: 207
particle-size: 207
statement: return ()
particle-size: 207
particle-size: 207
particle-size: 207
particle-size: 207
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1742
particle-size: 1742
statement: return this'.data.length
particle-size: 1742
particle-size: 1742
particle-size: 1742
particle-size: 1742
statement: this'.__S3.__run()
particle-size: 338
particle-size: 338
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 338
particle-size: 338
statement: r := this'.front()
particle-size: 338
particle-size: 338
statement: return this'.data[0]
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
statement: this'.popFront()
particle-size: 338
particle-size: 338
statement: this'.data = this'.data[1..this'.size()]
particle-size: 338
particle-size: 338
statement: return this'.data.length
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
statement: return ()
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
statement: return r
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 338
particle-size: 338
statement: return this'.data.length
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
statement: return ()
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 330
statement: return ()
particle-size: 330
particle-size: 338
particle-size: 338
particle-size: 338
statement: return ()
particle-size: 338
particle-size: 338
particle-size: 338
particle-size: 338
statement: return ()
particle-size: 2492
particle-size: 2492
particle-size: 2492
particle-size: 756
repetition: 24
statement: __d.__step()
particle-size: 756
particle-size: 756
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: return this'.data.length
particle-size: 756
particle-size: 756
particle-size: 756
particle-size: 756
statement: (action,node) := this'.scheduler()
particle-size: 753
particle-size: 753
statement: actions := ([]: (R × R)[])
particle-size: 753
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 753
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(0,i)]
particle-size: 534
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 1
particle-size: 753
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(0,i)]
particle-size: 326
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
loop-index: 2
particle-size: 753
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(0,i)]
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(1,i)]
particle-size: 57
loop-index: 3
particle-size: 753
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(0,i)]
particle-size: 47
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(1,i)]
particle-size: 69
loop-index: 4
particle-size: 753
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(0,i)]
particle-size: 150
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(1,i)]
particle-size: 157
loop-index: 5
particle-size: 753
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(0,i)]
particle-size: 267
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 753
particle-size: 753
statement: return this'.data.length
particle-size: 753
particle-size: 753
particle-size: 753
statement: actions ~= [(1,i)]
particle-size: 261
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 753
particle-size: 753
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1898
particle-size: 1898
particle-size: 1898
particle-size: 1898
particle-size: 1898
particle-size: 1898
particle-size: 1898
particle-size: 1898
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 554
particle-size: 554
statement: return this'.data.length
particle-size: 554
particle-size: 554
particle-size: 554
particle-size: 554
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 554
particle-size: 554
statement: return this'.data.length
particle-size: 554
particle-size: 554
particle-size: 554
particle-size: 554
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 554
particle-size: 554
statement: return this'.data.length
particle-size: 554
particle-size: 554
particle-size: 554
particle-size: 554
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 57
particle-size: 57
statement: r := this'.front()
particle-size: 57
particle-size: 57
statement: return this'.data[0]
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: this'.popFront()
particle-size: 57
particle-size: 57
statement: this'.data = this'.data[1..this'.size()]
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return ()
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return r
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 19
particle-size: 19
particle-size: 19
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 19
particle-size: 19
statement: return this'.data.length
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: this'.data = this'.data ~ [x]
particle-size: 19
statement: return ()
particle-size: 19
particle-size: 19
particle-size: 19
particle-size: 19
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 554
particle-size: 554
statement: return this'.data.length
particle-size: 554
particle-size: 554
particle-size: 554
particle-size: 554
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 69
particle-size: 69
statement: r := this'.front()
particle-size: 69
particle-size: 69
statement: return this'.data[0]
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.popFront()
particle-size: 69
particle-size: 69
statement: this'.data = this'.data[1..this'.size()]
particle-size: 69
particle-size: 69
statement: return this'.data.length
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: return r
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 69
particle-size: 69
particle-size: 69
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 69
particle-size: 69
statement: return this'.data.length
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: this'.data = this'.data ~ [x]
particle-size: 69
statement: return ()
particle-size: 69
particle-size: 69
particle-size: 69
particle-size: 69
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 554
particle-size: 554
statement: return this'.data.length
particle-size: 554
particle-size: 554
particle-size: 554
particle-size: 554
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 157
particle-size: 157
statement: r := this'.front()
particle-size: 157
particle-size: 157
statement: return this'.data[0]
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: this'.popFront()
particle-size: 157
particle-size: 157
statement: this'.data = this'.data[1..this'.size()]
particle-size: 157
particle-size: 157
statement: return this'.data.length
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return r
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 157
particle-size: 157
particle-size: 157
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 157
particle-size: 157
statement: return this'.data.length
particle-size: 157
particle-size: 157
particle-size: 157
particle-size: 157
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 154
statement: return ()
particle-size: 154
particle-size: 157
particle-size: 157
particle-size: 157
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 554
particle-size: 554
statement: return this'.data.length
particle-size: 554
particle-size: 554
particle-size: 554
particle-size: 554
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 261
particle-size: 261
statement: r := this'.front()
particle-size: 261
particle-size: 261
statement: return this'.data[0]
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: this'.popFront()
particle-size: 261
particle-size: 261
statement: this'.data = this'.data[1..this'.size()]
particle-size: 261
particle-size: 261
statement: return this'.data.length
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return r
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 261
particle-size: 261
particle-size: 261
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 261
particle-size: 261
statement: return this'.data.length
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 255
statement: return ()
particle-size: 255
particle-size: 261
particle-size: 261
particle-size: 261
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1344
particle-size: 1344
statement: return this'.data.length
particle-size: 1344
particle-size: 1344
particle-size: 1344
particle-size: 1344
statement: this'.__H0.__run()
particle-size: 534
particle-size: 534
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 534
particle-size: 534
statement: return this
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
statement: this'.data = [x] ~ this'.data
particle-size: 534
statement: return ()
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 534
particle-size: 534
statement: this'.data = this'.data[1..this'.size()]
particle-size: 534
particle-size: 534
statement: return this'.data.length
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
statement: return ()
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
statement: this'.Q_in.popFront()
particle-size: 534
particle-size: 534
statement: this'.data = this'.data[1..this'.size()]
particle-size: 534
particle-size: 534
statement: return this'.data.length
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
statement: return ()
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
statement: return ()
particle-size: 534
particle-size: 534
particle-size: 534
particle-size: 534
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1344
particle-size: 1344
statement: return this'.data.length
particle-size: 1344
particle-size: 1344
particle-size: 1344
particle-size: 1344
statement: this'.__H1.__run()
particle-size: 326
particle-size: 326
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 326
statement: this'.Q_in.popFront()
particle-size: 326
particle-size: 326
statement: this'.data = this'.data[1..this'.size()]
particle-size: 326
particle-size: 326
statement: return this'.data.length
particle-size: 326
particle-size: 326
particle-size: 326
particle-size: 326
particle-size: 326
statement: return ()
particle-size: 326
particle-size: 326
particle-size: 326
particle-size: 326
statement: return ()
particle-size: 326
particle-size: 326
particle-size: 326
particle-size: 326
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1344
particle-size: 1344
statement: return this'.data.length
particle-size: 1344
particle-size: 1344
particle-size: 1344
particle-size: 1344
statement: this'.__S0.__run()
particle-size: 20
particle-size: 20
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 20
statement: this'.route2 = 3
particle-size: 20
statement: this'.route3 = (2 + 1)
particle-size: 20
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 20
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 20
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 20
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 20
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 20
particle-size: 20
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 60
particle-size: 60
particle-size: 60
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 60
particle-size: 60
particle-size: 60
particle-size: 60
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1384
particle-size: 1384
statement: return this'.data.length
particle-size: 1384
particle-size: 1384
particle-size: 1384
particle-size: 1384
statement: this'.__S1.__run()
particle-size: 47
particle-size: 47
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 47
particle-size: 47
statement: r := this'.front()
particle-size: 47
particle-size: 47
statement: return this'.data[0]
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.popFront()
particle-size: 47
particle-size: 47
statement: this'.data = this'.data[1..this'.size()]
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return r
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 47
particle-size: 47
statement: return this'.data.length
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: this'.data = this'.data ~ [x]
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: return ()
particle-size: 47
particle-size: 47
particle-size: 47
particle-size: 47
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1384
particle-size: 1384
statement: return this'.data.length
particle-size: 1384
particle-size: 1384
particle-size: 1384
particle-size: 1384
statement: this'.__S2.__run()
particle-size: 150
particle-size: 150
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 150
particle-size: 150
statement: r := this'.front()
particle-size: 150
particle-size: 150
statement: return this'.data[0]
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: this'.popFront()
particle-size: 150
particle-size: 150
statement: this'.data = this'.data[1..this'.size()]
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return r
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 150
particle-size: 150
statement: return this'.data.length
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 149
statement: return ()
particle-size: 149
particle-size: 150
particle-size: 150
particle-size: 150
statement: return ()
particle-size: 150
particle-size: 150
particle-size: 150
particle-size: 150
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1384
particle-size: 1384
statement: return this'.data.length
particle-size: 1384
particle-size: 1384
particle-size: 1384
particle-size: 1384
statement: this'.__S3.__run()
particle-size: 267
particle-size: 267
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 267
particle-size: 267
statement: r := this'.front()
particle-size: 267
particle-size: 267
statement: return this'.data[0]
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: this'.popFront()
particle-size: 267
particle-size: 267
statement: this'.data = this'.data[1..this'.size()]
particle-size: 267
particle-size: 267
statement: return this'.data.length
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return ()
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return r
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 267
particle-size: 267
statement: return this'.data.length
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return ()
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 257
statement: return ()
particle-size: 257
particle-size: 267
particle-size: 267
particle-size: 267
statement: return ()
particle-size: 267
particle-size: 267
particle-size: 267
particle-size: 267
statement: return ()
particle-size: 1941
particle-size: 1941
particle-size: 1941
particle-size: 602
repetition: 25
statement: __d.__step()
particle-size: 602
particle-size: 602
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: return this'.data.length
particle-size: 602
particle-size: 602
particle-size: 602
particle-size: 602
statement: (action,node) := this'.scheduler()
particle-size: 598
particle-size: 598
statement: actions := ([]: (R × R)[])
particle-size: 598
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 598
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(0,i)]
particle-size: 413
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 1
particle-size: 598
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(0,i)]
particle-size: 261
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
loop-index: 2
particle-size: 598
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(1,i)]
particle-size: 42
loop-index: 3
particle-size: 598
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(0,i)]
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(1,i)]
particle-size: 48
loop-index: 4
particle-size: 598
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(0,i)]
particle-size: 96
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(1,i)]
particle-size: 118
loop-index: 5
particle-size: 598
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(0,i)]
particle-size: 196
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 598
particle-size: 598
statement: return this'.data.length
particle-size: 598
particle-size: 598
particle-size: 598
statement: actions ~= [(1,i)]
particle-size: 216
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 598
particle-size: 598
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
particle-size: 1435
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 430
particle-size: 430
statement: return this'.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 430
particle-size: 430
statement: return this'.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 430
particle-size: 430
statement: return this'.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 42
particle-size: 42
statement: r := this'.front()
particle-size: 42
particle-size: 42
statement: return this'.data[0]
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: this'.popFront()
particle-size: 42
particle-size: 42
statement: this'.data = this'.data[1..this'.size()]
particle-size: 42
particle-size: 42
statement: return this'.data.length
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return ()
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: return r
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 14
particle-size: 14
particle-size: 14
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 14
particle-size: 14
statement: return this'.data.length
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: this'.data = this'.data ~ [x]
particle-size: 14
statement: return ()
particle-size: 14
particle-size: 14
particle-size: 14
particle-size: 14
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 430
particle-size: 430
statement: return this'.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 48
particle-size: 48
statement: r := this'.front()
particle-size: 48
particle-size: 48
statement: return this'.data[0]
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.popFront()
particle-size: 48
particle-size: 48
statement: this'.data = this'.data[1..this'.size()]
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: return r
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 48
particle-size: 48
particle-size: 48
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 48
particle-size: 48
statement: return this'.data.length
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: this'.data = this'.data ~ [x]
particle-size: 48
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 48
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 430
particle-size: 430
statement: return this'.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 118
particle-size: 118
statement: r := this'.front()
particle-size: 118
particle-size: 118
statement: return this'.data[0]
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: this'.popFront()
particle-size: 118
particle-size: 118
statement: this'.data = this'.data[1..this'.size()]
particle-size: 118
particle-size: 118
statement: return this'.data.length
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return r
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 118
particle-size: 118
particle-size: 118
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 118
particle-size: 118
statement: return this'.data.length
particle-size: 118
particle-size: 118
particle-size: 118
particle-size: 118
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 115
statement: return ()
particle-size: 115
particle-size: 118
particle-size: 118
particle-size: 118
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 430
particle-size: 430
statement: return this'.data.length
particle-size: 430
particle-size: 430
particle-size: 430
particle-size: 430
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 216
particle-size: 216
statement: r := this'.front()
particle-size: 216
particle-size: 216
statement: return this'.data[0]
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: this'.popFront()
particle-size: 216
particle-size: 216
statement: this'.data = this'.data[1..this'.size()]
particle-size: 216
particle-size: 216
statement: return this'.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return r
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 216
particle-size: 216
particle-size: 216
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 216
particle-size: 216
statement: return this'.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 9
statement: this'.data = this'.data ~ [x]
particle-size: 207
statement: return ()
particle-size: 207
particle-size: 216
particle-size: 216
particle-size: 216
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 1005
particle-size: 1005
statement: return this'.data.length
particle-size: 1005
particle-size: 1005
particle-size: 1005
particle-size: 1005
statement: this'.__H0.__run()
particle-size: 413
particle-size: 413
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 413
particle-size: 413
statement: return this
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: this'.data = [x] ~ this'.data
particle-size: 413
statement: return ()
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 413
particle-size: 413
statement: this'.data = this'.data[1..this'.size()]
particle-size: 413
particle-size: 413
statement: return this'.data.length
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: return ()
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: this'.Q_in.popFront()
particle-size: 413
particle-size: 413
statement: this'.data = this'.data[1..this'.size()]
particle-size: 413
particle-size: 413
statement: return this'.data.length
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: return ()
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: return ()
particle-size: 413
particle-size: 413
particle-size: 413
particle-size: 413
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 1005
particle-size: 1005
statement: return this'.data.length
particle-size: 1005
particle-size: 1005
particle-size: 1005
particle-size: 1005
statement: this'.__H1.__run()
particle-size: 261
particle-size: 261
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 261
statement: this'.Q_in.popFront()
particle-size: 261
particle-size: 261
statement: this'.data = this'.data[1..this'.size()]
particle-size: 261
particle-size: 261
statement: return this'.data.length
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: return ()
particle-size: 261
particle-size: 261
particle-size: 261
particle-size: 261
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 1005
particle-size: 1005
statement: return this'.data.length
particle-size: 1005
particle-size: 1005
particle-size: 1005
particle-size: 1005
statement: this'.__S0.__run()
particle-size: 10
particle-size: 10
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 10
statement: this'.route2 = 3
particle-size: 10
statement: this'.route3 = (2 + 1)
particle-size: 10
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 10
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 10
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 10
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 10
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 10
particle-size: 10
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 30
particle-size: 30
particle-size: 30
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 30
particle-size: 30
particle-size: 30
particle-size: 30
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 1025
particle-size: 1025
statement: return this'.data.length
particle-size: 1025
particle-size: 1025
particle-size: 1025
particle-size: 1025
statement: this'.__S1.__run()
particle-size: 29
particle-size: 29
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 29
particle-size: 29
statement: r := this'.front()
particle-size: 29
particle-size: 29
statement: return this'.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.popFront()
particle-size: 29
particle-size: 29
statement: this'.data = this'.data[1..this'.size()]
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.data = this'.data ~ [x]
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 1025
particle-size: 1025
statement: return this'.data.length
particle-size: 1025
particle-size: 1025
particle-size: 1025
particle-size: 1025
statement: this'.__S2.__run()
particle-size: 96
particle-size: 96
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 96
particle-size: 96
statement: r := this'.front()
particle-size: 96
particle-size: 96
statement: return this'.data[0]
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.popFront()
particle-size: 96
particle-size: 96
statement: this'.data = this'.data[1..this'.size()]
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return r
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 96
particle-size: 96
statement: return this'.data.length
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: this'.data = this'.data ~ [x]
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: return ()
particle-size: 96
particle-size: 96
particle-size: 96
particle-size: 96
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 1025
particle-size: 1025
statement: return this'.data.length
particle-size: 1025
particle-size: 1025
particle-size: 1025
particle-size: 1025
statement: this'.__S3.__run()
particle-size: 196
particle-size: 196
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 196
particle-size: 196
statement: r := this'.front()
particle-size: 196
particle-size: 196
statement: return this'.data[0]
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: this'.popFront()
particle-size: 196
particle-size: 196
statement: this'.data = this'.data[1..this'.size()]
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return ()
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return r
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 196
particle-size: 196
statement: return this'.data.length
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 190
statement: return ()
particle-size: 190
particle-size: 196
particle-size: 196
particle-size: 196
statement: return ()
particle-size: 196
particle-size: 196
particle-size: 196
particle-size: 196
statement: return ()
particle-size: 1459
particle-size: 1459
particle-size: 1459
particle-size: 459
repetition: 26
statement: __d.__step()
particle-size: 459
particle-size: 459
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: return this'.data.length
particle-size: 459
particle-size: 459
particle-size: 459
particle-size: 459
statement: (action,node) := this'.scheduler()
particle-size: 455
particle-size: 455
statement: actions := ([]: (R × R)[])
particle-size: 455
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 455
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(0,i)]
particle-size: 315
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 1
particle-size: 455
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(0,i)]
particle-size: 216
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
loop-index: 2
particle-size: 455
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(1,i)]
particle-size: 24
loop-index: 3
particle-size: 455
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(0,i)]
particle-size: 20
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(1,i)]
particle-size: 29
loop-index: 4
particle-size: 455
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(0,i)]
particle-size: 65
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(1,i)]
particle-size: 78
loop-index: 5
particle-size: 455
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(0,i)]
particle-size: 144
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 455
particle-size: 455
statement: return this'.data.length
particle-size: 455
particle-size: 455
particle-size: 455
statement: actions ~= [(1,i)]
particle-size: 163
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 455
particle-size: 455
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 1062
particle-size: 1062
particle-size: 1062
particle-size: 1062
particle-size: 1062
particle-size: 1062
particle-size: 1062
particle-size: 1062
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 8
particle-size: 8
particle-size: 8
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 29
particle-size: 29
statement: r := this'.front()
particle-size: 29
particle-size: 29
statement: return this'.data[0]
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.popFront()
particle-size: 29
particle-size: 29
statement: this'.data = this'.data[1..this'.size()]
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: return r
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 29
particle-size: 29
particle-size: 29
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: this'.data = this'.data ~ [x]
particle-size: 29
statement: return ()
particle-size: 29
particle-size: 29
particle-size: 29
particle-size: 29
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 78
particle-size: 78
statement: r := this'.front()
particle-size: 78
particle-size: 78
statement: return this'.data[0]
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: this'.popFront()
particle-size: 78
particle-size: 78
statement: this'.data = this'.data[1..this'.size()]
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return r
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 78
particle-size: 78
particle-size: 78
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 78
particle-size: 78
statement: return this'.data.length
particle-size: 78
particle-size: 78
particle-size: 78
particle-size: 78
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 77
statement: return ()
particle-size: 77
particle-size: 78
particle-size: 78
particle-size: 78
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 296
particle-size: 296
statement: return this'.data.length
particle-size: 296
particle-size: 296
particle-size: 296
particle-size: 296
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 163
particle-size: 163
statement: r := this'.front()
particle-size: 163
particle-size: 163
statement: return this'.data[0]
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: this'.popFront()
particle-size: 163
particle-size: 163
statement: this'.data = this'.data[1..this'.size()]
particle-size: 163
particle-size: 163
statement: return this'.data.length
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return ()
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return r
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 163
particle-size: 163
particle-size: 163
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 163
particle-size: 163
statement: return this'.data.length
particle-size: 163
particle-size: 163
particle-size: 163
particle-size: 163
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 157
statement: return ()
particle-size: 157
particle-size: 163
particle-size: 163
particle-size: 163
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 766
particle-size: 766
statement: return this'.data.length
particle-size: 766
particle-size: 766
particle-size: 766
particle-size: 766
statement: this'.__H0.__run()
particle-size: 315
particle-size: 315
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 315
particle-size: 315
statement: return this
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: this'.data = [x] ~ this'.data
particle-size: 315
statement: return ()
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 315
particle-size: 315
statement: this'.data = this'.data[1..this'.size()]
particle-size: 315
particle-size: 315
statement: return this'.data.length
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: return ()
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: this'.Q_in.popFront()
particle-size: 315
particle-size: 315
statement: this'.data = this'.data[1..this'.size()]
particle-size: 315
particle-size: 315
statement: return this'.data.length
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: return ()
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: return ()
particle-size: 315
particle-size: 315
particle-size: 315
particle-size: 315
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 766
particle-size: 766
statement: return this'.data.length
particle-size: 766
particle-size: 766
particle-size: 766
particle-size: 766
statement: this'.__H1.__run()
particle-size: 216
particle-size: 216
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 216
statement: this'.Q_in.popFront()
particle-size: 216
particle-size: 216
statement: this'.data = this'.data[1..this'.size()]
particle-size: 216
particle-size: 216
statement: return this'.data.length
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: return ()
particle-size: 216
particle-size: 216
particle-size: 216
particle-size: 216
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 766
particle-size: 766
statement: return this'.data.length
particle-size: 766
particle-size: 766
particle-size: 766
particle-size: 766
statement: this'.__S0.__run()
particle-size: 6
particle-size: 6
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 6
statement: this'.route2 = 3
particle-size: 6
statement: this'.route3 = (2 + 1)
particle-size: 6
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 6
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 6
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 6
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 6
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 6
particle-size: 6
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 18
particle-size: 18
particle-size: 18
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: this'.__S1.__run()
particle-size: 20
particle-size: 20
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: this'.__S2.__run()
particle-size: 65
particle-size: 65
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 65
particle-size: 65
statement: r := this'.front()
particle-size: 65
particle-size: 65
statement: return this'.data[0]
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this'.popFront()
particle-size: 65
particle-size: 65
statement: this'.data = this'.data[1..this'.size()]
particle-size: 65
particle-size: 65
statement: return this'.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return r
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 65
particle-size: 65
statement: return this'.data.length
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: this'.data = this'.data ~ [x]
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: return ()
particle-size: 65
particle-size: 65
particle-size: 65
particle-size: 65
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 778
particle-size: 778
statement: return this'.data.length
particle-size: 778
particle-size: 778
particle-size: 778
particle-size: 778
statement: this'.__S3.__run()
particle-size: 144
particle-size: 144
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 144
particle-size: 144
statement: r := this'.front()
particle-size: 144
particle-size: 144
statement: return this'.data[0]
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: this'.popFront()
particle-size: 144
particle-size: 144
statement: this'.data = this'.data[1..this'.size()]
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return r
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 144
particle-size: 144
statement: return this'.data.length
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 137
statement: return ()
particle-size: 137
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 144
particle-size: 144
particle-size: 144
particle-size: 144
statement: return ()
particle-size: 1078
particle-size: 1078
particle-size: 1078
particle-size: 351
repetition: 27
statement: __d.__step()
particle-size: 351
particle-size: 351
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: return this'.data.length
particle-size: 351
particle-size: 351
particle-size: 351
particle-size: 351
statement: (action,node) := this'.scheduler()
particle-size: 346
particle-size: 346
statement: actions := ([]: (R × R)[])
particle-size: 346
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 346
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(0,i)]
particle-size: 233
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 1
particle-size: 346
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(0,i)]
particle-size: 164
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
loop-index: 2
particle-size: 346
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(1,i)]
particle-size: 15
loop-index: 3
particle-size: 346
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(0,i)]
particle-size: 10
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(1,i)]
particle-size: 20
loop-index: 4
particle-size: 346
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(0,i)]
particle-size: 38
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(1,i)]
particle-size: 54
loop-index: 5
particle-size: 346
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(0,i)]
particle-size: 95
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 346
particle-size: 346
statement: return this'.data.length
particle-size: 346
particle-size: 346
particle-size: 346
statement: actions ~= [(1,i)]
particle-size: 127
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 346
particle-size: 346
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
particle-size: 759
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: (pkt,port) := this'.__H0.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,1));
}
statement: this'.__S0.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 15
particle-size: 15
statement: r := this'.front()
particle-size: 15
particle-size: 15
statement: return this'.data[0]
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: this'.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return r
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 5
particle-size: 5
particle-size: 5
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 5
particle-size: 5
statement: return this'.data.length
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 5
statement: return ()
particle-size: 5
particle-size: 5
particle-size: 5
particle-size: 5
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 20
particle-size: 20
statement: r := this'.front()
particle-size: 20
particle-size: 20
statement: return this'.data[0]
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.popFront()
particle-size: 20
particle-size: 20
statement: this'.data = this'.data[1..this'.size()]
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: return r
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 20
particle-size: 20
particle-size: 20
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 20
particle-size: 20
statement: return this'.data.length
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: this'.data = this'.data ~ [x]
particle-size: 20
statement: return ()
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 54
particle-size: 54
statement: r := this'.front()
particle-size: 54
particle-size: 54
statement: return this'.data[0]
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: this'.popFront()
particle-size: 54
particle-size: 54
statement: this'.data = this'.data[1..this'.size()]
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return r
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 54
particle-size: 54
particle-size: 54
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 54
particle-size: 54
statement: return this'.data.length
particle-size: 54
particle-size: 54
particle-size: 54
particle-size: 54
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 53
statement: return ()
particle-size: 53
particle-size: 54
particle-size: 54
particle-size: 54
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 217
particle-size: 217
statement: return this'.data.length
particle-size: 217
particle-size: 217
particle-size: 217
particle-size: 217
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 127
particle-size: 127
statement: r := this'.front()
particle-size: 127
particle-size: 127
statement: return this'.data[0]
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: this'.popFront()
particle-size: 127
particle-size: 127
statement: this'.data = this'.data[1..this'.size()]
particle-size: 127
particle-size: 127
statement: return this'.data.length
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return r
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 127
particle-size: 127
particle-size: 127
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 127
particle-size: 127
statement: return this'.data.length
particle-size: 127
particle-size: 127
particle-size: 127
particle-size: 127
statement: return ()
particle-size: 8
statement: this'.data = this'.data ~ [x]
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 127
particle-size: 127
particle-size: 127
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 542
particle-size: 542
statement: return this'.data.length
particle-size: 542
particle-size: 542
particle-size: 542
particle-size: 542
statement: this'.__H0.__run()
particle-size: 233
particle-size: 233
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 233
particle-size: 233
statement: return this
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: this'.data = [x] ~ this'.data
particle-size: 233
statement: return ()
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 233
particle-size: 233
statement: this'.data = this'.data[1..this'.size()]
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return ()
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: this'.Q_in.popFront()
particle-size: 233
particle-size: 233
statement: this'.data = this'.data[1..this'.size()]
particle-size: 233
particle-size: 233
statement: return this'.data.length
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return ()
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: return ()
particle-size: 233
particle-size: 233
particle-size: 233
particle-size: 233
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 542
particle-size: 542
statement: return this'.data.length
particle-size: 542
particle-size: 542
particle-size: 542
particle-size: 542
statement: this'.__H1.__run()
particle-size: 164
particle-size: 164
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 164
statement: this'.Q_in.popFront()
particle-size: 164
particle-size: 164
statement: this'.data = this'.data[1..this'.size()]
particle-size: 164
particle-size: 164
statement: return this'.data.length
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return ()
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: return ()
particle-size: 164
particle-size: 164
particle-size: 164
particle-size: 164
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 542
particle-size: 542
statement: return this'.data.length
particle-size: 542
particle-size: 542
particle-size: 542
particle-size: 542
statement: this'.__S0.__run()
particle-size: 2
particle-size: 2
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 2
statement: this'.route2 = 3
particle-size: 2
statement: this'.route3 = (2 + 1)
particle-size: 2
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 2
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 2
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 2
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 2
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 546
particle-size: 546
statement: return this'.data.length
particle-size: 546
particle-size: 546
particle-size: 546
particle-size: 546
statement: this'.__S1.__run()
particle-size: 10
particle-size: 10
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 546
particle-size: 546
statement: return this'.data.length
particle-size: 546
particle-size: 546
particle-size: 546
particle-size: 546
statement: this'.__S2.__run()
particle-size: 38
particle-size: 38
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.data = this'.data ~ [x]
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 546
particle-size: 546
statement: return this'.data.length
particle-size: 546
particle-size: 546
particle-size: 546
particle-size: 546
statement: this'.__S3.__run()
particle-size: 95
particle-size: 95
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 95
particle-size: 95
statement: r := this'.front()
particle-size: 95
particle-size: 95
statement: return this'.data[0]
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: this'.popFront()
particle-size: 95
particle-size: 95
statement: this'.data = this'.data[1..this'.size()]
particle-size: 95
particle-size: 95
statement: return this'.data.length
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return ()
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return r
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 95
particle-size: 95
statement: return this'.data.length
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 92
statement: return ()
particle-size: 92
particle-size: 95
particle-size: 95
particle-size: 95
statement: return ()
particle-size: 95
particle-size: 95
particle-size: 95
particle-size: 95
statement: return ()
particle-size: 768
particle-size: 768
particle-size: 768
particle-size: 256
repetition: 28
statement: __d.__step()
particle-size: 256
particle-size: 256
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: return this'.data.length
particle-size: 256
particle-size: 256
particle-size: 256
particle-size: 256
statement: (action,node) := this'.scheduler()
particle-size: 251
particle-size: 251
statement: actions := ([]: (R × R)[])
particle-size: 251
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 251
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(0,i)]
particle-size: 170
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
loop-index: 1
particle-size: 251
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(0,i)]
particle-size: 128
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
loop-index: 2
particle-size: 251
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 3
particle-size: 251
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 4
particle-size: 251
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(0,i)]
particle-size: 25
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(1,i)]
particle-size: 32
loop-index: 5
particle-size: 251
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(0,i)]
particle-size: 64
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 251
particle-size: 251
statement: return this'.data.length
particle-size: 251
particle-size: 251
particle-size: 251
statement: actions ~= [(1,i)]
particle-size: 89
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 251
particle-size: 251
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 531
particle-size: 531
particle-size: 531
particle-size: 531
particle-size: 531
particle-size: 531
particle-size: 531
particle-size: 531
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 32
particle-size: 32
statement: r := this'.front()
particle-size: 32
particle-size: 32
statement: return this'.data[0]
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.popFront()
particle-size: 32
particle-size: 32
statement: this'.data = this'.data[1..this'.size()]
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: return r
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 32
particle-size: 32
particle-size: 32
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 32
particle-size: 32
statement: return this'.data.length
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: this'.data = this'.data ~ [x]
particle-size: 32
statement: return ()
particle-size: 32
particle-size: 32
particle-size: 32
particle-size: 32
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 137
particle-size: 137
statement: return this'.data.length
particle-size: 137
particle-size: 137
particle-size: 137
particle-size: 137
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 89
particle-size: 89
statement: r := this'.front()
particle-size: 89
particle-size: 89
statement: return this'.data[0]
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: this'.popFront()
particle-size: 89
particle-size: 89
statement: this'.data = this'.data[1..this'.size()]
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return r
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 89
particle-size: 89
particle-size: 89
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 89
particle-size: 89
statement: return this'.data.length
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 89
statement: return ()
particle-size: 5
statement: this'.data = this'.data ~ [x]
particle-size: 84
statement: return ()
particle-size: 84
particle-size: 89
particle-size: 89
particle-size: 89
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 394
particle-size: 394
statement: return this'.data.length
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
statement: this'.__H0.__run()
particle-size: 170
particle-size: 170
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 170
particle-size: 170
statement: return this
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: this'.data = [x] ~ this'.data
particle-size: 170
statement: return ()
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 170
particle-size: 170
statement: this'.data = this'.data[1..this'.size()]
particle-size: 170
particle-size: 170
statement: return this'.data.length
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: return ()
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: this'.Q_in.popFront()
particle-size: 170
particle-size: 170
statement: this'.data = this'.data[1..this'.size()]
particle-size: 170
particle-size: 170
statement: return this'.data.length
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: return ()
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: return ()
particle-size: 170
particle-size: 170
particle-size: 170
particle-size: 170
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 394
particle-size: 394
statement: return this'.data.length
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
statement: this'.__H1.__run()
particle-size: 128
particle-size: 128
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 128
statement: this'.Q_in.popFront()
particle-size: 128
particle-size: 128
statement: this'.data = this'.data[1..this'.size()]
particle-size: 128
particle-size: 128
statement: return this'.data.length
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: return ()
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: return ()
particle-size: 128
particle-size: 128
particle-size: 128
particle-size: 128
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 394
particle-size: 394
statement: return this'.data.length
particle-size: 394
particle-size: 394
particle-size: 394
particle-size: 394
statement: this'.__S0.__run()
particle-size: 1
particle-size: 1
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.route1 = ((1 + 1) + 1);
    this'.route2 = 3;
    this'.route3 = (2 + 1);
    this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3));
    this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3));
    this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2));
    this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3);
    this'.which = uniformInt(1,this'.nshortest);
    if (this'.which == this'.shortest1) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
    } else if (this'.which == (this'.shortest1 + this'.shortest2)) {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
    } else {
        this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
    }
}
statement: this'.route1 = ((1 + 1) + 1)
particle-size: 1
statement: this'.route2 = 3
particle-size: 1
statement: this'.route3 = (2 + 1)
particle-size: 1
statement: this'.shortest1 = ((this'.route1 <= this'.route2) && (this'.route2 <= this'.route3))
particle-size: 1
statement: this'.shortest2 = ((this'.route2 <= this'.route1) && (this'.route2 <= this'.route3))
particle-size: 1
statement: this'.shortest3 = ((this'.route3 <= this'.route1) && (this'.route3 <= this'.route2))
particle-size: 1
statement: this'.nshortest = ((this'.shortest1 + this'.shortest2) + this'.shortest3)
particle-size: 1
statement: this'.which = uniformInt(1,this'.nshortest)
particle-size: 1
particle-size: 1
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (this'.which == this'.shortest1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
} else if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.which == (this'.shortest1 + this'.shortest2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
} else {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],4))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: this'.__S1.__run()
particle-size: 6
particle-size: 6
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: this'.__S2.__run()
particle-size: 25
particle-size: 25
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 25
particle-size: 25
statement: r := this'.front()
particle-size: 25
particle-size: 25
statement: return this'.data[0]
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.popFront()
particle-size: 25
particle-size: 25
statement: this'.data = this'.data[1..this'.size()]
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return r
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 25
particle-size: 25
statement: return this'.data.length
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: this'.data = this'.data ~ [x]
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: return ()
particle-size: 25
particle-size: 25
particle-size: 25
particle-size: 25
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 396
particle-size: 396
statement: return this'.data.length
particle-size: 396
particle-size: 396
particle-size: 396
particle-size: 396
statement: this'.__S3.__run()
particle-size: 64
particle-size: 64
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 64
particle-size: 64
statement: r := this'.front()
particle-size: 64
particle-size: 64
statement: return this'.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 61
statement: return ()
particle-size: 61
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 538
particle-size: 538
particle-size: 538
particle-size: 187
repetition: 29
statement: __d.__step()
particle-size: 187
particle-size: 187
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: return this'.data.length
particle-size: 187
particle-size: 187
particle-size: 187
particle-size: 187
statement: (action,node) := this'.scheduler()
particle-size: 181
particle-size: 181
statement: actions := ([]: (R × R)[])
particle-size: 181
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 181
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: actions ~= [(0,i)]
particle-size: 119
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
loop-index: 1
particle-size: 181
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: actions ~= [(0,i)]
particle-size: 91
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
loop-index: 2
particle-size: 181
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: actions ~= [(1,i)]
particle-size: 3
loop-index: 3
particle-size: 181
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 4
particle-size: 181
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: actions ~= [(0,i)]
particle-size: 12
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: actions ~= [(1,i)]
particle-size: 21
loop-index: 5
particle-size: 181
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: actions ~= [(0,i)]
particle-size: 38
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 181
particle-size: 181
statement: return this'.data.length
particle-size: 181
particle-size: 181
particle-size: 181
statement: actions ~= [(1,i)]
particle-size: 64
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 181
particle-size: 181
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
particle-size: 356
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: (pkt,port) := this'.__S0.Q_out.takeFront()
particle-size: 3
particle-size: 3
statement: r := this'.front()
particle-size: 3
particle-size: 3
statement: return this'.data[0]
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return r
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if port == 1 {
    this'.__H0.Q_in.pushBack((pkt,1));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,1));
}
statement: this'.__S1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,1));
}
statement: this'.__S3.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 4 {
    this'.__S2.Q_in.pushBack((pkt,1));
}
statement: this'.__S2.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 21
particle-size: 21
statement: r := this'.front()
particle-size: 21
particle-size: 21
statement: return this'.data[0]
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.popFront()
particle-size: 21
particle-size: 21
statement: this'.data = this'.data[1..this'.size()]
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return r
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 21
particle-size: 21
particle-size: 21
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: this'.data = this'.data ~ [x]
particle-size: 21
statement: return ()
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 94
particle-size: 94
statement: return this'.data.length
particle-size: 94
particle-size: 94
particle-size: 94
particle-size: 94
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 64
particle-size: 64
statement: r := this'.front()
particle-size: 64
particle-size: 64
statement: return this'.data[0]
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: this'.popFront()
particle-size: 64
particle-size: 64
statement: this'.data = this'.data[1..this'.size()]
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return r
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 64
particle-size: 64
particle-size: 64
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 64
particle-size: 64
statement: return this'.data.length
particle-size: 64
particle-size: 64
particle-size: 64
particle-size: 64
statement: return ()
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 58
statement: return ()
particle-size: 58
particle-size: 64
particle-size: 64
particle-size: 64
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 262
particle-size: 262
statement: return this'.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: this'.__H0.__run()
particle-size: 119
particle-size: 119
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 119
particle-size: 119
statement: return this
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.data = [x] ~ this'.data
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: this'.Q_in.popFront()
particle-size: 119
particle-size: 119
statement: this'.data = this'.data[1..this'.size()]
particle-size: 119
particle-size: 119
statement: return this'.data.length
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: return ()
particle-size: 119
particle-size: 119
particle-size: 119
particle-size: 119
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 262
particle-size: 262
statement: return this'.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: this'.__H1.__run()
particle-size: 91
particle-size: 91
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 91
statement: this'.Q_in.popFront()
particle-size: 91
particle-size: 91
statement: this'.data = this'.data[1..this'.size()]
particle-size: 91
particle-size: 91
statement: return this'.data.length
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: return ()
particle-size: 91
particle-size: 91
particle-size: 91
particle-size: 91
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 262
particle-size: 262
statement: return this'.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 262
particle-size: 262
statement: return this'.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: this'.__S1.__run()
particle-size: 2
particle-size: 2
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 262
particle-size: 262
statement: return this'.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: this'.__S2.__run()
particle-size: 12
particle-size: 12
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 12
particle-size: 12
statement: r := this'.front()
particle-size: 12
particle-size: 12
statement: return this'.data[0]
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.popFront()
particle-size: 12
particle-size: 12
statement: this'.data = this'.data[1..this'.size()]
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return r
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 262
particle-size: 262
statement: return this'.data.length
particle-size: 262
particle-size: 262
particle-size: 262
particle-size: 262
statement: this'.__S3.__run()
particle-size: 38
particle-size: 38
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 38
particle-size: 38
statement: r := this'.front()
particle-size: 38
particle-size: 38
statement: return this'.data[0]
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: this'.popFront()
particle-size: 38
particle-size: 38
statement: this'.data = this'.data[1..this'.size()]
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return r
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 38
particle-size: 38
statement: return this'.data.length
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 38
particle-size: 38
particle-size: 38
particle-size: 38
statement: return ()
particle-size: 362
particle-size: 362
particle-size: 362
particle-size: 130
repetition: 30
statement: __d.__step()
particle-size: 130
particle-size: 130
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: return this'.data.length
particle-size: 130
particle-size: 130
particle-size: 130
particle-size: 130
statement: (action,node) := this'.scheduler()
particle-size: 124
particle-size: 124
statement: actions := ([]: (R × R)[])
particle-size: 124
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
statement: actions ~= [(0,i)]
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
loop-index: 1
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
statement: actions ~= [(0,i)]
particle-size: 66
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
loop-index: 2
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
loop-index: 3
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 4
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
statement: actions ~= [(0,i)]
particle-size: 7
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
statement: actions ~= [(1,i)]
particle-size: 10
loop-index: 5
particle-size: 124
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
statement: actions ~= [(0,i)]
particle-size: 24
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 124
particle-size: 124
statement: return this'.data.length
particle-size: 124
particle-size: 124
particle-size: 124
statement: actions ~= [(1,i)]
particle-size: 40
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 124
particle-size: 124
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
particle-size: 232
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 10
particle-size: 10
statement: r := this'.front()
particle-size: 10
particle-size: 10
statement: return this'.data[0]
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.popFront()
particle-size: 10
particle-size: 10
statement: this'.data = this'.data[1..this'.size()]
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: return r
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 10
particle-size: 10
particle-size: 10
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 10
particle-size: 10
statement: return this'.data.length
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: this'.data = this'.data ~ [x]
particle-size: 10
statement: return ()
particle-size: 10
particle-size: 10
particle-size: 10
particle-size: 10
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 40
particle-size: 40
statement: r := this'.front()
particle-size: 40
particle-size: 40
statement: return this'.data[0]
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: this'.popFront()
particle-size: 40
particle-size: 40
statement: this'.data = this'.data[1..this'.size()]
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return r
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 40
particle-size: 40
particle-size: 40
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 40
particle-size: 40
statement: return this'.data.length
particle-size: 40
particle-size: 40
particle-size: 40
particle-size: 40
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 37
statement: return ()
particle-size: 37
particle-size: 40
particle-size: 40
particle-size: 40
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.__H0.__run()
particle-size: 82
particle-size: 82
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 82
particle-size: 82
statement: return this
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.data = [x] ~ this'.data
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: this'.Q_in.popFront()
particle-size: 82
particle-size: 82
statement: this'.data = this'.data[1..this'.size()]
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: return ()
particle-size: 82
particle-size: 82
particle-size: 82
particle-size: 82
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.__H1.__run()
particle-size: 66
particle-size: 66
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 66
statement: this'.Q_in.popFront()
particle-size: 66
particle-size: 66
statement: this'.data = this'.data[1..this'.size()]
particle-size: 66
particle-size: 66
statement: return this'.data.length
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: return ()
particle-size: 66
particle-size: 66
particle-size: 66
particle-size: 66
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.__S1.__run()
particle-size: 1
particle-size: 1
statement: if (this'.Q_in.data[0][1] == 1) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],2))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.__S2.__run()
particle-size: 7
particle-size: 7
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.data = this'.data ~ [x]
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 180
particle-size: 180
statement: return this'.data.length
particle-size: 180
particle-size: 180
particle-size: 180
particle-size: 180
statement: this'.__S3.__run()
particle-size: 24
particle-size: 24
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 24
particle-size: 24
statement: r := this'.front()
particle-size: 24
particle-size: 24
statement: return this'.data[0]
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: this'.popFront()
particle-size: 24
particle-size: 24
statement: this'.data = this'.data[1..this'.size()]
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return r
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 24
particle-size: 24
statement: return this'.data.length
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 24
particle-size: 24
particle-size: 24
particle-size: 24
statement: return ()
particle-size: 238
particle-size: 238
particle-size: 238
particle-size: 88
repetition: 31
statement: __d.__step()
particle-size: 88
particle-size: 88
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: return this'.data.length
particle-size: 88
particle-size: 88
particle-size: 88
particle-size: 88
statement: (action,node) := this'.scheduler()
particle-size: 82
particle-size: 82
statement: actions := ([]: (R × R)[])
particle-size: 82
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 52
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
loop-index: 1
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 43
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
loop-index: 2
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
loop-index: 3
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 4
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(1,i)]
particle-size: 6
loop-index: 5
particle-size: 82
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(0,i)]
particle-size: 11
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 82
particle-size: 82
statement: return this'.data.length
particle-size: 82
particle-size: 82
particle-size: 82
statement: actions ~= [(1,i)]
particle-size: 26
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 82
particle-size: 82
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
particle-size: 141
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: (pkt,port) := this'.__S1.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,2));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,2));
}
statement: this'.__S2.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 26
particle-size: 26
statement: r := this'.front()
particle-size: 26
particle-size: 26
statement: return this'.data[0]
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: this'.popFront()
particle-size: 26
particle-size: 26
statement: this'.data = this'.data[1..this'.size()]
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return r
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 26
particle-size: 26
particle-size: 26
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 26
particle-size: 26
statement: return this'.data.length
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 26
statement: return ()
particle-size: 3
statement: this'.data = this'.data ~ [x]
particle-size: 23
statement: return ()
particle-size: 23
particle-size: 26
particle-size: 26
particle-size: 26
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.__H0.__run()
particle-size: 52
particle-size: 52
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 52
particle-size: 52
statement: return this
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.data = [x] ~ this'.data
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: this'.Q_in.popFront()
particle-size: 52
particle-size: 52
statement: this'.data = this'.data[1..this'.size()]
particle-size: 52
particle-size: 52
statement: return this'.data.length
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: return ()
particle-size: 52
particle-size: 52
particle-size: 52
particle-size: 52
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.__H1.__run()
particle-size: 43
particle-size: 43
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 43
statement: this'.Q_in.popFront()
particle-size: 43
particle-size: 43
statement: this'.data = this'.data[1..this'.size()]
particle-size: 43
particle-size: 43
statement: return this'.data.length
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: return ()
particle-size: 43
particle-size: 43
particle-size: 43
particle-size: 43
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.__S2.__run()
particle-size: 2
particle-size: 2
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 108
particle-size: 108
statement: return this'.data.length
particle-size: 108
particle-size: 108
particle-size: 108
particle-size: 108
statement: this'.__S3.__run()
particle-size: 11
particle-size: 11
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 11
particle-size: 11
statement: r := this'.front()
particle-size: 11
particle-size: 11
statement: return this'.data[0]
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.popFront()
particle-size: 11
particle-size: 11
statement: this'.data = this'.data[1..this'.size()]
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return r
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 11
particle-size: 11
statement: return this'.data.length
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: this'.data = this'.data ~ [x]
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 11
particle-size: 11
particle-size: 11
particle-size: 11
statement: return ()
particle-size: 147
particle-size: 147
particle-size: 147
particle-size: 57
repetition: 32
statement: __d.__step()
particle-size: 57
particle-size: 57
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: return this'.data.length
particle-size: 57
particle-size: 57
particle-size: 57
particle-size: 57
statement: (action,node) := this'.scheduler()
particle-size: 51
particle-size: 51
statement: actions := ([]: (R × R)[])
particle-size: 51
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(0,i)]
particle-size: 33
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
loop-index: 1
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(0,i)]
particle-size: 28
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
loop-index: 2
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
loop-index: 3
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
loop-index: 4
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(1,i)]
particle-size: 2
loop-index: 5
particle-size: 51
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(0,i)]
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 51
particle-size: 51
statement: return this'.data.length
particle-size: 51
particle-size: 51
particle-size: 51
statement: actions ~= [(1,i)]
particle-size: 13
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 51
particle-size: 51
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
particle-size: 83
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 13
particle-size: 13
statement: r := this'.front()
particle-size: 13
particle-size: 13
statement: return this'.data[0]
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: this'.popFront()
particle-size: 13
particle-size: 13
statement: this'.data = this'.data[1..this'.size()]
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return r
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 13
particle-size: 13
particle-size: 13
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 13
particle-size: 13
statement: return this'.data.length
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 13
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 12
statement: return ()
particle-size: 12
particle-size: 13
particle-size: 13
particle-size: 13
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.__H0.__run()
particle-size: 33
particle-size: 33
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 33
particle-size: 33
statement: return this
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.data = [x] ~ this'.data
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: this'.Q_in.popFront()
particle-size: 33
particle-size: 33
statement: this'.data = this'.data[1..this'.size()]
particle-size: 33
particle-size: 33
statement: return this'.data.length
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: return ()
particle-size: 33
particle-size: 33
particle-size: 33
particle-size: 33
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.__H1.__run()
particle-size: 28
particle-size: 28
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 28
statement: this'.Q_in.popFront()
particle-size: 28
particle-size: 28
statement: this'.data = this'.data[1..this'.size()]
particle-size: 28
particle-size: 28
statement: return this'.data.length
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: return ()
particle-size: 28
particle-size: 28
particle-size: 28
particle-size: 28
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.__S2.__run()
particle-size: 1
particle-size: 1
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 68
particle-size: 68
statement: return this'.data.length
particle-size: 68
particle-size: 68
particle-size: 68
particle-size: 68
statement: this'.__S3.__run()
particle-size: 6
particle-size: 6
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 6
particle-size: 6
statement: r := this'.front()
particle-size: 6
particle-size: 6
statement: return this'.data[0]
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.popFront()
particle-size: 6
particle-size: 6
statement: this'.data = this'.data[1..this'.size()]
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return r
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 89
particle-size: 89
particle-size: 89
particle-size: 35
repetition: 33
statement: __d.__step()
particle-size: 35
particle-size: 35
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: return this'.data.length
particle-size: 35
particle-size: 35
particle-size: 35
particle-size: 35
statement: (action,node) := this'.scheduler()
particle-size: 29
particle-size: 29
statement: actions := ([]: (R × R)[])
particle-size: 29
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
statement: actions ~= [(0,i)]
particle-size: 17
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
loop-index: 1
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
statement: actions ~= [(0,i)]
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
loop-index: 2
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
loop-index: 3
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
loop-index: 4
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
statement: actions ~= [(1,i)]
particle-size: 1
loop-index: 5
particle-size: 29
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
statement: actions ~= [(0,i)]
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 29
particle-size: 29
statement: return this'.data.length
particle-size: 29
particle-size: 29
particle-size: 29
statement: actions ~= [(1,i)]
particle-size: 7
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 29
particle-size: 29
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
particle-size: 42
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (pkt,port) := this'.__S2.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,4));
}
statement: if port == 2 {
    this'.__S1.Q_in.pushBack((pkt,2));
}
statement: if port == 3 {
    this'.__S3.Q_in.pushBack((pkt,2));
}
statement: this'.__S3.Q_in.pushBack((pkt,2))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 7
particle-size: 7
statement: r := this'.front()
particle-size: 7
particle-size: 7
statement: return this'.data[0]
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: this'.popFront()
particle-size: 7
particle-size: 7
statement: this'.data = this'.data[1..this'.size()]
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return r
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 7
particle-size: 7
particle-size: 7
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 7
particle-size: 7
statement: return this'.data.length
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: return ()
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 7
particle-size: 7
particle-size: 7
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.__H0.__run()
particle-size: 17
particle-size: 17
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 17
particle-size: 17
statement: return this
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.data = [x] ~ this'.data
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: this'.Q_in.popFront()
particle-size: 17
particle-size: 17
statement: this'.data = this'.data[1..this'.size()]
particle-size: 17
particle-size: 17
statement: return this'.data.length
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: return ()
particle-size: 17
particle-size: 17
particle-size: 17
particle-size: 17
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.__H1.__run()
particle-size: 15
particle-size: 15
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 15
statement: this'.Q_in.popFront()
particle-size: 15
particle-size: 15
statement: this'.data = this'.data[1..this'.size()]
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: return ()
particle-size: 15
particle-size: 15
particle-size: 15
particle-size: 15
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 34
particle-size: 34
statement: return this'.data.length
particle-size: 34
particle-size: 34
particle-size: 34
particle-size: 34
statement: this'.__S3.__run()
particle-size: 2
particle-size: 2
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 48
particle-size: 48
particle-size: 48
particle-size: 21
repetition: 34
statement: __d.__step()
particle-size: 21
particle-size: 21
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: return this'.data.length
particle-size: 21
particle-size: 21
particle-size: 21
particle-size: 21
statement: (action,node) := this'.scheduler()
particle-size: 15
particle-size: 15
statement: actions := ([]: (R × R)[])
particle-size: 15
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(0,i)]
particle-size: 9
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
loop-index: 1
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(0,i)]
particle-size: 8
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
loop-index: 2
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
loop-index: 3
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
loop-index: 4
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
loop-index: 5
particle-size: 15
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 15
particle-size: 15
statement: return this'.data.length
particle-size: 15
particle-size: 15
particle-size: 15
statement: actions ~= [(1,i)]
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 15
particle-size: 15
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
particle-size: 20
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 2
particle-size: 2
statement: r := this'.front()
particle-size: 2
particle-size: 2
statement: return this'.data[0]
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.popFront()
particle-size: 2
particle-size: 2
statement: this'.data = this'.data[1..this'.size()]
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return r
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 2
particle-size: 2
particle-size: 2
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.data = this'.data ~ [x]
particle-size: 2
statement: return ()
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.__H0.__run()
particle-size: 9
particle-size: 9
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 9
particle-size: 9
statement: return this
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.data = [x] ~ this'.data
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: this'.Q_in.popFront()
particle-size: 9
particle-size: 9
statement: this'.data = this'.data[1..this'.size()]
particle-size: 9
particle-size: 9
statement: return this'.data.length
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: return ()
particle-size: 9
particle-size: 9
particle-size: 9
particle-size: 9
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.__H1.__run()
particle-size: 8
particle-size: 8
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 8
statement: this'.Q_in.popFront()
particle-size: 8
particle-size: 8
statement: this'.data = this'.data[1..this'.size()]
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 18
particle-size: 18
statement: return this'.data.length
particle-size: 18
particle-size: 18
particle-size: 18
particle-size: 18
statement: this'.__S3.__run()
particle-size: 1
particle-size: 1
statement: if ((this'.Q_in.data[0][1] == 1) || (this'.Q_in.data[0][1] == 2)) {
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3));
}
statement: this'.Q_out.pushBack((this'.Q_in.takeFront()[0],3))
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 26
particle-size: 26
particle-size: 26
particle-size: 12
repetition: 35
statement: __d.__step()
particle-size: 12
particle-size: 12
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: return this'.data.length
particle-size: 12
particle-size: 12
particle-size: 12
particle-size: 12
statement: (action,node) := this'.scheduler()
particle-size: 6
particle-size: 6
statement: actions := ([]: (R × R)[])
particle-size: 6
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 1
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(0,i)]
particle-size: 3
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 2
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 3
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 4
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
loop-index: 5
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
statement: actions ~= [(1,i)]
particle-size: 1
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 6
particle-size: 6
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
particle-size: 7
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_out.size() {
    (pkt,port) := this'.__H0.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_out.size() {
    (pkt,port) := this'.__H1.Q_out.takeFront();
    if port == 1 {
        this'.__S3.Q_in.pushBack((pkt,3));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_out.size() {
    (pkt,port) := this'.__S0.Q_out.takeFront();
    if port == 1 {
        this'.__H0.Q_in.pushBack((pkt,1));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,1));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,1));
    }
    if port == 4 {
        this'.__S2.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 3 && this'.__S1.Q_out.size() {
    (pkt,port) := this'.__S1.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,2));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 4 && this'.__S2.Q_out.size() {
    (pkt,port) := this'.__S2.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,4));
    }
    if port == 2 {
        this'.__S1.Q_in.pushBack((pkt,2));
    }
    if port == 3 {
        this'.__S3.Q_in.pushBack((pkt,2));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 5 && this'.__S3.Q_out.size() {
    (pkt,port) := this'.__S3.Q_out.takeFront();
    if port == 1 {
        this'.__S0.Q_in.pushBack((pkt,3));
    }
    if port == 2 {
        this'.__S2.Q_in.pushBack((pkt,3));
    }
    if port == 3 {
        this'.__H1.Q_in.pushBack((pkt,1));
    }
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: (pkt,port) := this'.__S3.Q_out.takeFront()
particle-size: 1
particle-size: 1
statement: r := this'.front()
particle-size: 1
particle-size: 1
statement: return this'.data[0]
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return r
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if port == 1 {
    this'.__S0.Q_in.pushBack((pkt,3));
}
statement: if port == 2 {
    this'.__S2.Q_in.pushBack((pkt,3));
}
statement: if port == 3 {
    this'.__H1.Q_in.pushBack((pkt,1));
}
statement: this'.__H1.Q_in.pushBack((pkt,1))
particle-size: 1
particle-size: 1
particle-size: 1
statement: if this'.size() >= 2 {
    return ();
}
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = this'.data ~ [x]
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.__H0.__run()
particle-size: 3
particle-size: 3
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 3
particle-size: 3
statement: return this
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.data = [x] ~ this'.data
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: this'.__H1.__run()
particle-size: 3
particle-size: 3
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 3
statement: this'.Q_in.popFront()
particle-size: 3
particle-size: 3
statement: this'.data = this'.data[1..this'.size()]
particle-size: 3
particle-size: 3
statement: return this'.data.length
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: return ()
particle-size: 3
particle-size: 3
particle-size: 3
particle-size: 3
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 13
particle-size: 13
particle-size: 13
particle-size: 8
repetition: 36
statement: __d.__step()
particle-size: 8
particle-size: 8
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: return this'.data.length
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 8
statement: (action,node) := this'.scheduler()
particle-size: 2
particle-size: 2
statement: actions := ([]: (R × R)[])
particle-size: 2
statement: for i in [0..6){
    if (if i == 0 {
        this'.__H0.Q_in;
    } else if i == 1 {
        this'.__H1.Q_in;
    } else if i == 2 {
        this'.__S0.Q_in;
    } else if i == 3 {
        this'.__S1.Q_in;
    } else if i == 4 {
        this'.__S2.Q_in;
    } else {
        this'.__S3.Q_in;
    }).size() > 0 {
        actions ~= [(0,i)];
    }
    if (if i == 0 {
        this'.__H0.Q_out;
    } else if i == 1 {
        this'.__H1.Q_out;
    } else if i == 2 {
        this'.__S0.Q_out;
    } else if i == 3 {
        this'.__S1.Q_out;
    } else if i == 4 {
        this'.__S2.Q_out;
    } else {
        this'.__S3.Q_out;
    }).size() > 0 {
        actions ~= [(1,i)];
    }
}
loop-index: 0
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 1
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: actions ~= [(0,i)]
particle-size: 1
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 3
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 4
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
loop-index: 5
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_in;
} else if i == 1 {
    this'.__H1.Q_in;
} else if i == 2 {
    this'.__S0.Q_in;
} else if i == 3 {
    this'.__S1.Q_in;
} else if i == 4 {
    this'.__S2.Q_in;
} else {
    this'.__S3.Q_in;
}).size() > 0 {
    actions ~= [(0,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: if (if i == 0 {
    this'.__H0.Q_out;
} else if i == 1 {
    this'.__H1.Q_out;
} else if i == 2 {
    this'.__S0.Q_out;
} else if i == 3 {
    this'.__S1.Q_out;
} else if i == 4 {
    this'.__S2.Q_out;
} else {
    this'.__S3.Q_out;
}).size() > 0 {
    actions ~= [(1,i)];
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
statement: return actions[uniformInt(0,actions.length - 1)]
particle-size: 2
particle-size: 2
statement: assert((sampleFrom("(r;a,b)=>δ(0)[-r+∑_i[a≤i]·[i≤b]]",a,b): ℝ) != 0)
statement: return sampleFrom("(x;a,b)=>(∑_i[a≤i]·[i≤b]·δ(0)[i-x])·⅟(∑_i[a≤i]·[i≤b])",a,b): ℝ
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if action {
    if node == 0 && this'.__H0.Q_out.size() {
        (pkt,port) := this'.__H0.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,1));
        }
    }
    if node == 1 && this'.__H1.Q_out.size() {
        (pkt,port) := this'.__H1.Q_out.takeFront();
        if port == 1 {
            this'.__S3.Q_in.pushBack((pkt,3));
        }
    }
    if node == 2 && this'.__S0.Q_out.size() {
        (pkt,port) := this'.__S0.Q_out.takeFront();
        if port == 1 {
            this'.__H0.Q_in.pushBack((pkt,1));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,1));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,1));
        }
        if port == 4 {
            this'.__S2.Q_in.pushBack((pkt,1));
        }
    }
    if node == 3 && this'.__S1.Q_out.size() {
        (pkt,port) := this'.__S1.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,2));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,2));
        }
    }
    if node == 4 && this'.__S2.Q_out.size() {
        (pkt,port) := this'.__S2.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,4));
        }
        if port == 2 {
            this'.__S1.Q_in.pushBack((pkt,2));
        }
        if port == 3 {
            this'.__S3.Q_in.pushBack((pkt,2));
        }
    }
    if node == 5 && this'.__S3.Q_out.size() {
        (pkt,port) := this'.__S3.Q_out.takeFront();
        if port == 1 {
            this'.__S0.Q_in.pushBack((pkt,3));
        }
        if port == 2 {
            this'.__S2.Q_in.pushBack((pkt,3));
        }
        if port == 3 {
            this'.__H1.Q_in.pushBack((pkt,1));
        }
    }
} else {
    if node == 0 && this'.__H0.Q_in.size() {
        this'.__H0.__run();
    }
    if node == 1 && this'.__H1.Q_in.size() {
        this'.__H1.__run();
    }
    if node == 2 && this'.__S0.Q_in.size() {
        this'.__S0.__run();
    }
    if node == 3 && this'.__S1.Q_in.size() {
        this'.__S1.__run();
    }
    if node == 4 && this'.__S2.Q_in.size() {
        this'.__S2.__run();
    }
    if node == 5 && this'.__S3.Q_in.size() {
        this'.__S3.__run();
    }
}
statement: if node == 0 && this'.__H0.Q_in.size() {
    this'.__H0.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.__H0.__run()
particle-size: 1
particle-size: 1
statement: this'.Q_in.pushFront((Packet'(),0))
particle-size: 1
particle-size: 1
statement: return this
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.data = [x] ~ this'.data
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if (this'.pkt_count < 3) {
    this'.Q_in.pushFront((Packet'(),0));
    this'.pkt_count = (this'.pkt_count + 1);
    this'.Q_out.pushBack((this'.Q_in.takeFront()[0],1));
} else {
    this'.Q_in.popFront();
    this'.Q_in.popFront();
}
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 1 && this'.__H1.Q_in.size() {
    this'.__H1.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: this'.__H1.__run()
particle-size: 1
particle-size: 1
statement: this'.pkt_count = (this'.pkt_count + 1)
particle-size: 1
statement: this'.Q_in.popFront()
particle-size: 1
particle-size: 1
statement: this'.data = this'.data[1..this'.size()]
particle-size: 1
particle-size: 1
statement: return this'.data.length
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: return ()
particle-size: 1
particle-size: 1
particle-size: 1
particle-size: 1
statement: if node == 2 && this'.__S0.Q_in.size() {
    this'.__S0.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 3 && this'.__S1.Q_in.size() {
    this'.__S1.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 4 && this'.__S2.Q_in.size() {
    this'.__S2.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: if node == 5 && this'.__S3.Q_in.size() {
    this'.__S3.__run();
}
particle-size: 2
particle-size: 2
statement: return this'.data.length
particle-size: 2
particle-size: 2
particle-size: 2
particle-size: 2
statement: return ()
particle-size: 8
particle-size: 8
particle-size: 8
particle-size: 6
repetition: 37
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
repetition: 38
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
repetition: 39
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
repetition: 40
statement: __d.__step()
particle-size: 6
particle-size: 6
statement: if this'.__H0.Q_in.size() || this'.__H0.Q_out.size() || this'.__H1.Q_in.size() || this'.__H1.Q_out.size() || this'.__S0.Q_in.size() || this'.__S0.Q_out.size() || this'.__S1.Q_in.size() || this'.__S1.Q_out.size() || this'.__S2.Q_in.size() || this'.__S2.Q_out.size() || this'.__S3.Q_in.size() || this'.__S3.Q_out.size() {
    (action,node) := this'.scheduler();
    if action {
        if node == 0 && this'.__H0.Q_out.size() {
            (pkt,port) := this'.__H0.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,1));
            }
        }
        if node == 1 && this'.__H1.Q_out.size() {
            (pkt,port) := this'.__H1.Q_out.takeFront();
            if port == 1 {
                this'.__S3.Q_in.pushBack((pkt,3));
            }
        }
        if node == 2 && this'.__S0.Q_out.size() {
            (pkt,port) := this'.__S0.Q_out.takeFront();
            if port == 1 {
                this'.__H0.Q_in.pushBack((pkt,1));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,1));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,1));
            }
            if port == 4 {
                this'.__S2.Q_in.pushBack((pkt,1));
            }
        }
        if node == 3 && this'.__S1.Q_out.size() {
            (pkt,port) := this'.__S1.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,2));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,2));
            }
        }
        if node == 4 && this'.__S2.Q_out.size() {
            (pkt,port) := this'.__S2.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,4));
            }
            if port == 2 {
                this'.__S1.Q_in.pushBack((pkt,2));
            }
            if port == 3 {
                this'.__S3.Q_in.pushBack((pkt,2));
            }
        }
        if node == 5 && this'.__S3.Q_out.size() {
            (pkt,port) := this'.__S3.Q_out.takeFront();
            if port == 1 {
                this'.__S0.Q_in.pushBack((pkt,3));
            }
            if port == 2 {
                this'.__S2.Q_in.pushBack((pkt,3));
            }
            if port == 3 {
                this'.__H1.Q_in.pushBack((pkt,1));
            }
        }
    } else {
        if node == 0 && this'.__H0.Q_in.size() {
            this'.__H0.__run();
        }
        if node == 1 && this'.__H1.Q_in.size() {
            this'.__H1.__run();
        }
        if node == 2 && this'.__S0.Q_in.size() {
            this'.__S0.__run();
        }
        if node == 3 && this'.__S1.Q_in.size() {
            this'.__S1.__run();
        }
        if node == 4 && this'.__S2.Q_in.size() {
            this'.__S2.__run();
        }
        if node == 5 && this'.__S3.Q_in.size() {
            this'.__S3.__run();
        }
    }
}
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return ()
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: assert(!(__d.__H0.Q_in.size() || __d.__H0.Q_out.size() || __d.__H1.Q_in.size() || __d.__H1.Q_out.size() || __d.__S0.Q_in.size() || __d.__S0.Q_out.size() || __d.__S1.Q_in.size() || __d.__S1.Q_out.size() || __d.__S2.Q_in.size() || __d.__S2.Q_out.size() || __d.__S3.Q_in.size() || __d.__S3.Q_out.size()))
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: return this'.data.length
particle-size: 6
particle-size: 6
particle-size: 6
particle-size: 6
statement: q₁ := Expectation(((if 1 == 0 {
    __d.__H0.pkt_count;
} else if 1 == 1 {
    __d.__H1.pkt_count;
} else {
    assert(0);
}) < 3) != 0)
particle-size: 6
statement: return (q₁)
particle-size: 6
E[q1_] = 2663191003150725233/5997013881313296384

real	9m54.508s
user	9m50.480s
sys	0m3.596s
